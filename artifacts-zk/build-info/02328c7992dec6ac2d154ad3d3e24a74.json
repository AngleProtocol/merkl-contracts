{"id":"02328c7992dec6ac2d154ad3d3e24a74","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\n        require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"contracts/Distributor.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\n/*\n                  *                                                  █                              \n                *****                                               ▓▓▓                             \n                  *                                               ▓▓▓▓▓▓▓                         \n                                   *            ///.           ▓▓▓▓▓▓▓▓▓▓▓▓▓                       \n                                 *****        ////////            ▓▓▓▓▓▓▓                          \n                                   *       /////////////            ▓▓▓                             \n                     ▓▓                  //////////////////          █         ▓▓                   \n                   ▓▓  ▓▓             ///////////////////////                ▓▓   ▓▓                \n                ▓▓       ▓▓        ////////////////////////////           ▓▓        ▓▓              \n              ▓▓            ▓▓    /////////▓▓▓///////▓▓▓/////////       ▓▓             ▓▓            \n           ▓▓                 ,////////////////////////////////////// ▓▓                 ▓▓         \n        ▓▓                  //////////////////////////////////////////                     ▓▓      \n      ▓▓                  //////////////////////▓▓▓▓/////////////////////                          \n                       ,////////////////////////////////////////////////////                        \n                    .//////////////////////////////////////////////////////////                     \n                     .//////////////////////////██.,//////////////////////////█                     \n                       .//////////////////////████..,./////////////////////██                       \n                        ...////////////////███████.....,.////////////////███                        \n                          ,.,////////////████████ ........,///////////████                          \n                            .,.,//////█████████      ,.......///////████                            \n                               ,..//████████           ........./████                               \n                                 ..,██████                .....,███                                 \n                                    .██                     ,.,█                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n               ▓▓            ▓▓▓▓▓▓▓▓▓▓       ▓▓▓▓▓▓▓▓▓▓        ▓▓               ▓▓▓▓▓▓▓▓▓▓          \n             ▓▓▓▓▓▓          ▓▓▓    ▓▓▓       ▓▓▓               ▓▓               ▓▓   ▓▓▓▓         \n           ▓▓▓    ▓▓▓        ▓▓▓    ▓▓▓       ▓▓▓    ▓▓▓        ▓▓               ▓▓▓▓▓             \n          ▓▓▓        ▓▓      ▓▓▓    ▓▓▓       ▓▓▓▓▓▓▓▓▓▓        ▓▓▓▓▓▓▓▓▓▓       ▓▓▓▓▓▓▓▓▓▓          \n*/\n\npragma solidity ^0.8.17;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport { SafeCast } from \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\nimport \"./utils/UUPSHelper.sol\";\n\nstruct MerkleTree {\n    // Root of a Merkle tree which leaves are `(address user, address token, uint amount)`\n    // representing an amount of tokens accumulated by `user`.\n    // The Merkle tree is assumed to have only increasing amounts: that is to say if a user can claim 1,\n    // then after the amount associated in the Merkle tree for this token should be x > 1\n    bytes32 merkleRoot;\n    // Ipfs hash of the tree data\n    bytes32 ipfsHash;\n}\n\nstruct Claim {\n    uint208 amount;\n    uint48 timestamp;\n    bytes32 merkleRoot;\n}\n\n/// @title Distributor\n/// @notice Allows to claim rewards distributed to them through Merkl\n/// @author Angle Labs. Inc\ncontract Distributor is UUPSHelper {\n    using SafeERC20 for IERC20;\n\n    /// @notice Epoch duration\n    uint32 internal constant _EPOCH_DURATION = 3600;\n\n    // ================================= VARIABLES =================================\n\n    /// @notice Tree of claimable tokens through this contract\n    MerkleTree public tree;\n\n    /// @notice Tree that was in place in the contract before the last `tree` update\n    MerkleTree public lastTree;\n\n    /// @notice Token to deposit to freeze the roots update\n    IERC20 public disputeToken;\n\n    /// @notice `Core` contract handling access control\n    ICore public core;\n\n    /// @notice Address which created the dispute\n    /// @dev Used to store if there is an ongoing dispute\n    address public disputer;\n\n    /// @notice When the current tree will become valid\n    uint48 public endOfDisputePeriod;\n\n    /// @notice Time after which a change in a tree becomes effective, in EPOCH_DURATION\n    uint48 public disputePeriod;\n\n    /// @notice Amount to deposit to freeze the roots update\n    uint256 public disputeAmount;\n\n    /// @notice Mapping user -> token -> amount to track claimed amounts\n    mapping(address => mapping(address => Claim)) public claimed;\n\n    /// @notice Trusted EOAs to update the Merkle root\n    mapping(address => uint256) public canUpdateMerkleRoot;\n\n    /// @notice Whether or not to disable permissionless claiming\n    mapping(address => uint256) public onlyOperatorCanClaim;\n\n    /// @notice user -> operator -> authorisation to claim\n    mapping(address => mapping(address => uint256)) public operators;\n\n    uint256[38] private __gap;\n\n    // =================================== EVENTS ==================================\n\n    event Claimed(address indexed user, address indexed token, uint256 amount);\n    event DisputeAmountUpdated(uint256 _disputeAmount);\n    event Disputed(string reason);\n    event DisputePeriodUpdated(uint48 _disputePeriod);\n    event DisputeResolved(bool valid);\n    event DisputeTokenUpdated(address indexed _disputeToken);\n    event OperatorClaimingToggled(address indexed user, bool isEnabled);\n    event OperatorToggled(address indexed user, address indexed operator, bool isWhitelisted);\n    event Recovered(address indexed token, address indexed to, uint256 amount);\n    event Revoked(); // With this event an indexer could maintain a table (timestamp, merkleRootUpdate)\n    event TreeUpdated(bytes32 merkleRoot, bytes32 ipfsHash, uint48 endOfDisputePeriod);\n    event TrustedToggled(address indexed eoa, bool trust);\n\n    // ================================= MODIFIERS =================================\n\n    /// @notice Checks whether the `msg.sender` has the governor role or the guardian role\n    modifier onlyGovernorOrGuardian() {\n        if (!core.isGovernorOrGuardian(msg.sender)) revert NotGovernorOrGuardian();\n        _;\n    }\n\n    /// @notice Checks whether the `msg.sender` has the governor role or the guardian role\n    modifier onlyGovernor() {\n        if (!core.isGovernor(msg.sender)) revert NotGovernor();\n        _;\n    }\n\n    /// @notice Checks whether the `msg.sender` is the `user` address or is a trusted address\n    modifier onlyTrustedOrUser(address user) {\n        if (user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1 && !core.isGovernorOrGuardian(msg.sender))\n            revert NotTrusted();\n        _;\n    }\n\n    // ================================ CONSTRUCTOR ================================\n\n    constructor() initializer {}\n\n    function initialize(ICore _core) external initializer {\n        if (address(_core) == address(0)) revert ZeroAddress();\n        core = _core;\n    }\n\n    /// @inheritdoc UUPSUpgradeable\n    function _authorizeUpgrade(address) internal view override onlyGovernorUpgrader(core) {}\n\n    // =============================== MAIN FUNCTION ===============================\n\n    /// @notice Claims rewards for a given set of users\n    /// @dev Anyone may call this function for anyone else, funds go to destination regardless, it's just a question of\n    /// who provides the proof and pays the gas: `msg.sender` is used only for addresses that require a trusted operator\n    /// @param users Recipient of tokens\n    /// @param tokens ERC20 claimed\n    /// @param amounts Amount of tokens that will be sent to the corresponding users\n    /// @param proofs Array of hashes bridging from a leaf `(hash of user | token | amount)` to the Merkle root\n    function claim(\n        address[] calldata users,\n        address[] calldata tokens,\n        uint256[] calldata amounts,\n        bytes32[][] calldata proofs\n    ) external {\n        uint256 usersLength = users.length;\n        if (\n            usersLength == 0 ||\n            usersLength != tokens.length ||\n            usersLength != amounts.length ||\n            usersLength != proofs.length\n        ) revert InvalidLengths();\n\n        for (uint256 i; i < usersLength; ) {\n            address user = users[i];\n            address token = tokens[i];\n            uint256 amount = amounts[i];\n\n            // Only approved operator can claim for `user`\n            if (msg.sender != user && operators[user][msg.sender] == 0) revert NotWhitelisted();\n\n            // Verifying proof\n            bytes32 leaf = keccak256(abi.encode(user, token, amount));\n            if (!_verifyProof(leaf, proofs[i])) revert InvalidProof();\n\n            // Closing reentrancy gate here\n            uint256 toSend = amount - claimed[user][token].amount;\n            claimed[user][token] = Claim(SafeCast.toUint208(amount), uint48(block.timestamp), getMerkleRoot());\n\n            IERC20(token).safeTransfer(user, toSend);\n            emit Claimed(user, token, toSend);\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /// @notice Returns the MerkleRoot that is currently live for the contract\n    function getMerkleRoot() public view returns (bytes32) {\n        if (block.timestamp >= endOfDisputePeriod && disputer == address(0)) return tree.merkleRoot;\n        else return lastTree.merkleRoot;\n    }\n\n    // ============================ GOVERNANCE FUNCTIONS ===========================\n\n    /// @notice Adds or removes EOAs which are trusted to update the Merkle root\n    function toggleTrusted(address eoa) external onlyGovernor {\n        uint256 trustedStatus = 1 - canUpdateMerkleRoot[eoa];\n        canUpdateMerkleRoot[eoa] = trustedStatus;\n        emit TrustedToggled(eoa, trustedStatus == 1);\n    }\n\n    /// @notice Updates Merkle Tree\n    function updateTree(MerkleTree calldata _tree) external {\n        if (\n            disputer != address(0) ||\n            // A trusted address cannot update a tree right after a precedent tree update otherwise it can de facto\n            // validate a tree which has not passed the dispute period\n            ((canUpdateMerkleRoot[msg.sender] != 1 || block.timestamp < endOfDisputePeriod) &&\n                !core.isGovernor(msg.sender))\n        ) revert NotTrusted();\n        MerkleTree memory _lastTree = tree;\n        tree = _tree;\n        lastTree = _lastTree;\n\n        uint48 _endOfPeriod = _endOfDisputePeriod(uint48(block.timestamp));\n        endOfDisputePeriod = _endOfPeriod;\n        emit TreeUpdated(_tree.merkleRoot, _tree.ipfsHash, _endOfPeriod);\n    }\n\n    /// @notice Freezes the Merkle tree update until the dispute is resolved\n    /// @dev Requires a deposit of `disputeToken` that'll be slashed if the dispute is not accepted\n    /// @dev It is only possible to create a dispute within `disputePeriod` after each tree update\n    function disputeTree(string memory reason) external {\n        if (disputer != address(0)) revert UnresolvedDispute();\n        if (block.timestamp >= endOfDisputePeriod) revert InvalidDispute();\n        IERC20(disputeToken).safeTransferFrom(msg.sender, address(this), disputeAmount);\n        disputer = msg.sender;\n        emit Disputed(reason);\n    }\n\n    /// @notice Resolve the ongoing dispute, if any\n    /// @param valid Whether the dispute was valid\n    function resolveDispute(bool valid) external onlyGovernor {\n        if (disputer == address(0)) revert NoDispute();\n        if (valid) {\n            IERC20(disputeToken).safeTransfer(disputer, disputeAmount);\n            // If a dispute is valid, the contract falls back to the last tree that was updated\n            _revokeTree();\n        } else {\n            IERC20(disputeToken).safeTransfer(msg.sender, disputeAmount);\n            endOfDisputePeriod = _endOfDisputePeriod(uint48(block.timestamp));\n        }\n        disputer = address(0);\n        emit DisputeResolved(valid);\n    }\n\n    /// @notice Allows the governor of this contract to fallback to the last version of the tree\n    /// immediately\n    function revokeTree() external onlyGovernor {\n        if (disputer != address(0)) revert UnresolvedDispute();\n        _revokeTree();\n    }\n\n    /// @notice Toggles permissioned claiming for a given user\n    /// @dev deprecated\n    function toggleOnlyOperatorCanClaim(address user) external onlyTrustedOrUser(user) {\n        uint256 oldValue = onlyOperatorCanClaim[user];\n        onlyOperatorCanClaim[user] = 1 - oldValue;\n        emit OperatorClaimingToggled(user, oldValue == 0);\n    }\n\n    /// @notice Toggles whitelisting for a given user and a given operator\n    function toggleOperator(address user, address operator) external onlyTrustedOrUser(user) {\n        uint256 oldValue = operators[user][operator];\n        operators[user][operator] = 1 - oldValue;\n        emit OperatorToggled(user, operator, oldValue == 0);\n    }\n\n    /// @notice Recovers any ERC20 token\n    function recoverERC20(address tokenAddress, address to, uint256 amountToRecover) external onlyGovernor {\n        IERC20(tokenAddress).safeTransfer(to, amountToRecover);\n        emit Recovered(tokenAddress, to, amountToRecover);\n    }\n\n    /// @notice Sets the dispute period after which a tree update becomes effective\n    function setDisputePeriod(uint48 _disputePeriod) external onlyGovernor {\n        disputePeriod = uint48(_disputePeriod);\n        emit DisputePeriodUpdated(_disputePeriod);\n    }\n\n    /// @notice Sets the token used as a caution during disputes\n    function setDisputeToken(IERC20 _disputeToken) external onlyGovernor {\n        if (disputer != address(0)) revert UnresolvedDispute();\n        disputeToken = _disputeToken;\n        emit DisputeTokenUpdated(address(_disputeToken));\n    }\n\n    /// @notice Sets the amount of `disputeToken` used as a caution during disputes\n    function setDisputeAmount(uint256 _disputeAmount) external onlyGovernor {\n        if (disputer != address(0)) revert UnresolvedDispute();\n        disputeAmount = _disputeAmount;\n        emit DisputeAmountUpdated(_disputeAmount);\n    }\n\n    // ============================= INTERNAL FUNCTIONS ============================\n\n    /// @notice Fallback to the last version of the tree\n    function _revokeTree() internal {\n        MerkleTree memory _tree = lastTree;\n        endOfDisputePeriod = 0;\n        tree = _tree;\n        emit Revoked();\n        emit TreeUpdated(\n            _tree.merkleRoot,\n            _tree.ipfsHash,\n            (uint48(block.timestamp) / _EPOCH_DURATION) * (_EPOCH_DURATION) // Last hour\n        );\n    }\n\n    /// @notice Returns the end of the dispute period\n    /// @dev treeUpdate is rounded up to next hour and then `disputePeriod` hours are added\n    function _endOfDisputePeriod(uint48 treeUpdate) internal view returns (uint48) {\n        return ((treeUpdate - 1) / _EPOCH_DURATION + 1 + disputePeriod) * (_EPOCH_DURATION);\n    }\n\n    /// @notice Checks the validity of a proof\n    /// @param leaf Hashed leaf data, the starting point of the proof\n    /// @param proof Array of hashes forming a hash chain from leaf to root\n    /// @return true If proof is correct, else false\n    function _verifyProof(bytes32 leaf, bytes32[] memory proof) internal view returns (bool) {\n        bytes32 currentHash = leaf;\n        uint256 proofLength = proof.length;\n        for (uint256 i; i < proofLength; ) {\n            if (currentHash < proof[i]) {\n                currentHash = keccak256(abi.encode(currentHash, proof[i]));\n            } else {\n                currentHash = keccak256(abi.encode(proof[i], currentHash));\n            }\n            unchecked {\n                ++i;\n            }\n        }\n        bytes32 root = getMerkleRoot();\n        if (root == bytes32(0)) revert InvalidUninitializedRoot();\n        return currentHash == root;\n    }\n}\n"},"contracts/interfaces/ICore.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.17;\n\n/// @title ICore\n/// @author Angle Labs, Inc.\n/// @notice Interface for the `Core` contracts of smart contract modules used in Angle Labs contracts\ninterface ICore {\n    /// @notice Checks whether an address is governor\n    /// @param admin Address to check\n    /// @return Whether the address has the `GOVERNOR_ROLE` or not\n    function isGovernor(address admin) external view returns (bool);\n\n    /// @notice Checks whether an address is a governor or a guardian of a module\n    /// @param admin Address to check\n    /// @return Whether the address has the `GUARDIAN_ROLE` or not\n    /// @dev Governance should make sure when adding a governor to also give this governor the guardian\n    /// role by calling the `addGovernor` function\n    function isGovernorOrGuardian(address admin) external view returns (bool);\n}\n"},"contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.17;\n\nerror CampaignDoesNotExist();\nerror CampaignAlreadyExists();\nerror CampaignDurationBelowHour();\nerror CampaignRewardTokenNotWhitelisted();\nerror CampaignRewardTooLow();\nerror CampaignSouldStartInFuture();\nerror InvalidDispute();\nerror InvalidLengths();\nerror InvalidParam();\nerror InvalidParams();\nerror InvalidProof();\nerror InvalidUninitializedRoot();\nerror InvalidReward();\nerror InvalidSignature();\nerror NoDispute();\nerror NotGovernor();\nerror NotGovernorOrGuardian();\nerror NotSigned();\nerror NotTrusted();\nerror NotWhitelisted();\nerror UnresolvedDispute();\nerror ZeroAddress();\n"},"contracts/utils/UUPSHelper.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\n/*\n                  *                                                  █                              \n                *****                                               ▓▓▓                             \n                  *                                               ▓▓▓▓▓▓▓                         \n                                   *            ///.           ▓▓▓▓▓▓▓▓▓▓▓▓▓                       \n                                 *****        ////////            ▓▓▓▓▓▓▓                          \n                                   *       /////////////            ▓▓▓                             \n                     ▓▓                  //////////////////          █         ▓▓                   \n                   ▓▓  ▓▓             ///////////////////////                ▓▓   ▓▓                \n                ▓▓       ▓▓        ////////////////////////////           ▓▓        ▓▓              \n              ▓▓            ▓▓    /////////▓▓▓///////▓▓▓/////////       ▓▓             ▓▓            \n           ▓▓                 ,////////////////////////////////////// ▓▓                 ▓▓         \n        ▓▓                  //////////////////////////////////////////                     ▓▓      \n      ▓▓                  //////////////////////▓▓▓▓/////////////////////                          \n                       ,////////////////////////////////////////////////////                        \n                    .//////////////////////////////////////////////////////////                     \n                     .//////////////////////////██.,//////////////////////////█                     \n                       .//////////////////////████..,./////////////////////██                       \n                        ...////////////////███████.....,.////////////////███                        \n                          ,.,////////////████████ ........,///////////████                          \n                            .,.,//////█████████      ,.......///////████                            \n                               ,..//████████           ........./████                               \n                                 ..,██████                .....,███                                 \n                                    .██                     ,.,█                                    \n                                                                                                    \n                                                                                                    \n                                                                                                    \n               ▓▓            ▓▓▓▓▓▓▓▓▓▓       ▓▓▓▓▓▓▓▓▓▓        ▓▓               ▓▓▓▓▓▓▓▓▓▓          \n             ▓▓▓▓▓▓          ▓▓▓    ▓▓▓       ▓▓▓               ▓▓               ▓▓   ▓▓▓▓         \n           ▓▓▓    ▓▓▓        ▓▓▓    ▓▓▓       ▓▓▓    ▓▓▓        ▓▓               ▓▓▓▓▓             \n          ▓▓▓        ▓▓      ▓▓▓    ▓▓▓       ▓▓▓▓▓▓▓▓▓▓        ▓▓▓▓▓▓▓▓▓▓       ▓▓▓▓▓▓▓▓▓▓          \n*/\n\npragma solidity ^0.8.17;\n\nimport { UUPSUpgradeable } from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\nimport { ICore } from \"../interfaces/ICore.sol\";\nimport \"../utils/Errors.sol\";\n\n/// @title UUPSHelper\n/// @notice Helper contract for UUPSUpgradeable contracts where the upgradeability is controlled by a specific address\n/// @author Angle Labs., Inc\n/// @dev The 0 address check in the modifier allows the use of these modifiers during initialization\nabstract contract UUPSHelper is UUPSUpgradeable {\n    modifier onlyGuardianUpgrader(ICore _core) {\n        if (address(_core) != address(0) && !_core.isGovernorOrGuardian(msg.sender)) revert NotGovernorOrGuardian();\n        _;\n    }\n\n    modifier onlyGovernorUpgrader(ICore _core) {\n        if (address(_core) != address(0) && !_core.isGovernor(msg.sender)) revert NotGovernor();\n        _;\n    }\n\n    constructor() initializer {}\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"viaIR":false,"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.4.1","sources":{"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[9]},"id":10,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:203:0","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":9,"linearizedBaseContracts":[9],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"387:438:0","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":8,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:0","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"852:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8,"src":"878:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:0"},"scope":9,"src":"830:57:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10,"src":"342:547:0","usedErrors":[]}],"src":"113:777:0"}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[977],"ERC1967UpgradeUpgradeable":[378],"IBeaconUpgradeable":[388],"IERC1822ProxiableUpgradeable":[9],"Initializable":[557],"StorageSlotUpgradeable":[1037]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":12,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":379,"sourceUnit":389,"src":"141:42:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":13,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":379,"sourceUnit":10,"src":"184:56:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":14,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":379,"sourceUnit":978,"src":"241:44:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":15,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":379,"sourceUnit":1038,"src":"286:48:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":16,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":379,"sourceUnit":558,"src":"335:36:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":18,"name":"Initializable","nameLocations":["657:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"657:13:1"},"id":19,"nodeType":"InheritanceSpecifier","src":"657:13:1"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"373:236:1","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"},"fullyImplemented":true,"id":378,"linearizedBaseContracts":[378,557],"name":"ERC1967UpgradeUpgradeable","nameLocation":"628:25:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":24,"nodeType":"Block","src":"736:7:1","statements":[]},"id":25,"implemented":true,"kind":"function","modifiers":[{"id":22,"kind":"modifierInvocation","modifierName":{"id":21,"name":"onlyInitializing","nameLocations":["719:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":502,"src":"719:16:1"},"nodeType":"ModifierInvocation","src":"719:16:1"}],"name":"__ERC1967Upgrade_init","nameLocation":"686:21:1","nodeType":"FunctionDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"707:2:1"},"returnParameters":{"id":23,"nodeType":"ParameterList","parameters":[],"src":"736:0:1"},"scope":378,"src":"677:66:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"818:7:1","statements":[]},"id":31,"implemented":true,"kind":"function","modifiers":[{"id":28,"kind":"modifierInvocation","modifierName":{"id":27,"name":"onlyInitializing","nameLocations":["801:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":502,"src":"801:16:1"},"nodeType":"ModifierInvocation","src":"801:16:1"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"758:31:1","nodeType":"FunctionDefinition","parameters":{"id":26,"nodeType":"ParameterList","parameters":[],"src":"789:2:1"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"818:0:1"},"scope":378,"src":"749:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":34,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"934:14:1","nodeType":"VariableDeclaration","scope":378,"src":"909:108:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"909:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:66:1","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"1024:214:1","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":38,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1269:20:1","nodeType":"VariableDeclaration","scope":378,"src":"1243:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1243:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1292:66:1","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"1365:68:1","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":43,"name":"Upgraded","nameLocation":"1444:8:1","nodeType":"EventDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1469:14:1","nodeType":"VariableDeclaration","scope":43,"src":"1453:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1453:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1452:32:1"},"src":"1438:47:1"},{"body":{"id":55,"nodeType":"Block","src":"1625:89:1","statements":[{"expression":{"expression":{"arguments":[{"id":51,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1680:20:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":49,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"1642:22:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1037_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1665:14:1","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1003,"src":"1642:37:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$983_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$983_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":53,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1702:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":982,"src":"1642:65:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":48,"id":54,"nodeType":"Return","src":"1635:72:1"}]},"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"1491:67:1","text":" @dev Returns the current implementation address."},"id":56,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1572:18:1","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"1590:2:1"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56,"src":"1616:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:9:1"},"scope":378,"src":"1563:151:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":79,"nodeType":"Block","src":"1868:218:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":65,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"1916:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":63,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1886:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$977_$","typeString":"type(library AddressUpgradeable)"}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1905:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":711,"src":"1886:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1886:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":67,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1936:47:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":62,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1878:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1878:106:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":69,"nodeType":"ExpressionStatement","src":"1878:106:1"},{"expression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":73,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"2032:20:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":70,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"1994:22:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1037_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2017:14:1","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1003,"src":"1994:37:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$983_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1994:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$983_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2054:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":982,"src":"1994:65:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":76,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"2062:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1994:85:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":78,"nodeType":"ExpressionStatement","src":"1994:85:1"}]},"documentation":{"id":57,"nodeType":"StructuredDocumentation","src":"1720:80:1","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":80,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1814:18:1","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"newImplementation","nameLocation":"1841:17:1","nodeType":"VariableDeclaration","scope":80,"src":"1833:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1832:27:1"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"1868:0:1"},"scope":378,"src":"1805:281:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":94,"nodeType":"Block","src":"2248:96:1","statements":[{"expression":{"arguments":[{"id":87,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2277:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2258:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2258:37:1"},{"eventCall":{"arguments":[{"id":91,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2319:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2310:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2310:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":93,"nodeType":"EmitStatement","src":"2305:32:1"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2092:95:1","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":95,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2201:10:1","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"newImplementation","nameLocation":"2220:17:1","nodeType":"VariableDeclaration","scope":95,"src":"2212:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2211:27:1"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"2248:0:1"},"scope":378,"src":"2192:152:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":122,"nodeType":"Block","src":"2606:160:1","statements":[{"expression":{"arguments":[{"id":106,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2627:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"2616:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2616:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":108,"nodeType":"ExpressionStatement","src":"2616:29:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":109,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2659:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2664:6:1","memberName":"length","nodeType":"MemberAccess","src":"2659:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2673:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2659:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":113,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2678:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2659:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":121,"nodeType":"IfStatement","src":"2655:105:1","trueBody":{"id":120,"nodeType":"Block","src":"2689:71:1","statements":[{"expression":{"arguments":[{"id":116,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2725:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":117,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2744:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":115,"name":"_functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2703:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2703:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":119,"nodeType":"ExpressionStatement","src":"2703:46:1"}]}}]},"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"2350:123:1","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":123,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2487:17:1","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"newImplementation","nameLocation":"2522:17:1","nodeType":"VariableDeclaration","scope":123,"src":"2514:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2514:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"data","nameLocation":"2562:4:1","nodeType":"VariableDeclaration","scope":123,"src":"2549:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":99,"name":"bytes","nodeType":"ElementaryTypeName","src":"2549:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"forceCall","nameLocation":"2581:9:1","nodeType":"VariableDeclaration","scope":123,"src":"2576:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":101,"name":"bool","nodeType":"ElementaryTypeName","src":"2576:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2504:92:1"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"2606:0:1"},"scope":378,"src":"2478:288:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"3070:842:1","statements":[{"condition":{"expression":{"arguments":[{"id":135,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"3422:14:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":133,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"3384:22:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1037_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:14:1","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1014,"src":"3384:37:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$986_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$986_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3438:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":985,"src":"3384:59:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":173,"nodeType":"Block","src":"3513:393:1","statements":[{"clauses":[{"block":{"id":158,"nodeType":"Block","src":"3618:115:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":152,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"3644:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":153,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"3652:20:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3644:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3674:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3636:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:82:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":157,"nodeType":"ExpressionStatement","src":"3636:82:1"}]},"errorName":"","id":159,"nodeType":"TryCatchClause","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"slot","nameLocation":"3612:4:1","nodeType":"VariableDeclaration","scope":159,"src":"3604:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3604:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3603:14:1"},"src":"3595:138:1"},{"block":{"id":164,"nodeType":"Block","src":"3740:89:1","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3765:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":160,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3758:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3758:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":163,"nodeType":"ExpressionStatement","src":"3758:56:1"}]},"errorName":"","id":165,"nodeType":"TryCatchClause","src":"3734:95:1"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":144,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"3560:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":143,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3531:28:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$9_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3531:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$9","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3579:13:1","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":8,"src":"3531:61:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3531:63:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":166,"nodeType":"TryStatement","src":"3527:302:1"},{"expression":{"arguments":[{"id":168,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"3860:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":169,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3879:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":170,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"3885:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":167,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3842:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":172,"nodeType":"ExpressionStatement","src":"3842:53:1"}]},"id":174,"nodeType":"IfStatement","src":"3380:526:1","trueBody":{"id":142,"nodeType":"Block","src":"3445:62:1","statements":[{"expression":{"arguments":[{"id":139,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"3478:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":138,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3459:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3459:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":141,"nodeType":"ExpressionStatement","src":"3459:37:1"}]}}]},"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"2772:161:1","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2947:21:1","nodeType":"FunctionDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"newImplementation","nameLocation":"2986:17:1","nodeType":"VariableDeclaration","scope":176,"src":"2978:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"2978:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"data","nameLocation":"3026:4:1","nodeType":"VariableDeclaration","scope":176,"src":"3013:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":127,"name":"bytes","nodeType":"ElementaryTypeName","src":"3013:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"forceCall","nameLocation":"3045:9:1","nodeType":"VariableDeclaration","scope":176,"src":"3040:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"3040:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2968:92:1"},"returnParameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"3070:0:1"},"scope":378,"src":"2938:974:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"3918:189:1","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":180,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"4138:11:1","nodeType":"VariableDeclaration","scope":378,"src":"4112:106:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4112:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4152:66:1","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"4225:67:1","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":187,"name":"AdminChanged","nameLocation":"4303:12:1","nodeType":"EventDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"4324:13:1","nodeType":"VariableDeclaration","scope":187,"src":"4316:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"4316:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"4347:8:1","nodeType":"VariableDeclaration","scope":187,"src":"4339:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"4339:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4315:41:1"},"src":"4297:60:1"},{"body":{"id":199,"nodeType":"Block","src":"4471:80:1","statements":[{"expression":{"expression":{"arguments":[{"id":195,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"4526:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":193,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4488:22:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1037_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4511:14:1","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1003,"src":"4488:37:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$983_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4488:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$983_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4539:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":982,"src":"4488:56:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":192,"id":198,"nodeType":"Return","src":"4481:63:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"4363:50:1","text":" @dev Returns the current admin."},"id":200,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4427:9:1","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"4436:2:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"4462:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"4462:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4461:9:1"},"scope":378,"src":"4418:133:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":225,"nodeType":"Block","src":"4678:167:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":207,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"4696:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4708:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:1","typeDescriptions":{}}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4708:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4696:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4720:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4688:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4688:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"ExpressionStatement","src":"4688:73:1"},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":219,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"4809:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":216,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4771:22:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1037_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:1","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1003,"src":"4771:37:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$983_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$983_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":982,"src":"4771:56:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":222,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"4830:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4771:67:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":224,"nodeType":"ExpressionStatement","src":"4771:67:1"}]},"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"4557:71:1","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":226,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4642:9:1","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"newAdmin","nameLocation":"4660:8:1","nodeType":"VariableDeclaration","scope":226,"src":"4652:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4651:18:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"4678:0:1"},"scope":378,"src":"4633:212:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":242,"nodeType":"Block","src":"5005:86:1","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":233,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"5033:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5033:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":235,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5046:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":232,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"5020:12:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":237,"nodeType":"EmitStatement","src":"5015:40:1"},{"expression":{"arguments":[{"id":239,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5075:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":238,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"5065:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":241,"nodeType":"ExpressionStatement","src":"5065:19:1"}]},"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"4851:100:1","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":243,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4965:12:1","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"newAdmin","nameLocation":"4986:8:1","nodeType":"VariableDeclaration","scope":243,"src":"4978:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4978:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4977:18:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"5005:0:1"},"scope":378,"src":"4956:135:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"5097:232:1","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":247,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5360:12:1","nodeType":"VariableDeclaration","scope":378,"src":"5334:107:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5334:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5375:66:1","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":248,"nodeType":"StructuredDocumentation","src":"5448:60:1","text":" @dev Emitted when the beacon is upgraded."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":252,"name":"BeaconUpgraded","nameLocation":"5519:14:1","nodeType":"EventDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"5550:6:1","nodeType":"VariableDeclaration","scope":252,"src":"5534:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"5534:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5533:24:1"},"src":"5513:45:1"},{"body":{"id":264,"nodeType":"Block","src":"5674:81:1","statements":[{"expression":{"expression":{"arguments":[{"id":260,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"5729:12:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":258,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"5691:22:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1037_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5714:14:1","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1003,"src":"5691:37:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$983_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5691:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$983_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5743:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":982,"src":"5691:57:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":257,"id":263,"nodeType":"Return","src":"5684:64:1"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"5564:51:1","text":" @dev Returns the current beacon."},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5629:10:1","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"5639:2:1"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":265,"src":"5665:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"5665:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5664:9:1"},"scope":378,"src":"5620:135:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":300,"nodeType":"Block","src":"5884:368:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":274,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"5932:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":272,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"5902:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$977_$","typeString":"type(library AddressUpgradeable)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5921:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":711,"src":"5902:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5902:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5944:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5894:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:90:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"ExpressionStatement","src":"5894:90:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":283,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"6064:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":282,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6045:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$388_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6045:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$388","typeString":"contract IBeaconUpgradeable"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6075:14:1","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":387,"src":"6045:44:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6045:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":280,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"6015:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$977_$","typeString":"type(library AddressUpgradeable)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6034:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":711,"src":"6015:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6015:77:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6106:50:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5994:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:172:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":290,"nodeType":"ExpressionStatement","src":"5994:172:1"},{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":294,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"6214:12:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":291,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"6176:22:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1037_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6199:14:1","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1003,"src":"6176:37:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$983_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6176:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$983_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6228:5:1","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":982,"src":"6176:57:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":297,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"6236:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6176:69:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":299,"nodeType":"ExpressionStatement","src":"6176:69:1"}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"5761:71:1","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":301,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5846:10:1","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"newBeacon","nameLocation":"5865:9:1","nodeType":"VariableDeclaration","scope":301,"src":"5857:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"5857:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5856:19:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"5884:0:1"},"scope":378,"src":"5837:415:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":336,"nodeType":"Block","src":"6681:221:1","statements":[{"expression":{"arguments":[{"id":312,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"6702:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":311,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"6691:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6691:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"6691:21:1"},{"eventCall":{"arguments":[{"id":316,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"6742:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":315,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"6727:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6727:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":318,"nodeType":"EmitStatement","src":"6722:30:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":319,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"6766:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6771:6:1","memberName":"length","nodeType":"MemberAccess","src":"6766:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6780:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6766:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":323,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"6785:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6766:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":335,"nodeType":"IfStatement","src":"6762:134:1","trueBody":{"id":334,"nodeType":"Block","src":"6796:100:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":327,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"6851:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":326,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6832:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$388_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6832:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$388","typeString":"contract IBeaconUpgradeable"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6862:14:1","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":387,"src":"6832:44:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6832:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":331,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"6880:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":325,"name":"_functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"6810:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6810:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":333,"nodeType":"ExpressionStatement","src":"6810:75:1"}]}}]},"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6258:292:1","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":337,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6564:23:1","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"newBeacon","nameLocation":"6605:9:1","nodeType":"VariableDeclaration","scope":337,"src":"6597:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"6597:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"data","nameLocation":"6637:4:1","nodeType":"VariableDeclaration","scope":337,"src":"6624:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":305,"name":"bytes","nodeType":"ElementaryTypeName","src":"6624:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"forceCall","nameLocation":"6656:9:1","nodeType":"VariableDeclaration","scope":337,"src":"6651:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":307,"name":"bool","nodeType":"ElementaryTypeName","src":"6651:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6587:84:1"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[],"src":"6681:0:1"},"scope":378,"src":"6555:347:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":371,"nodeType":"Block","src":"7185:358:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":350,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"7233:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":348,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"7203:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$977_$","typeString":"type(library AddressUpgradeable)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7222:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":711,"src":"7203:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7242:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7195:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7195:88:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"7195:88:1"},{"assignments":[356,358],"declarations":[{"constant":false,"id":356,"mutability":"mutable","name":"success","nameLocation":"7359:7:1","nodeType":"VariableDeclaration","scope":371,"src":"7354:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":355,"name":"bool","nodeType":"ElementaryTypeName","src":"7354:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"returndata","nameLocation":"7381:10:1","nodeType":"VariableDeclaration","scope":371,"src":"7368:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":357,"name":"bytes","nodeType":"ElementaryTypeName","src":"7368:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":363,"initialValue":{"arguments":[{"id":361,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"7415:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":359,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"7395:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7402:12:1","memberName":"delegatecall","nodeType":"MemberAccess","src":"7395:19:1","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7395:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7353:67:1"},{"expression":{"arguments":[{"id":366,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"7473:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":367,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"7482:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7494:41:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"expression":{"id":364,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"7437:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$977_$","typeString":"type(library AddressUpgradeable)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7456:16:1","memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":956,"src":"7437:35:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":346,"id":370,"nodeType":"Return","src":"7430:106:1"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"6908:175:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":372,"implemented":true,"kind":"function","modifiers":[],"name":"_functionDelegateCall","nameLocation":"7097:21:1","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"target","nameLocation":"7127:6:1","nodeType":"VariableDeclaration","scope":372,"src":"7119:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"7119:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"data","nameLocation":"7148:4:1","nodeType":"VariableDeclaration","scope":372,"src":"7135:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":341,"name":"bytes","nodeType":"ElementaryTypeName","src":"7135:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7118:35:1"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"7171:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":344,"name":"bytes","nodeType":"ElementaryTypeName","src":"7171:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7170:14:1"},"scope":378,"src":"7088:455:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"7549:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":377,"mutability":"mutable","name":"__gap","nameLocation":"7828:5:1","nodeType":"VariableDeclaration","scope":378,"src":"7808:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"7808:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"length":{"hexValue":"3530","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:2:1","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"7808:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":379,"src":"610:7226:1","usedErrors":[]}],"src":"116:7721:1"}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"118:79:2","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IBeaconUpgradeable","nameLocation":"208:18:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"233:162:2","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:2","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"423:2:2"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"449:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:2"},"scope":388,"src":"400:58:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":389,"src":"198:262:2","usedErrors":[]}],"src":"93:368:2"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[977],"Initializable":[557]},"id":558,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":558,"sourceUnit":978,"src":"138:44:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"184:2198:3","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":557,"linearizedBaseContracts":[557],"name":"Initializable","nameLocation":"2401:13:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"2421:109:3","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":395,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:3","nodeType":"VariableDeclaration","scope":557,"src":"2535:26:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":394,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"2568:91:3","text":" @dev Indicates that the contract is in the process of being initialized."},"id":398,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:3","nodeType":"VariableDeclaration","scope":557,"src":"2664:26:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"2697:90:3","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":403,"name":"Initialized","nameLocation":"2798:11:3","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:3","nodeType":"VariableDeclaration","scope":403,"src":"2810:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":400,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:3"},"src":"2792:33:3"},{"body":{"id":458,"nodeType":"Block","src":"3258:483:3","statements":[{"assignments":[407],"declarations":[{"constant":false,"id":407,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:3","nodeType":"VariableDeclaration","scope":458,"src":"3268:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":406,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":410,"initialValue":{"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:3","subExpression":{"id":408,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"3291:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3336:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":413,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"3354:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:45:3","subExpression":{"arguments":[{"arguments":[{"id":422,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3415:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$557","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$557","typeString":"contract Initializable"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3407:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3407:7:3","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3407:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":418,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"3377:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$977_$","typeString":"type(library AddressUpgradeable)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3396:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":711,"src":"3377:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":426,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"3425:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:66:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:68:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:108:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3457:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:201:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"3314:201:3"},{"expression":{"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":435,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"3525:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3525:16:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":438,"nodeType":"ExpressionStatement","src":"3525:16:3"},{"condition":{"id":439,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3555:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":445,"nodeType":"IfStatement","src":"3551:65:3","trueBody":{"id":444,"nodeType":"Block","src":"3571:45:3","statements":[{"expression":{"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":440,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"3585:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3601:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3585:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":443,"nodeType":"ExpressionStatement","src":"3585:20:3"}]}},{"id":446,"nodeType":"PlaceholderStatement","src":"3625:1:3"},{"condition":{"id":447,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3640:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":457,"nodeType":"IfStatement","src":"3636:99:3","trueBody":{"id":456,"nodeType":"Block","src":"3656:79:3","statements":[{"expression":{"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":448,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"3670:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3686:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3670:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":451,"nodeType":"ExpressionStatement","src":"3670:21:3"},{"eventCall":{"arguments":[{"hexValue":"31","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":452,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3710:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"EmitStatement","src":"3705:19:3"}]}}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"2831:399:3","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":459,"name":"initializer","nameLocation":"3244:11:3","nodeType":"ModifierDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"3255:2:3"},"src":"3235:506:3","virtual":false,"visibility":"internal"},{"body":{"id":491,"nodeType":"Block","src":"4852:255:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:14:3","subExpression":{"id":465,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"4871:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":467,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4888:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":468,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4903:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4888:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4870:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":464,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4862:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4862:99:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":473,"nodeType":"ExpressionStatement","src":"4862:99:3"},{"expression":{"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":474,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4971:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":475,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4986:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4971:22:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":477,"nodeType":"ExpressionStatement","src":"4971:22:3"},{"expression":{"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":478,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"5003:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5019:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5003:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":481,"nodeType":"ExpressionStatement","src":"5003:20:3"},{"id":482,"nodeType":"PlaceholderStatement","src":"5033:1:3"},{"expression":{"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":483,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"5044:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5060:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5044:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":486,"nodeType":"ExpressionStatement","src":"5044:21:3"},{"eventCall":{"arguments":[{"id":488,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5092:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":487,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"5080:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"EmitStatement","src":"5075:25:3"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"3747:1062:3","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":492,"name":"reinitializer","nameLocation":"4823:13:3","nodeType":"ModifierDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"version","nameLocation":"4843:7:3","nodeType":"VariableDeclaration","scope":492,"src":"4837:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":461,"name":"uint8","nodeType":"ElementaryTypeName","src":"4837:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4836:15:3"},"src":"4814:293:3","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"5345:97:3","statements":[{"expression":{"arguments":[{"id":496,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"5363:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:45:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5355:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"5355:69:3"},{"id":500,"nodeType":"PlaceholderStatement","src":"5434:1:3"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"5113:199:3","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":502,"name":"onlyInitializing","nameLocation":"5326:16:3","nodeType":"ModifierDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[],"src":"5342:2:3"},"src":"5317:125:3","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"5977:230:3","statements":[{"expression":{"arguments":[{"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5995:14:3","subExpression":{"id":507,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"5996:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6011:41:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":506,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5987:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5987:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"5987:66:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":512,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6067:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":514,"name":"uint8","nodeType":"ElementaryTypeName","src":"6087:5:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":513,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6082:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6094:3:3","memberName":"max","nodeType":"MemberAccess","src":"6082:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6067:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"6063:138:3","trueBody":{"id":535,"nodeType":"Block","src":"6099:102:3","statements":[{"expression":{"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":519,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6113:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":521,"name":"uint8","nodeType":"ElementaryTypeName","src":"6133:5:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":520,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6128:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6140:3:3","memberName":"max","nodeType":"MemberAccess","src":"6128:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6113:30:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":526,"nodeType":"ExpressionStatement","src":"6113:30:3"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6179:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":529,"name":"uint8","nodeType":"ElementaryTypeName","src":"6179:5:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":528,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6174:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6186:3:3","memberName":"max","nodeType":"MemberAccess","src":"6174:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":527,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6162:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6162:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"EmitStatement","src":"6157:33:3"}]}}]},"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"5448:475:3","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5937:20:3","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"5957:2:3"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"5977:0:3"},"scope":557,"src":"5928:279:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":546,"nodeType":"Block","src":"6381:36:3","statements":[{"expression":{"id":544,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6398:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":543,"id":545,"nodeType":"Return","src":"6391:19:3"}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"6213:99:3","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":547,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6326:22:3","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"6348:2:3"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":547,"src":"6374:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":541,"name":"uint8","nodeType":"ElementaryTypeName","src":"6374:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6373:7:3"},"scope":557,"src":"6317:100:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":555,"nodeType":"Block","src":"6589:37:3","statements":[{"expression":{"id":553,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6606:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":552,"id":554,"nodeType":"Return","src":"6599:20:3"}]},"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"6423:105:3","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":556,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6542:15:3","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"6557:2:3"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":556,"src":"6583:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"6583:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6582:6:3"},"scope":557,"src":"6533:93:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":558,"src":"2383:4245:3","usedErrors":[]}],"src":"113:6516:3"}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[977],"ERC1967UpgradeUpgradeable":[378],"IBeaconUpgradeable":[388],"IERC1822ProxiableUpgradeable":[9],"Initializable":[557],"StorageSlotUpgradeable":[1037],"UUPSUpgradeable":[693]},"id":694,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":559,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":694,"sourceUnit":10,"src":"140:56:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":561,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":694,"sourceUnit":379,"src":"197:50:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":562,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":694,"sourceUnit":558,"src":"248:29:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":564,"name":"Initializable","nameLocations":["965:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":557,"src":"965:13:4"},"id":565,"nodeType":"InheritanceSpecifier","src":"965:13:4"},{"baseName":{"id":566,"name":"IERC1822ProxiableUpgradeable","nameLocations":["980:28:4"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"980:28:4"},"id":567,"nodeType":"InheritanceSpecifier","src":"980:28:4"},{"baseName":{"id":568,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1010:25:4"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1010:25:4"},"id":569,"nodeType":"InheritanceSpecifier","src":"1010:25:4"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"279:648:4","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":693,"linearizedBaseContracts":[693,378,9,557],"name":"UUPSUpgradeable","nameLocation":"946:15:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":574,"nodeType":"Block","src":"1102:7:4","statements":[]},"id":575,"implemented":true,"kind":"function","modifiers":[{"id":572,"kind":"modifierInvocation","modifierName":{"id":571,"name":"onlyInitializing","nameLocations":["1085:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":502,"src":"1085:16:4"},"nodeType":"ModifierInvocation","src":"1085:16:4"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:4","nodeType":"FunctionDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"1073:2:4"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[],"src":"1102:0:4"},"scope":693,"src":"1042:67:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":580,"nodeType":"Block","src":"1185:7:4","statements":[]},"id":581,"implemented":true,"kind":"function","modifiers":[{"id":578,"kind":"modifierInvocation","modifierName":{"id":577,"name":"onlyInitializing","nameLocations":["1168:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":502,"src":"1168:16:4"},"nodeType":"ModifierInvocation","src":"1168:16:4"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:4","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"1156:2:4"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[],"src":"1185:0:4"},"scope":693,"src":"1115:77:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"1197:87:4","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":588,"mutability":"immutable","name":"__self","nameLocation":"1315:6:4","nodeType":"VariableDeclaration","scope":693,"src":"1289:48:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":586,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$693","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$693","typeString":"contract UUPSUpgradeable"}],"id":585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:4","typeDescriptions":{}}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":610,"nodeType":"Block","src":"1863:205:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":594,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$693","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$693","typeString":"contract UUPSUpgradeable"}],"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:4","typeDescriptions":{}}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":596,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"1898:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":591,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:80:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":600,"nodeType":"ExpressionStatement","src":"1873:80:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":602,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"1971:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":604,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"1995:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"ExpressionStatement","src":"1963:87:4"},{"id":609,"nodeType":"PlaceholderStatement","src":"2060:1:4"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"1344:493:4","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":611,"name":"onlyProxy","nameLocation":"1851:9:4","nodeType":"ModifierDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[],"src":"1860:2:4"},"src":"1842:226:4","virtual":false,"visibility":"internal"},{"body":{"id":625,"nodeType":"Block","src":"2298:120:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":617,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$693","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$693","typeString":"contract UUPSUpgradeable"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:4","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":619,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"2333:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:92:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"ExpressionStatement","src":"2308:92:4"},{"id":624,"nodeType":"PlaceholderStatement","src":"2410:1:4"}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"2074:195:4","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":626,"name":"notDelegated","nameLocation":"2283:12:4","nodeType":"ModifierDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"2295:2:4"},"src":"2274:144:4","virtual":false,"visibility":"internal"},{"baseFunctions":[8],"body":{"id":637,"nodeType":"Block","src":"3093:44:4","statements":[{"expression":{"id":635,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"3110:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":634,"id":636,"nodeType":"Return","src":"3103:27:4"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"2424:577:4","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":638,"implemented":true,"kind":"function","modifiers":[{"id":631,"kind":"modifierInvocation","modifierName":{"id":630,"name":"notDelegated","nameLocations":["3062:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":626,"src":"3062:12:4"},"nodeType":"ModifierInvocation","src":"3062:12:4"}],"name":"proxiableUUID","nameLocation":"3015:13:4","nodeType":"FunctionDefinition","overrides":{"id":629,"nodeType":"OverrideSpecifier","overrides":[],"src":"3053:8:4"},"parameters":{"id":628,"nodeType":"ParameterList","parameters":[],"src":"3028:2:4"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":638,"src":"3084:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3084:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3083:9:4"},"scope":693,"src":"3006:131:4","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":659,"nodeType":"Block","src":"3390:124:4","statements":[{"expression":{"arguments":[{"id":647,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"3418:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":646,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"3400:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3400:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"ExpressionStatement","src":"3400:36:4"},{"expression":{"arguments":[{"id":651,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"3468:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3497:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3487:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":652,"name":"bytes","nodeType":"ElementaryTypeName","src":"3491:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3487:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3501:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":650,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"3446:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3446:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"ExpressionStatement","src":"3446:61:4"}]},"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"3143:169:4","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"3659cfe6","id":660,"implemented":true,"kind":"function","modifiers":[{"id":644,"kind":"modifierInvocation","modifierName":{"id":643,"name":"onlyProxy","nameLocations":["3380:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":611,"src":"3380:9:4"},"nodeType":"ModifierInvocation","src":"3380:9:4"}],"name":"upgradeTo","nameLocation":"3326:9:4","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"newImplementation","nameLocation":"3344:17:4","nodeType":"VariableDeclaration","scope":660,"src":"3336:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"3336:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3335:27:4"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"3390:0:4"},"scope":693,"src":"3317:197:4","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":680,"nodeType":"Block","src":"3870:115:4","statements":[{"expression":{"arguments":[{"id":671,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"3898:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":670,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"3880:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":673,"nodeType":"ExpressionStatement","src":"3880:36:4"},{"expression":{"arguments":[{"id":675,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"3948:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"3967:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3973:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":674,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"3926:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3926:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"3926:52:4"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"3520:238:4","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"4f1ef286","id":681,"implemented":true,"kind":"function","modifiers":[{"id":668,"kind":"modifierInvocation","modifierName":{"id":667,"name":"onlyProxy","nameLocations":["3860:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":611,"src":"3860:9:4"},"nodeType":"ModifierInvocation","src":"3860:9:4"}],"name":"upgradeToAndCall","nameLocation":"3772:16:4","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"newImplementation","nameLocation":"3797:17:4","nodeType":"VariableDeclaration","scope":681,"src":"3789:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"3789:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"data","nameLocation":"3829:4:4","nodeType":"VariableDeclaration","scope":681,"src":"3816:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":664,"name":"bytes","nodeType":"ElementaryTypeName","src":"3816:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3788:46:4"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"3870:0:4"},"scope":693,"src":"3763:222:4","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"3991:397:4","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":687,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4402:17:4","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"newImplementation","nameLocation":"4428:17:4","nodeType":"VariableDeclaration","scope":687,"src":"4420:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:27:4"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[],"src":"4463:0:4"},"scope":693,"src":"4393:71:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"4470:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":692,"mutability":"mutable","name":"__gap","nameLocation":"4749:5:4","nodeType":"VariableDeclaration","scope":693,"src":"4729:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"4729:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":691,"length":{"hexValue":"3530","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4737:2:4","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4729:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":694,"src":"928:3829:4","usedErrors":[]}],"src":"115:4643:4"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[977]},"id":978,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":695,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":977,"linearizedBaseContracts":[977],"name":"AddressUpgradeable","nameLocation":"202:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":710,"nodeType":"Block","src":"1252:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":704,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"1476:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1484:4:5","memberName":"code","nodeType":"MemberAccess","src":"1476:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1489:6:5","memberName":"length","nodeType":"MemberAccess","src":"1476:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":703,"id":709,"nodeType":"Return","src":"1469:30:5"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"227:954:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:5","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"account","nameLocation":"1214:7:5","nodeType":"VariableDeclaration","scope":711,"src":"1206:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:5"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"1246:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":701,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:5"},"scope":977,"src":"1186:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":744,"nodeType":"Block","src":"2494:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":722,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$977","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$977","typeString":"library AddressUpgradeable"}],"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:5","typeDescriptions":{}}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2512:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":725,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"2537:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"ExpressionStatement","src":"2504:73:5"},{"assignments":[731,null],"declarations":[{"constant":false,"id":731,"mutability":"mutable","name":"success","nameLocation":"2594:7:5","nodeType":"VariableDeclaration","scope":744,"src":"2589:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":730,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":738,"initialValue":{"arguments":[{"hexValue":"","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":732,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"2607:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2617:4:5","memberName":"call","nodeType":"MemberAccess","src":"2607:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":734,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"2629:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:5"},{"expression":{"arguments":[{"id":740,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"2658:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"ExpressionStatement","src":"2650:78:5"}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"1512:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":745,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:5","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:5","nodeType":"VariableDeclaration","scope":745,"src":"2442:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"amount","nameLocation":"2477:6:5","nodeType":"VariableDeclaration","scope":745,"src":"2469:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:5"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"2494:0:5"},"scope":977,"src":"2423:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":762,"nodeType":"Block","src":"3566:96:5","statements":[{"expression":{"arguments":[{"id":756,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"3605:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":757,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3613:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3619:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3622:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":755,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[803,847],"referencedDeclaration":847,"src":"3583:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":754,"id":761,"nodeType":"Return","src":"3576:79:5"}]},"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"2741:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":763,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:5","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"target","nameLocation":"3507:6:5","nodeType":"VariableDeclaration","scope":763,"src":"3499:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"data","nameLocation":"3528:4:5","nodeType":"VariableDeclaration","scope":763,"src":"3515:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:5"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":763,"src":"3552:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":752,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:5"},"scope":977,"src":"3477:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"4031:76:5","statements":[{"expression":{"arguments":[{"id":776,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4070:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4078:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":779,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"4087:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":775,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[803,847],"referencedDeclaration":847,"src":"4048:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":774,"id":781,"nodeType":"Return","src":"4041:59:5"}]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"3668:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3893:12:5","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"target","nameLocation":"3923:6:5","nodeType":"VariableDeclaration","scope":783,"src":"3915:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"3915:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"data","nameLocation":"3952:4:5","nodeType":"VariableDeclaration","scope":783,"src":"3939:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":767,"name":"bytes","nodeType":"ElementaryTypeName","src":"3939:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"errorMessage","nameLocation":"3980:12:5","nodeType":"VariableDeclaration","scope":783,"src":"3966:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":769,"name":"string","nodeType":"ElementaryTypeName","src":"3966:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3905:93:5"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"4017:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":772,"name":"bytes","nodeType":"ElementaryTypeName","src":"4017:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4016:14:5"},"scope":977,"src":"3884:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":802,"nodeType":"Block","src":"4612:111:5","statements":[{"expression":{"arguments":[{"id":796,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4651:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":797,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"4659:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4665:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":795,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[803,847],"referencedDeclaration":847,"src":"4629:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4629:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":794,"id":801,"nodeType":"Return","src":"4622:94:5"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"4113:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":803,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4478:21:5","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"target","nameLocation":"4517:6:5","nodeType":"VariableDeclaration","scope":803,"src":"4509:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"4509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"data","nameLocation":"4546:4:5","nodeType":"VariableDeclaration","scope":803,"src":"4533:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":787,"name":"bytes","nodeType":"ElementaryTypeName","src":"4533:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"value","nameLocation":"4568:5:5","nodeType":"VariableDeclaration","scope":803,"src":"4560:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"4560:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:80:5"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":803,"src":"4598:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":792,"name":"bytes","nodeType":"ElementaryTypeName","src":"4598:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4597:14:5"},"scope":977,"src":"4469:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":846,"nodeType":"Block","src":"5150:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":820,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5176:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$977","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$977","typeString":"library AddressUpgradeable"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5168:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:5","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5182:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5168:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"5193:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5160:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"ExpressionStatement","src":"5160:81:5"},{"assignments":[829,831],"declarations":[{"constant":false,"id":829,"mutability":"mutable","name":"success","nameLocation":"5257:7:5","nodeType":"VariableDeclaration","scope":846,"src":"5252:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":828,"name":"bool","nodeType":"ElementaryTypeName","src":"5252:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"returndata","nameLocation":"5279:10:5","nodeType":"VariableDeclaration","scope":846,"src":"5266:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":830,"name":"bytes","nodeType":"ElementaryTypeName","src":"5266:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":838,"initialValue":{"arguments":[{"id":836,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"5319:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":832,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5293:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5300:4:5","memberName":"call","nodeType":"MemberAccess","src":"5293:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"5312:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5293:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5293:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5251:73:5"},{"expression":{"arguments":[{"id":840,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5368:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":841,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5376:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":842,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"5385:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":843,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5397:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":839,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"5341:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":816,"id":845,"nodeType":"Return","src":"5334:76:5"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"4729:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":847,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4980:21:5","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"target","nameLocation":"5019:6:5","nodeType":"VariableDeclaration","scope":847,"src":"5011:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"data","nameLocation":"5048:4:5","nodeType":"VariableDeclaration","scope":847,"src":"5035:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":807,"name":"bytes","nodeType":"ElementaryTypeName","src":"5035:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"value","nameLocation":"5070:5:5","nodeType":"VariableDeclaration","scope":847,"src":"5062:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"errorMessage","nameLocation":"5099:12:5","nodeType":"VariableDeclaration","scope":847,"src":"5085:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":811,"name":"string","nodeType":"ElementaryTypeName","src":"5085:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5001:116:5"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":847,"src":"5136:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":814,"name":"bytes","nodeType":"ElementaryTypeName","src":"5136:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5135:14:5"},"scope":977,"src":"4971:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":863,"nodeType":"Block","src":"5694:97:5","statements":[{"expression":{"arguments":[{"id":858,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"5730:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"5738:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5744:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":857,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[864,893],"referencedDeclaration":893,"src":"5711:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5711:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":856,"id":862,"nodeType":"Return","src":"5704:80:5"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"5423:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":864,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5603:18:5","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"target","nameLocation":"5630:6:5","nodeType":"VariableDeclaration","scope":864,"src":"5622:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"5622:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"data","nameLocation":"5651:4:5","nodeType":"VariableDeclaration","scope":864,"src":"5638:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":851,"name":"bytes","nodeType":"ElementaryTypeName","src":"5638:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5621:35:5"},"returnParameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"5680:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":854,"name":"bytes","nodeType":"ElementaryTypeName","src":"5680:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5679:14:5"},"scope":977,"src":"5594:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":892,"nodeType":"Block","src":"6133:168:5","statements":[{"assignments":[877,879],"declarations":[{"constant":false,"id":877,"mutability":"mutable","name":"success","nameLocation":"6149:7:5","nodeType":"VariableDeclaration","scope":892,"src":"6144:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":876,"name":"bool","nodeType":"ElementaryTypeName","src":"6144:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"returndata","nameLocation":"6171:10:5","nodeType":"VariableDeclaration","scope":892,"src":"6158:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"6158:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":884,"initialValue":{"arguments":[{"id":882,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"6203:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":880,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"6185:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6192:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6185:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6185:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6143:65:5"},{"expression":{"arguments":[{"id":886,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"6252:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":887,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"6260:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":888,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"6269:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":889,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6281:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":885,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6225:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":875,"id":891,"nodeType":"Return","src":"6218:76:5"}]},"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"5797:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":893,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5984:18:5","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"target","nameLocation":"6020:6:5","nodeType":"VariableDeclaration","scope":893,"src":"6012:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"6012:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"data","nameLocation":"6049:4:5","nodeType":"VariableDeclaration","scope":893,"src":"6036:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":868,"name":"bytes","nodeType":"ElementaryTypeName","src":"6036:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"errorMessage","nameLocation":"6077:12:5","nodeType":"VariableDeclaration","scope":893,"src":"6063:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":870,"name":"string","nodeType":"ElementaryTypeName","src":"6063:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6002:93:5"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":893,"src":"6119:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":873,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6118:14:5"},"scope":977,"src":"5975:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"6783:434:5","statements":[{"condition":{"id":907,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"6797:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":929,"nodeType":"Block","src":"7153:58:5","statements":[{"expression":{"arguments":[{"id":925,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"7175:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":926,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"7187:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":924,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"7167:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7167:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"7167:33:5"}]},"id":930,"nodeType":"IfStatement","src":"6793:418:5","trueBody":{"id":923,"nodeType":"Block","src":"6806:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":908,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"6824:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6835:6:5","memberName":"length","nodeType":"MemberAccess","src":"6824:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6845:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6824:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":920,"nodeType":"IfStatement","src":"6820:286:5","trueBody":{"id":919,"nodeType":"Block","src":"6848:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":914,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"7050:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":913,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"7039:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7059:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7031:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7031:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":918,"nodeType":"ExpressionStatement","src":"7031:60:5"}]}},{"expression":{"id":921,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"7126:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":906,"id":922,"nodeType":"Return","src":"7119:17:5"}]}}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"6307:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6598:26:5","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"target","nameLocation":"6642:6:5","nodeType":"VariableDeclaration","scope":932,"src":"6634:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"success","nameLocation":"6663:7:5","nodeType":"VariableDeclaration","scope":932,"src":"6658:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":897,"name":"bool","nodeType":"ElementaryTypeName","src":"6658:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"returndata","nameLocation":"6693:10:5","nodeType":"VariableDeclaration","scope":932,"src":"6680:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":899,"name":"bytes","nodeType":"ElementaryTypeName","src":"6680:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"errorMessage","nameLocation":"6727:12:5","nodeType":"VariableDeclaration","scope":932,"src":"6713:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":901,"name":"string","nodeType":"ElementaryTypeName","src":"6713:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6624:121:5"},"returnParameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"6769:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":904,"name":"bytes","nodeType":"ElementaryTypeName","src":"6769:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6768:14:5"},"scope":977,"src":"6589:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":955,"nodeType":"Block","src":"7598:135:5","statements":[{"condition":{"id":944,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"7612:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":953,"nodeType":"Block","src":"7669:58:5","statements":[{"expression":{"arguments":[{"id":949,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"7691:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":950,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"7703:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":948,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"7683:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"7683:33:5"}]},"id":954,"nodeType":"IfStatement","src":"7608:119:5","trueBody":{"id":947,"nodeType":"Block","src":"7621:42:5","statements":[{"expression":{"id":945,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"7642:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":943,"id":946,"nodeType":"Return","src":"7635:17:5"}]}}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"7223:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":956,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7447:16:5","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"success","nameLocation":"7478:7:5","nodeType":"VariableDeclaration","scope":956,"src":"7473:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":934,"name":"bool","nodeType":"ElementaryTypeName","src":"7473:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"returndata","nameLocation":"7508:10:5","nodeType":"VariableDeclaration","scope":956,"src":"7495:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":936,"name":"bytes","nodeType":"ElementaryTypeName","src":"7495:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"errorMessage","nameLocation":"7542:12:5","nodeType":"VariableDeclaration","scope":956,"src":"7528:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":938,"name":"string","nodeType":"ElementaryTypeName","src":"7528:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:97:5"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"7584:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":941,"name":"bytes","nodeType":"ElementaryTypeName","src":"7584:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:14:5"},"scope":977,"src":"7438:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"7822:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":963,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"7898:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7909:6:5","memberName":"length","nodeType":"MemberAccess","src":"7898:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7898:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":973,"nodeType":"Block","src":"8228:45:5","statements":[{"expression":{"arguments":[{"id":970,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"8249:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":969,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8242:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8242:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"8242:20:5"}]},"id":974,"nodeType":"IfStatement","src":"7894:379:5","trueBody":{"id":968,"nodeType":"Block","src":"7921:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"8079:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8097:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8126:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8120:5:5"},"nodeType":"YulFunctionCall","src":"8120:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8101:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8165:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8169:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8161:3:5"},"nodeType":"YulFunctionCall","src":"8161:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8182:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8154:6:5"},"nodeType":"YulFunctionCall","src":"8154:44:5"},"nodeType":"YulExpressionStatement","src":"8154:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":958,"isOffset":false,"isSlot":false,"src":"8126:10:5","valueSize":1},{"declaration":958,"isOffset":false,"isSlot":false,"src":"8169:10:5","valueSize":1}],"id":967,"nodeType":"InlineAssembly","src":"8070:142:5"}]}}]},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7748:7:5","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"returndata","nameLocation":"7769:10:5","nodeType":"VariableDeclaration","scope":976,"src":"7756:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":957,"name":"bytes","nodeType":"ElementaryTypeName","src":"7756:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"errorMessage","nameLocation":"7795:12:5","nodeType":"VariableDeclaration","scope":976,"src":"7781:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":959,"name":"string","nodeType":"ElementaryTypeName","src":"7781:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:53:5"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"7822:0:5"},"scope":977,"src":"7739:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":978,"src":"194:8087:5","usedErrors":[]}],"src":"101:8181:5"}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[1037]},"id":1038,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":979,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"130:1148:6","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"id":1037,"linearizedBaseContracts":[1037],"name":"StorageSlotUpgradeable","nameLocation":"1287:22:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":983,"members":[{"constant":false,"id":982,"mutability":"mutable","name":"value","nameLocation":"1353:5:6","nodeType":"VariableDeclaration","scope":983,"src":"1345:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1323:11:6","nodeType":"StructDefinition","scope":1037,"src":"1316:49:6","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":986,"members":[{"constant":false,"id":985,"mutability":"mutable","name":"value","nameLocation":"1405:5:6","nodeType":"VariableDeclaration","scope":986,"src":"1400:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":984,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1378:11:6","nodeType":"StructDefinition","scope":1037,"src":"1371:46:6","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":989,"members":[{"constant":false,"id":988,"mutability":"mutable","name":"value","nameLocation":"1460:5:6","nodeType":"VariableDeclaration","scope":989,"src":"1452:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1452:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1430:11:6","nodeType":"StructDefinition","scope":1037,"src":"1423:49:6","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":992,"members":[{"constant":false,"id":991,"mutability":"mutable","name":"value","nameLocation":"1515:5:6","nodeType":"VariableDeclaration","scope":992,"src":"1507:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1485:11:6","nodeType":"StructDefinition","scope":1037,"src":"1478:49:6","visibility":"public"},{"body":{"id":1002,"nodeType":"Block","src":"1709:106:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1771:38:6","statements":[{"nodeType":"YulAssignment","src":"1785:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"1795:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1785:6:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":999,"isOffset":false,"isSlot":true,"src":"1785:6:6","suffix":"slot","valueSize":1},{"declaration":995,"isOffset":false,"isSlot":false,"src":"1795:4:6","valueSize":1}],"id":1001,"nodeType":"InlineAssembly","src":"1762:47:6"}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"1533:87:6","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1003,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1634:14:6","nodeType":"FunctionDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"slot","nameLocation":"1657:4:6","nodeType":"VariableDeclaration","scope":1003,"src":"1649:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1649:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1648:14:6"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"r","nameLocation":"1706:1:6","nodeType":"VariableDeclaration","scope":1003,"src":"1686:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$983_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":998,"nodeType":"UserDefinedTypeName","pathNode":{"id":997,"name":"AddressSlot","nameLocations":["1686:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":983,"src":"1686:11:6"},"referencedDeclaration":983,"src":"1686:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$983_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1685:23:6"},"scope":1037,"src":"1625:190:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"1997:106:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2059:38:6","statements":[{"nodeType":"YulAssignment","src":"2073:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2083:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2073:6:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1010,"isOffset":false,"isSlot":true,"src":"2073:6:6","suffix":"slot","valueSize":1},{"declaration":1006,"isOffset":false,"isSlot":false,"src":"2083:4:6","valueSize":1}],"id":1012,"nodeType":"InlineAssembly","src":"2050:47:6"}]},"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"1821:87:6","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1922:14:6","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"slot","nameLocation":"1945:4:6","nodeType":"VariableDeclaration","scope":1014,"src":"1937:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1937:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1936:14:6"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"r","nameLocation":"1994:1:6","nodeType":"VariableDeclaration","scope":1014,"src":"1974:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$986_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":1009,"nodeType":"UserDefinedTypeName","pathNode":{"id":1008,"name":"BooleanSlot","nameLocations":["1974:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":986,"src":"1974:11:6"},"referencedDeclaration":986,"src":"1974:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$986_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"1973:23:6"},"scope":1037,"src":"1913:190:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1024,"nodeType":"Block","src":"2285:106:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2347:38:6","statements":[{"nodeType":"YulAssignment","src":"2361:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2371:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2361:6:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1021,"isOffset":false,"isSlot":true,"src":"2361:6:6","suffix":"slot","valueSize":1},{"declaration":1017,"isOffset":false,"isSlot":false,"src":"2371:4:6","valueSize":1}],"id":1023,"nodeType":"InlineAssembly","src":"2338:47:6"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"2109:87:6","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1025,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2210:14:6","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"slot","nameLocation":"2233:4:6","nodeType":"VariableDeclaration","scope":1025,"src":"2225:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:14:6"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"r","nameLocation":"2282:1:6","nodeType":"VariableDeclaration","scope":1025,"src":"2262:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$989_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":1020,"nodeType":"UserDefinedTypeName","pathNode":{"id":1019,"name":"Bytes32Slot","nameLocations":["2262:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":989,"src":"2262:11:6"},"referencedDeclaration":989,"src":"2262:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$989_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2261:23:6"},"scope":1037,"src":"2201:190:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1035,"nodeType":"Block","src":"2573:106:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2635:38:6","statements":[{"nodeType":"YulAssignment","src":"2649:14:6","value":{"name":"slot","nodeType":"YulIdentifier","src":"2659:4:6"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2649:6:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1032,"isOffset":false,"isSlot":true,"src":"2649:6:6","suffix":"slot","valueSize":1},{"declaration":1028,"isOffset":false,"isSlot":false,"src":"2659:4:6","valueSize":1}],"id":1034,"nodeType":"InlineAssembly","src":"2626:47:6"}]},"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"2397:87:6","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1036,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2498:14:6","nodeType":"FunctionDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"slot","nameLocation":"2521:4:6","nodeType":"VariableDeclaration","scope":1036,"src":"2513:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2513:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2512:14:6"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"r","nameLocation":"2570:1:6","nodeType":"VariableDeclaration","scope":1036,"src":"2550:21:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$992_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":1031,"nodeType":"UserDefinedTypeName","pathNode":{"id":1030,"name":"Uint256Slot","nameLocations":["2550:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"2550:11:6"},"referencedDeclaration":992,"src":"2550:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$992_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2549:23:6"},"scope":1037,"src":"2489:190:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1038,"src":"1279:1402:6","usedErrors":[]}],"src":"105:2577:6"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1115]},"id":1116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1039,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"131:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1115,"linearizedBaseContracts":[1115],"name":"IERC20","nameLocation":"212:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"225:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1049,"name":"Transfer","nameLocation":"394:8:7","nodeType":"EventDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:7","nodeType":"VariableDeclaration","scope":1049,"src":"403:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1045,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:7","nodeType":"VariableDeclaration","scope":1049,"src":"425:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:7","nodeType":"VariableDeclaration","scope":1049,"src":"445:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:7"},"src":"388:72:7"},{"anonymous":false,"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"466:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1058,"name":"Approval","nameLocation":"625:8:7","nodeType":"EventDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:7","nodeType":"VariableDeclaration","scope":1058,"src":"634:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1054,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:7","nodeType":"VariableDeclaration","scope":1058,"src":"657:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:7","nodeType":"VariableDeclaration","scope":1058,"src":"682:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:7"},"src":"619:78:7"},{"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"703:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1064,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":1115,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"835:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1072,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":1072,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1072,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":1115,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"986:202:7","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1082,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:7","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"to","nameLocation":"1219:2:7","nodeType":"VariableDeclaration","scope":1082,"src":"1211:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"amount","nameLocation":"1231:6:7","nodeType":"VariableDeclaration","scope":1082,"src":"1223:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:7"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1082,"src":"1257:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:7"},"scope":1115,"src":"1193:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"1269:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1092,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:7","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"owner","nameLocation":"1565:5:7","nodeType":"VariableDeclaration","scope":1092,"src":"1557:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"spender","nameLocation":"1580:7:7","nodeType":"VariableDeclaration","scope":1092,"src":"1572:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:7"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1092,"src":"1612:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:7"},"scope":1115,"src":"1538:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"1627:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1102,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:7","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"spender","nameLocation":"2299:7:7","nodeType":"VariableDeclaration","scope":1102,"src":"2291:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"amount","nameLocation":"2316:6:7","nodeType":"VariableDeclaration","scope":1102,"src":"2308:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:7"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"2342:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1099,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:7"},"scope":1115,"src":"2274:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"2354:287:7","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1114,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:7","nodeType":"FunctionDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"from","nameLocation":"2676:4:7","nodeType":"VariableDeclaration","scope":1114,"src":"2668:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"to","nameLocation":"2690:2:7","nodeType":"VariableDeclaration","scope":1114,"src":"2682:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"amount","nameLocation":"2702:6:7","nodeType":"VariableDeclaration","scope":1114,"src":"2694:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:7"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1114,"src":"2728:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1111,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:7"},"scope":1115,"src":"2646:88:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1116,"src":"202:2534:7","usedErrors":[]}],"src":"106:2631:7"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1151]},"id":1152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"148:1963:8","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1151,"linearizedBaseContracts":[1151],"name":"IERC20Permit","nameLocation":"2122:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"2141:850:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1136,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:8","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"owner","nameLocation":"3029:5:8","nodeType":"VariableDeclaration","scope":1136,"src":"3021:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"spender","nameLocation":"3052:7:8","nodeType":"VariableDeclaration","scope":1136,"src":"3044:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"value","nameLocation":"3077:5:8","nodeType":"VariableDeclaration","scope":1136,"src":"3069:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:8","nodeType":"VariableDeclaration","scope":1136,"src":"3092:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"v","nameLocation":"3124:1:8","nodeType":"VariableDeclaration","scope":1136,"src":"3118:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1128,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"r","nameLocation":"3143:1:8","nodeType":"VariableDeclaration","scope":1136,"src":"3135:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"s","nameLocation":"3162:1:8","nodeType":"VariableDeclaration","scope":1136,"src":"3154:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:8"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"3178:0:8"},"scope":1151,"src":"2996:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"3185:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1144,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:8","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"owner","nameLocation":"3508:5:8","nodeType":"VariableDeclaration","scope":1144,"src":"3500:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:8"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1144,"src":"3538:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:8"},"scope":1151,"src":"3484:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"3553:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1150,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:8","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"3764:2:8"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1150,"src":"3790:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:8"},"scope":1151,"src":"3739:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1152,"src":"2112:1689:8","usedErrors":[]}],"src":"123:3679:8"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1857],"IERC20":[1115],"IERC20Permit":[1151],"SafeERC20":[1527]},"id":1528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1153,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1528,"sourceUnit":1116,"src":"140:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1528,"sourceUnit":1152,"src":"164:40:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1528,"sourceUnit":1858,"src":"205:36:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"243:457:9","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1527,"linearizedBaseContracts":[1527],"name":"SafeERC20","nameLocation":"709:9:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1160,"libraryName":{"id":1158,"name":"Address","nameLocations":["731:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1857,"src":"731:7:9"},"nodeType":"UsingForDirective","src":"725:26:9","typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1183,"nodeType":"Block","src":"1013:103:9","statements":[{"expression":{"arguments":[{"id":1172,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"1043:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1175,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"1073:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"1073:14:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1178,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"1098:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"1102:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1173,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1171,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"1023:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"ExpressionStatement","src":"1023:86:9"}]},"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"757:179:9","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:9","nodeType":"FunctionDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"token","nameLocation":"970:5:9","nodeType":"VariableDeclaration","scope":1184,"src":"963:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},"typeName":{"id":1163,"nodeType":"UserDefinedTypeName","pathNode":{"id":1162,"name":"IERC20","nameLocations":["963:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"963:6:9"},"referencedDeclaration":1115,"src":"963:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"to","nameLocation":"985:2:9","nodeType":"VariableDeclaration","scope":1184,"src":"977:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"value","nameLocation":"997:5:9","nodeType":"VariableDeclaration","scope":1184,"src":"989:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:9"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"1013:0:9"},"scope":1527,"src":"941:175:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"1445:113:9","statements":[{"expression":{"arguments":[{"id":1198,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"1475:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1201,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"1505:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:9","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1114,"src":"1505:18:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1204,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1534:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1205,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"1540:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"1544:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1199,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1197,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"1455:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"ExpressionStatement","src":"1455:96:9"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"1122:228:9","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:9","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"token","nameLocation":"1388:5:9","nodeType":"VariableDeclaration","scope":1211,"src":"1381:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},"typeName":{"id":1187,"nodeType":"UserDefinedTypeName","pathNode":{"id":1186,"name":"IERC20","nameLocations":["1381:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"1381:6:9"},"referencedDeclaration":1115,"src":"1381:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"from","nameLocation":"1403:4:9","nodeType":"VariableDeclaration","scope":1211,"src":"1395:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"to","nameLocation":"1417:2:9","nodeType":"VariableDeclaration","scope":1211,"src":"1409:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"value","nameLocation":"1429:5:9","nodeType":"VariableDeclaration","scope":1211,"src":"1421:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:9"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"1445:0:9"},"scope":1527,"src":"1355:203:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1254,"nodeType":"Block","src":"1894:497:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"2143:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1231,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1527","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1527","typeString":"library SafeERC20"}],"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:9","typeDescriptions":{}}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1233,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2190:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1227,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"2159:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"2159:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1222,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"ExpressionStatement","src":"2121:163:9"},{"expression":{"arguments":[{"id":1243,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"2314:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1246,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"2344:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1102,"src":"2344:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1249,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2368:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"2377:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1244,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1242,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"2294:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"ExpressionStatement","src":"2294:90:9"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"1564:249:9","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1255,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:9","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"token","nameLocation":"1846:5:9","nodeType":"VariableDeclaration","scope":1255,"src":"1839:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},"typeName":{"id":1214,"nodeType":"UserDefinedTypeName","pathNode":{"id":1213,"name":"IERC20","nameLocations":["1839:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"1839:6:9"},"referencedDeclaration":1115,"src":"1839:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"spender","nameLocation":"1861:7:9","nodeType":"VariableDeclaration","scope":1255,"src":"1853:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"value","nameLocation":"1878:5:9","nodeType":"VariableDeclaration","scope":1255,"src":"1870:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:9"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[],"src":"1894:0:9"},"scope":1527,"src":"1818:573:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"2668:194:9","statements":[{"assignments":[1267],"declarations":[{"constant":false,"id":1267,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:9","nodeType":"VariableDeclaration","scope":1291,"src":"2678:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1276,"initialValue":{"arguments":[{"arguments":[{"id":1272,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1527","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1527","typeString":"library SafeERC20"}],"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:9","typeDescriptions":{}}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"2732:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1268,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"2701:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"2701:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:9"},{"expression":{"arguments":[{"id":1278,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"2770:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1281,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"2800:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1102,"src":"2800:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1284,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"2824:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1285,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"2833:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"2848:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1279,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1277,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"2750:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"2750:105:9"}]},"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"2397:180:9","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:9","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"token","nameLocation":"2620:5:9","nodeType":"VariableDeclaration","scope":1292,"src":"2613:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},"typeName":{"id":1258,"nodeType":"UserDefinedTypeName","pathNode":{"id":1257,"name":"IERC20","nameLocations":["2613:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"2613:6:9"},"referencedDeclaration":1115,"src":"2613:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"spender","nameLocation":"2635:7:9","nodeType":"VariableDeclaration","scope":1292,"src":"2627:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"value","nameLocation":"2652:5:9","nodeType":"VariableDeclaration","scope":1292,"src":"2644:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:9"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"2668:0:9"},"scope":1527,"src":"2582:280:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1336,"nodeType":"Block","src":"3139:321:9","statements":[{"id":1335,"nodeType":"UncheckedBlock","src":"3149:305:9","statements":[{"assignments":[1304],"declarations":[{"constant":false,"id":1304,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:9","nodeType":"VariableDeclaration","scope":1335,"src":"3173:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1313,"initialValue":{"arguments":[{"arguments":[{"id":1309,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1527","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1527","typeString":"library SafeERC20"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:9","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1311,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3227:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1305,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"3196:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:9","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1092,"src":"3196:15:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1315,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"3257:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"3273:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1314,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1320,"nodeType":"ExpressionStatement","src":"3249:75:9"},{"expression":{"arguments":[{"id":1322,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"3358:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1325,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"3388:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1102,"src":"3388:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:9","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1328,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3412:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1329,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"3421:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"3436:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1323,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1321,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"3338:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1334,"nodeType":"ExpressionStatement","src":"3338:105:9"}]}]},"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"2868:180:9","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:9","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"token","nameLocation":"3091:5:9","nodeType":"VariableDeclaration","scope":1337,"src":"3084:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},"typeName":{"id":1295,"nodeType":"UserDefinedTypeName","pathNode":{"id":1294,"name":"IERC20","nameLocations":["3084:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"3084:6:9"},"referencedDeclaration":1115,"src":"3084:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"spender","nameLocation":"3106:7:9","nodeType":"VariableDeclaration","scope":1337,"src":"3098:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"value","nameLocation":"3123:5:9","nodeType":"VariableDeclaration","scope":1337,"src":"3115:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:9"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"3139:0:9"},"scope":1527,"src":"3053:407:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1383,"nodeType":"Block","src":"3856:333:9","statements":[{"assignments":[1349],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:9","nodeType":"VariableDeclaration","scope":1383,"src":"3866:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1348,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1358,"initialValue":{"arguments":[{"expression":{"expression":{"id":1352,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"3917:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1102,"src":"3917:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:9","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1355,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"3941:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"3950:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1350,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:9"},{"condition":{"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:9","subExpression":{"arguments":[{"id":1360,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"3996:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},{"id":1361,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"4003:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1359,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"3972:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1382,"nodeType":"IfStatement","src":"3967:216:9","trueBody":{"id":1381,"nodeType":"Block","src":"4018:165:9","statements":[{"expression":{"arguments":[{"id":1365,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"4052:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1368,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"4082:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:9","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1102,"src":"4082:13:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:9","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1371,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"4106:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1366,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:9","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1364,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"4032:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1375,"nodeType":"ExpressionStatement","src":"4032:86:9"},{"expression":{"arguments":[{"id":1377,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"4152:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},{"id":1378,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"4159:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1376,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"4132:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"ExpressionStatement","src":"4132:40:9"}]}}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"3466:308:9","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1384,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:9","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"token","nameLocation":"3808:5:9","nodeType":"VariableDeclaration","scope":1384,"src":"3801:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},"typeName":{"id":1340,"nodeType":"UserDefinedTypeName","pathNode":{"id":1339,"name":"IERC20","nameLocations":["3801:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"3801:6:9"},"referencedDeclaration":1115,"src":"3801:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"spender","nameLocation":"3823:7:9","nodeType":"VariableDeclaration","scope":1384,"src":"3815:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"value","nameLocation":"3840:5:9","nodeType":"VariableDeclaration","scope":1384,"src":"3832:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:9"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"3856:0:9"},"scope":1527,"src":"3779:410:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1440,"nodeType":"Block","src":"4556:257:9","statements":[{"assignments":[1406],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:9","nodeType":"VariableDeclaration","scope":1440,"src":"4566:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1411,"initialValue":{"arguments":[{"id":1409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"4601:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1407,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"4588:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1151","typeString":"contract IERC20Permit"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:9","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1144,"src":"4588:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:9"},{"expression":{"arguments":[{"id":1415,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"4630:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"4637:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"4646:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1418,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"4653:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1419,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"4663:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1420,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"4666:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1421,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"4669:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1412,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"4617:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1151","typeString":"contract IERC20Permit"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:9","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1136,"src":"4617:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"ExpressionStatement","src":"4617:54:9"},{"assignments":[1425],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:9","nodeType":"VariableDeclaration","scope":1440,"src":"4681:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1430,"initialValue":{"arguments":[{"id":1428,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"4715:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1426,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"4702:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1151","typeString":"contract IERC20Permit"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:9","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1144,"src":"4702:12:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"4739:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1433,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"4753:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1431,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"ExpressionStatement","src":"4731:75:9"}]},"documentation":{"id":1385,"nodeType":"StructuredDocumentation","src":"4195:141:9","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:9","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"token","nameLocation":"4383:5:9","nodeType":"VariableDeclaration","scope":1441,"src":"4370:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1151","typeString":"contract IERC20Permit"},"typeName":{"id":1387,"nodeType":"UserDefinedTypeName","pathNode":{"id":1386,"name":"IERC20Permit","nameLocations":["4370:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":1151,"src":"4370:12:9"},"referencedDeclaration":1151,"src":"4370:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1151","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"owner","nameLocation":"4406:5:9","nodeType":"VariableDeclaration","scope":1441,"src":"4398:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"spender","nameLocation":"4429:7:9","nodeType":"VariableDeclaration","scope":1441,"src":"4421:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"value","nameLocation":"4454:5:9","nodeType":"VariableDeclaration","scope":1441,"src":"4446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:9","nodeType":"VariableDeclaration","scope":1441,"src":"4469:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"v","nameLocation":"4501:1:9","nodeType":"VariableDeclaration","scope":1441,"src":"4495:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1397,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"r","nameLocation":"4520:1:9","nodeType":"VariableDeclaration","scope":1441,"src":"4512:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"s","nameLocation":"4539:1:9","nodeType":"VariableDeclaration","scope":1441,"src":"4531:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:9"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"4556:0:9"},"scope":1527,"src":"4341:472:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1477,"nodeType":"Block","src":"5266:572:9","statements":[{"assignments":[1451],"declarations":[{"constant":false,"id":1451,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:9","nodeType":"VariableDeclaration","scope":1477,"src":"5615:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1450,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1460,"initialValue":{"arguments":[{"id":1457,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5669:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1454,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"5649:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:9","typeDescriptions":{}}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:9","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1617,"src":"5641:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1462,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"5728:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:9","memberName":"length","nodeType":"MemberAccess","src":"5728:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1468,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"5765:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1469,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:9","typeDescriptions":{}}}],"id":1471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1466,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:9","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1476,"nodeType":"ExpressionStatement","src":"5720:111:9"}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"4819:372:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:9","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"token","nameLocation":"5232:5:9","nodeType":"VariableDeclaration","scope":1478,"src":"5225:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},"typeName":{"id":1444,"nodeType":"UserDefinedTypeName","pathNode":{"id":1443,"name":"IERC20","nameLocations":["5225:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"5225:6:9"},"referencedDeclaration":1115,"src":"5225:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"data","nameLocation":"5252:4:9","nodeType":"VariableDeclaration","scope":1478,"src":"5239:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1446,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:9"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"5266:0:9"},"scope":1527,"src":"5196:642:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1525,"nodeType":"Block","src":"6428:505:9","statements":[{"assignments":[1490,1492],"declarations":[{"constant":false,"id":1490,"mutability":"mutable","name":"success","nameLocation":"6729:7:9","nodeType":"VariableDeclaration","scope":1525,"src":"6724:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1489,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:9","nodeType":"VariableDeclaration","scope":1525,"src":"6738:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1491,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1500,"initialValue":{"arguments":[{"id":1498,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"6785:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1495,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"6773:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}],"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:9","typeDescriptions":{}}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:9","memberName":"call","nodeType":"MemberAccess","src":"6765:19:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:9"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1501,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"6819:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1502,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"6831:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:9","memberName":"length","nodeType":"MemberAccess","src":"6831:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1508,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"6868:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1509,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:9","typeDescriptions":{}}}],"id":1511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1506,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:9","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1520,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"6919:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}],"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:9","typeDescriptions":{}}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1516,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"6892:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1857_$","typeString":"type(library Address)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:9","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1545,"src":"6892:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1488,"id":1524,"nodeType":"Return","src":"6800:126:9"}]},"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"5844:490:9","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1526,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:9","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"token","nameLocation":"6379:5:9","nodeType":"VariableDeclaration","scope":1526,"src":"6372:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},"typeName":{"id":1481,"nodeType":"UserDefinedTypeName","pathNode":{"id":1480,"name":"IERC20","nameLocations":["6372:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"6372:6:9"},"referencedDeclaration":1115,"src":"6372:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"data","nameLocation":"6399:4:9","nodeType":"VariableDeclaration","scope":1526,"src":"6386:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1483,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:9"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1526,"src":"6422:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1486,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:9"},"scope":1527,"src":"6339:594:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1528,"src":"701:6234:9","usedErrors":[]}],"src":"115:6821:9"}},"@openzeppelin/contracts/utils/Address.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1857]},"id":1858,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1529,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"126:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1857,"linearizedBaseContracts":[1857],"name":"Address","nameLocation":"202:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1544,"nodeType":"Block","src":"1478:254:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1538,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1702:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:10","memberName":"code","nodeType":"MemberAccess","src":"1702:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:10","memberName":"length","nodeType":"MemberAccess","src":"1702:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1537,"id":1543,"nodeType":"Return","src":"1695:30:10"}]},"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"216:1191:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1545,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:10","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"account","nameLocation":"1440:7:10","nodeType":"VariableDeclaration","scope":1545,"src":"1432:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1532,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:10"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"1472:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1535,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:10"},"scope":1857,"src":"1412:320:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"2718:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1556,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1857","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1857","typeString":"library Address"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:10","typeDescriptions":{}}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:10","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1559,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2761:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1563,"nodeType":"ExpressionStatement","src":"2728:73:10"},{"assignments":[1565,null],"declarations":[{"constant":false,"id":1565,"mutability":"mutable","name":"success","nameLocation":"2818:7:10","nodeType":"VariableDeclaration","scope":1578,"src":"2813:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1564,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1572,"initialValue":{"arguments":[{"hexValue":"","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1566,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2831:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:10","memberName":"call","nodeType":"MemberAccess","src":"2831:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2853:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:10"},{"expression":{"arguments":[{"id":1574,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"2882:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1577,"nodeType":"ExpressionStatement","src":"2874:78:10"}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"1738:904:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:10","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:10","nodeType":"VariableDeclaration","scope":1579,"src":"2666:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"amount","nameLocation":"2701:6:10","nodeType":"VariableDeclaration","scope":1579,"src":"2693:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:10"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[],"src":"2718:0:10"},"scope":1857,"src":"2647:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"3790:96:10","statements":[{"expression":{"arguments":[{"id":1590,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"3829:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1591,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"3837:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1589,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1637,1681],"referencedDeclaration":1681,"src":"3807:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1588,"id":1595,"nodeType":"Return","src":"3800:79:10"}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"2965:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:10","nodeType":"FunctionDefinition","parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"target","nameLocation":"3731:6:10","nodeType":"VariableDeclaration","scope":1597,"src":"3723:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"data","nameLocation":"3752:4:10","nodeType":"VariableDeclaration","scope":1597,"src":"3739:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1583,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:10"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"3776:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1586,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:10"},"scope":1857,"src":"3701:185:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1616,"nodeType":"Block","src":"4255:76:10","statements":[{"expression":{"arguments":[{"id":1610,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"4294:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1611,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"4302:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1613,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"4311:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1609,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1637,1681],"referencedDeclaration":1681,"src":"4272:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1608,"id":1615,"nodeType":"Return","src":"4265:59:10"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"3892:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1617,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:10","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"target","nameLocation":"4147:6:10","nodeType":"VariableDeclaration","scope":1617,"src":"4139:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"data","nameLocation":"4176:4:10","nodeType":"VariableDeclaration","scope":1617,"src":"4163:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1601,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:10","nodeType":"VariableDeclaration","scope":1617,"src":"4190:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1603,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:10"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1617,"src":"4241:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1606,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:10"},"scope":1857,"src":"4108:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"4806:111:10","statements":[{"expression":{"arguments":[{"id":1630,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"4845:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"4853:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"4859:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1629,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1637,1681],"referencedDeclaration":1681,"src":"4823:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1628,"id":1635,"nodeType":"Return","src":"4816:94:10"}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"4337:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:10","nodeType":"FunctionDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"target","nameLocation":"4732:6:10","nodeType":"VariableDeclaration","scope":1637,"src":"4724:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1619,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"data","nameLocation":"4753:4:10","nodeType":"VariableDeclaration","scope":1637,"src":"4740:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1621,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"value","nameLocation":"4767:5:10","nodeType":"VariableDeclaration","scope":1637,"src":"4759:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:10"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"4792:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1626,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:10"},"scope":1857,"src":"4693:224:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1680,"nodeType":"Block","src":"5344:267:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1654,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1857","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1857","typeString":"library Address"}],"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:10","typeDescriptions":{}}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:10","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"5387:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"ExpressionStatement","src":"5354:81:10"},{"assignments":[1663,1665],"declarations":[{"constant":false,"id":1663,"mutability":"mutable","name":"success","nameLocation":"5451:7:10","nodeType":"VariableDeclaration","scope":1680,"src":"5446:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1662,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:10","nodeType":"VariableDeclaration","scope":1680,"src":"5460:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1664,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1672,"initialValue":{"arguments":[{"id":1670,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"5513:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1666,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"5487:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:10","memberName":"call","nodeType":"MemberAccess","src":"5487:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"5506:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:10"},{"expression":{"arguments":[{"id":1674,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"5562:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1675,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"5570:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1676,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"5579:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1677,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"5591:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1673,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"5535:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1650,"id":1679,"nodeType":"Return","src":"5528:76:10"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"4923:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:10","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"target","nameLocation":"5213:6:10","nodeType":"VariableDeclaration","scope":1681,"src":"5205:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"data","nameLocation":"5242:4:10","nodeType":"VariableDeclaration","scope":1681,"src":"5229:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1641,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"value","nameLocation":"5264:5:10","nodeType":"VariableDeclaration","scope":1681,"src":"5256:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:10","nodeType":"VariableDeclaration","scope":1681,"src":"5279:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1645,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:10"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"5330:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1648,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:10"},"scope":1857,"src":"5165:446:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1697,"nodeType":"Block","src":"5888:97:10","statements":[{"expression":{"arguments":[{"id":1692,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"5924:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1693,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"5932:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1691,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1698,1727],"referencedDeclaration":1727,"src":"5905:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1690,"id":1696,"nodeType":"Return","src":"5898:80:10"}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"5617:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1698,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:10","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"target","nameLocation":"5824:6:10","nodeType":"VariableDeclaration","scope":1698,"src":"5816:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"data","nameLocation":"5845:4:10","nodeType":"VariableDeclaration","scope":1698,"src":"5832:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1685,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:10"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1698,"src":"5874:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1688,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:10"},"scope":1857,"src":"5788:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1726,"nodeType":"Block","src":"6327:168:10","statements":[{"assignments":[1711,1713],"declarations":[{"constant":false,"id":1711,"mutability":"mutable","name":"success","nameLocation":"6343:7:10","nodeType":"VariableDeclaration","scope":1726,"src":"6338:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1710,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1713,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:10","nodeType":"VariableDeclaration","scope":1726,"src":"6352:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1712,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1718,"initialValue":{"arguments":[{"id":1716,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"6397:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1714,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"6379:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:10"},{"expression":{"arguments":[{"id":1720,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"6446:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1721,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6454:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1722,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"6463:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1723,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"6475:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1719,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"6419:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1709,"id":1725,"nodeType":"Return","src":"6412:76:10"}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"5991:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:10","nodeType":"FunctionDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"target","nameLocation":"6214:6:10","nodeType":"VariableDeclaration","scope":1727,"src":"6206:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"data","nameLocation":"6243:4:10","nodeType":"VariableDeclaration","scope":1727,"src":"6230:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1702,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:10","nodeType":"VariableDeclaration","scope":1727,"src":"6257:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1704,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:10"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"6313:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1707,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:10"},"scope":1857,"src":"6169:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1743,"nodeType":"Block","src":"6771:101:10","statements":[{"expression":{"arguments":[{"id":1738,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"6809:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1739,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"6817:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1737,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1744,1773],"referencedDeclaration":1773,"src":"6788:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1736,"id":1742,"nodeType":"Return","src":"6781:84:10"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"6501:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:10","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"target","nameLocation":"6712:6:10","nodeType":"VariableDeclaration","scope":1744,"src":"6704:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"data","nameLocation":"6733:4:10","nodeType":"VariableDeclaration","scope":1744,"src":"6720:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1731,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:10"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"6757:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1734,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:10"},"scope":1857,"src":"6674:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"7213:170:10","statements":[{"assignments":[1757,1759],"declarations":[{"constant":false,"id":1757,"mutability":"mutable","name":"success","nameLocation":"7229:7:10","nodeType":"VariableDeclaration","scope":1772,"src":"7224:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1756,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:10","nodeType":"VariableDeclaration","scope":1772,"src":"7238:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1758,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1764,"initialValue":{"arguments":[{"id":1762,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7285:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1760,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"7265:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:10"},{"expression":{"arguments":[{"id":1766,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"7334:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1767,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"7342:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1768,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"7351:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1769,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"7363:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1765,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"7307:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1755,"id":1771,"nodeType":"Return","src":"7300:76:10"}]},"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"6878:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:10","nodeType":"FunctionDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"target","nameLocation":"7105:6:10","nodeType":"VariableDeclaration","scope":1773,"src":"7097:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1746,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"data","nameLocation":"7134:4:10","nodeType":"VariableDeclaration","scope":1773,"src":"7121:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1748,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:10","nodeType":"VariableDeclaration","scope":1773,"src":"7148:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1750,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:10"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"7199:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1753,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:10"},"scope":1857,"src":"7058:325:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1811,"nodeType":"Block","src":"7865:434:10","statements":[{"condition":{"id":1787,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"7879:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1809,"nodeType":"Block","src":"8235:58:10","statements":[{"expression":{"arguments":[{"id":1805,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"8257:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1806,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"8269:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1804,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8249:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"ExpressionStatement","src":"8249:33:10"}]},"id":1810,"nodeType":"IfStatement","src":"7875:418:10","trueBody":{"id":1803,"nodeType":"Block","src":"7888:341:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1788,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"7906:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:10","memberName":"length","nodeType":"MemberAccess","src":"7906:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1800,"nodeType":"IfStatement","src":"7902:286:10","trueBody":{"id":1799,"nodeType":"Block","src":"7930:258:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1794,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"8132:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1793,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"8121:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1792,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1798,"nodeType":"ExpressionStatement","src":"8113:60:10"}]}},{"expression":{"id":1801,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"8208:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1786,"id":1802,"nodeType":"Return","src":"8201:17:10"}]}}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"7389:277:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:10","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"target","nameLocation":"7724:6:10","nodeType":"VariableDeclaration","scope":1812,"src":"7716:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"success","nameLocation":"7745:7:10","nodeType":"VariableDeclaration","scope":1812,"src":"7740:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1777,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:10","nodeType":"VariableDeclaration","scope":1812,"src":"7762:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1779,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:10","nodeType":"VariableDeclaration","scope":1812,"src":"7795:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:10"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1812,"src":"7851:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1784,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:10"},"scope":1857,"src":"7671:628:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1835,"nodeType":"Block","src":"8680:135:10","statements":[{"condition":{"id":1824,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"8694:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1833,"nodeType":"Block","src":"8751:58:10","statements":[{"expression":{"arguments":[{"id":1829,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"8773:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1830,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"8785:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1828,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8765:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1832,"nodeType":"ExpressionStatement","src":"8765:33:10"}]},"id":1834,"nodeType":"IfStatement","src":"8690:119:10","trueBody":{"id":1827,"nodeType":"Block","src":"8703:42:10","statements":[{"expression":{"id":1825,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"8724:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1823,"id":1826,"nodeType":"Return","src":"8717:17:10"}]}}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"8305:210:10","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1836,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:10","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"success","nameLocation":"8560:7:10","nodeType":"VariableDeclaration","scope":1836,"src":"8555:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1814,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:10","nodeType":"VariableDeclaration","scope":1836,"src":"8577:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:10","nodeType":"VariableDeclaration","scope":1836,"src":"8610:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1818,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:10"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1836,"src":"8666:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1821,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:10"},"scope":1857,"src":"8520:295:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1855,"nodeType":"Block","src":"8904:457:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1843,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"8980:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:10","memberName":"length","nodeType":"MemberAccess","src":"8980:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1853,"nodeType":"Block","src":"9310:45:10","statements":[{"expression":{"arguments":[{"id":1850,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"9331:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1849,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1852,"nodeType":"ExpressionStatement","src":"9324:20:10"}]},"id":1854,"nodeType":"IfStatement","src":"8976:379:10","trueBody":{"id":1848,"nodeType":"Block","src":"9003:301:10","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:10","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:10"},"nodeType":"YulFunctionCall","src":"9202:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:10"},"nodeType":"YulFunctionCall","src":"9243:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:10"},"nodeType":"YulFunctionCall","src":"9236:44:10"},"nodeType":"YulExpressionStatement","src":"9236:44:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1838,"isOffset":false,"isSlot":false,"src":"9208:10:10","valueSize":1},{"declaration":1838,"isOffset":false,"isSlot":false,"src":"9251:10:10","valueSize":1}],"id":1847,"nodeType":"InlineAssembly","src":"9152:142:10"}]}}]},"id":1856,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:10","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:10","nodeType":"VariableDeclaration","scope":1856,"src":"8838:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1837,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:10","nodeType":"VariableDeclaration","scope":1856,"src":"8863:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1839,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:10"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[],"src":"8904:0:10"},"scope":1857,"src":"8821:540:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1858,"src":"194:9169:10","usedErrors":[]}],"src":"101:9263:10"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[3398]},"id":3399,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1859,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"217:709:11","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":3398,"linearizedBaseContracts":[3398],"name":"SafeCast","nameLocation":"935:8:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1884,"nodeType":"Block","src":"1339:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"1357:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1871,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":1870,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1380:3:11","memberName":"max","nodeType":"MemberAccess","src":"1366:17:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":1868,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1878,"nodeType":"ExpressionStatement","src":"1349:78:11"},{"expression":{"arguments":[{"id":1881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"1452:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1879,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:11","typeDescriptions":{}}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":1867,"id":1883,"nodeType":"Return","src":"1437:21:11"}]},"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"950:318:11","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:11","nodeType":"FunctionDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"value","nameLocation":"1300:5:11","nodeType":"VariableDeclaration","scope":1885,"src":"1292:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:11"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"1330:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":1865,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:11"},"scope":3398,"src":"1273:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1909,"nodeType":"Block","src":"1860:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"1878:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1896,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":1895,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1901:3:11","memberName":"max","nodeType":"MemberAccess","src":"1887:17:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":1893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1870:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1903,"nodeType":"ExpressionStatement","src":"1870:78:11"},{"expression":{"arguments":[{"id":1906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"1973:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1904,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:11","typeDescriptions":{}}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":1892,"id":1908,"nodeType":"Return","src":"1958:21:11"}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"1471:318:11","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:11","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"value","nameLocation":"1821:5:11","nodeType":"VariableDeclaration","scope":1910,"src":"1813:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:11"},"returnParameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"1851:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":1890,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:11"},"scope":3398,"src":"1794:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1934,"nodeType":"Block","src":"2381:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"2399:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1921,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":1920,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2408:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2422:3:11","memberName":"max","nodeType":"MemberAccess","src":"2408:17:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":1918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"ExpressionStatement","src":"2391:78:11"},{"expression":{"arguments":[{"id":1931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"2494:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1929,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:11","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":1917,"id":1933,"nodeType":"Return","src":"2479:21:11"}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"1992:318:11","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":1935,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:11","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"value","nameLocation":"2342:5:11","nodeType":"VariableDeclaration","scope":1935,"src":"2334:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:11"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1935,"src":"2372:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":1915,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:11"},"scope":3398,"src":"2315:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1959,"nodeType":"Block","src":"2902:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2920:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1946,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1945,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2943:3:11","memberName":"max","nodeType":"MemberAccess","src":"2929:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":1943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1953,"nodeType":"ExpressionStatement","src":"2912:78:11"},{"expression":{"arguments":[{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"3015:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1954,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:11","typeDescriptions":{}}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1942,"id":1958,"nodeType":"Return","src":"3000:21:11"}]},"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"2513:318:11","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":1960,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:11","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"value","nameLocation":"2863:5:11","nodeType":"VariableDeclaration","scope":1960,"src":"2855:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:11"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1960,"src":"2893:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1940,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:11"},"scope":3398,"src":"2836:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"3423:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3441:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1971,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":1970,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3464:3:11","memberName":"max","nodeType":"MemberAccess","src":"3450:17:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":1968,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1978,"nodeType":"ExpressionStatement","src":"3433:78:11"},{"expression":{"arguments":[{"id":1981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3536:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1979,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:11","typeDescriptions":{}}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":1967,"id":1983,"nodeType":"Return","src":"3521:21:11"}]},"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"3034:318:11","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:11","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"value","nameLocation":"3384:5:11","nodeType":"VariableDeclaration","scope":1985,"src":"3376:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:11"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"3414:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":1965,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:11"},"scope":3398,"src":"3357:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2009,"nodeType":"Block","src":"3944:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"3962:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1996,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1995,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3985:3:11","memberName":"max","nodeType":"MemberAccess","src":"3971:17:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":1993,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"ExpressionStatement","src":"3954:78:11"},{"expression":{"arguments":[{"id":2006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"4057:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2004,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:11","typeDescriptions":{}}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1992,"id":2008,"nodeType":"Return","src":"4042:21:11"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"3555:318:11","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":2010,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:11","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"value","nameLocation":"3905:5:11","nodeType":"VariableDeclaration","scope":2010,"src":"3897:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:11"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2010,"src":"3935:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1990,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:11"},"scope":3398,"src":"3878:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2034,"nodeType":"Block","src":"4465:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"4483:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2021,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2020,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4506:3:11","memberName":"max","nodeType":"MemberAccess","src":"4492:17:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":2018,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2028,"nodeType":"ExpressionStatement","src":"4475:78:11"},{"expression":{"arguments":[{"id":2031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"4578:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2029,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:11","typeDescriptions":{}}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2017,"id":2033,"nodeType":"Return","src":"4563:21:11"}]},"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"4076:318:11","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:11","nodeType":"FunctionDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"value","nameLocation":"4426:5:11","nodeType":"VariableDeclaration","scope":2035,"src":"4418:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:11"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"4456:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2015,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:11"},"scope":3398,"src":"4399:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"4986:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5004:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2046,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5027:3:11","memberName":"max","nodeType":"MemberAccess","src":"5013:17:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":2043,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4996:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2053,"nodeType":"ExpressionStatement","src":"4996:78:11"},{"expression":{"arguments":[{"id":2056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5099:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2054,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:11","typeDescriptions":{}}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2042,"id":2058,"nodeType":"Return","src":"5084:21:11"}]},"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"4597:318:11","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:11","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"value","nameLocation":"4947:5:11","nodeType":"VariableDeclaration","scope":2060,"src":"4939:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:11"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"4977:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2040,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:11"},"scope":3398,"src":"4920:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2084,"nodeType":"Block","src":"5507:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"5525:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2071,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":2070,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5534:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5548:3:11","memberName":"max","nodeType":"MemberAccess","src":"5534:17:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":2068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2078,"nodeType":"ExpressionStatement","src":"5517:78:11"},{"expression":{"arguments":[{"id":2081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"5620:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2079,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:11","typeDescriptions":{}}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":2067,"id":2083,"nodeType":"Return","src":"5605:21:11"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"5118:318:11","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:11","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"value","nameLocation":"5468:5:11","nodeType":"VariableDeclaration","scope":2085,"src":"5460:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:11"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2085,"src":"5498:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":2065,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:11"},"scope":3398,"src":"5441:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2109,"nodeType":"Block","src":"6028:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"6046:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2096,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":2095,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6069:3:11","memberName":"max","nodeType":"MemberAccess","src":"6055:17:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":2093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2103,"nodeType":"ExpressionStatement","src":"6038:78:11"},{"expression":{"arguments":[{"id":2106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"6141:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2104,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:11","typeDescriptions":{}}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":2092,"id":2108,"nodeType":"Return","src":"6126:21:11"}]},"documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"5639:318:11","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:11","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"value","nameLocation":"5989:5:11","nodeType":"VariableDeclaration","scope":2110,"src":"5981:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2087,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:11"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"6019:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":2090,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:11"},"scope":3398,"src":"5962:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2134,"nodeType":"Block","src":"6549:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"6567:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2121,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":2120,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:3:11","memberName":"max","nodeType":"MemberAccess","src":"6576:17:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":2118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6559:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2128,"nodeType":"ExpressionStatement","src":"6559:78:11"},{"expression":{"arguments":[{"id":2131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"6662:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2129,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:11","typeDescriptions":{}}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":2117,"id":2133,"nodeType":"Return","src":"6647:21:11"}]},"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"6160:318:11","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:11","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"value","nameLocation":"6510:5:11","nodeType":"VariableDeclaration","scope":2135,"src":"6502:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:11"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"6540:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":2115,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:11"},"scope":3398,"src":"6483:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2159,"nodeType":"Block","src":"7070:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"7088:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2146,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":2145,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7111:3:11","memberName":"max","nodeType":"MemberAccess","src":"7097:17:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":2143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2153,"nodeType":"ExpressionStatement","src":"7080:78:11"},{"expression":{"arguments":[{"id":2156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"7183:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2154,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:11","typeDescriptions":{}}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":2142,"id":2158,"nodeType":"Return","src":"7168:21:11"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"6681:318:11","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:11","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"value","nameLocation":"7031:5:11","nodeType":"VariableDeclaration","scope":2160,"src":"7023:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:11"},"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"7061:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2140,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:11"},"scope":3398,"src":"7004:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2184,"nodeType":"Block","src":"7591:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"7609:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2171,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":2170,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7632:3:11","memberName":"max","nodeType":"MemberAccess","src":"7618:17:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":2168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2178,"nodeType":"ExpressionStatement","src":"7601:78:11"},{"expression":{"arguments":[{"id":2181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"7704:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2179,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:11","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7696:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":2167,"id":2183,"nodeType":"Return","src":"7689:21:11"}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"7202:318:11","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:11","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"value","nameLocation":"7552:5:11","nodeType":"VariableDeclaration","scope":2185,"src":"7544:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:11"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2185,"src":"7582:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":2165,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:11"},"scope":3398,"src":"7525:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2209,"nodeType":"Block","src":"8112:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"8130:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2196,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":2195,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8153:3:11","memberName":"max","nodeType":"MemberAccess","src":"8139:17:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":2193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2203,"nodeType":"ExpressionStatement","src":"8122:78:11"},{"expression":{"arguments":[{"id":2206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"8225:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2204,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:11","typeDescriptions":{}}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":2192,"id":2208,"nodeType":"Return","src":"8210:21:11"}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"7723:318:11","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:11","nodeType":"FunctionDefinition","parameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"value","nameLocation":"8073:5:11","nodeType":"VariableDeclaration","scope":2210,"src":"8065:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:11"},"returnParameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"8103:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":2190,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:11"},"scope":3398,"src":"8046:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2234,"nodeType":"Block","src":"8633:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"8651:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2221,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":2220,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8674:3:11","memberName":"max","nodeType":"MemberAccess","src":"8660:17:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":2218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2228,"nodeType":"ExpressionStatement","src":"8643:78:11"},{"expression":{"arguments":[{"id":2231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"8746:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2229,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:11","typeDescriptions":{}}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":2217,"id":2233,"nodeType":"Return","src":"8731:21:11"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"8244:318:11","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":2235,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:11","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"value","nameLocation":"8594:5:11","nodeType":"VariableDeclaration","scope":2235,"src":"8586:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:11"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2235,"src":"8624:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":2215,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:11"},"scope":3398,"src":"8567:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2259,"nodeType":"Block","src":"9154:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"9172:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2246,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":2245,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9195:3:11","memberName":"max","nodeType":"MemberAccess","src":"9181:17:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":2243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2253,"nodeType":"ExpressionStatement","src":"9164:78:11"},{"expression":{"arguments":[{"id":2256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"9267:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2254,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:11","typeDescriptions":{}}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":2242,"id":2258,"nodeType":"Return","src":"9252:21:11"}]},"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"8765:318:11","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:11","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"value","nameLocation":"9115:5:11","nodeType":"VariableDeclaration","scope":2260,"src":"9107:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:11"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"9145:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2240,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:11"},"scope":3398,"src":"9088:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2284,"nodeType":"Block","src":"9675:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"9693:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2271,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":2270,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9716:3:11","memberName":"max","nodeType":"MemberAccess","src":"9702:17:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":2268,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2278,"nodeType":"ExpressionStatement","src":"9685:78:11"},{"expression":{"arguments":[{"id":2281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"9788:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":2279,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:11","typeDescriptions":{}}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":2267,"id":2283,"nodeType":"Return","src":"9773:21:11"}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"9286:318:11","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":2285,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:11","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"value","nameLocation":"9636:5:11","nodeType":"VariableDeclaration","scope":2285,"src":"9628:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:11"},"returnParameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2285,"src":"9666:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":2265,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:11"},"scope":3398,"src":"9609:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2309,"nodeType":"Block","src":"10196:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10214:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2296,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":2295,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10237:3:11","memberName":"max","nodeType":"MemberAccess","src":"10223:17:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":2293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10206:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2303,"nodeType":"ExpressionStatement","src":"10206:78:11"},{"expression":{"arguments":[{"id":2306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10309:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2304,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:11","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":2292,"id":2308,"nodeType":"Return","src":"10294:21:11"}]},"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"9807:318:11","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":2310,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:11","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"value","nameLocation":"10157:5:11","nodeType":"VariableDeclaration","scope":2310,"src":"10149:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:11"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2310,"src":"10187:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2290,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:11"},"scope":3398,"src":"10130:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"10717:126:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"10735:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":2321,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":2320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10744:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10758:3:11","memberName":"max","nodeType":"MemberAccess","src":"10744:17:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":2318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10727:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"ExpressionStatement","src":"10727:78:11"},{"expression":{"arguments":[{"id":2331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"10830:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":2329,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:11","typeDescriptions":{}}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":2317,"id":2333,"nodeType":"Return","src":"10815:21:11"}]},"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"10328:318:11","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:11","nodeType":"FunctionDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"value","nameLocation":"10678:5:11","nodeType":"VariableDeclaration","scope":2335,"src":"10670:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:11"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2335,"src":"10708:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":2315,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:11"},"scope":3398,"src":"10651:192:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2359,"nodeType":"Block","src":"11232:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"11250:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2346,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":2345,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11259:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11272:3:11","memberName":"max","nodeType":"MemberAccess","src":"11259:16:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":2343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11242:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2353,"nodeType":"ExpressionStatement","src":"11242:76:11"},{"expression":{"arguments":[{"id":2356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"11342:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2354,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:11","typeDescriptions":{}}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":2342,"id":2358,"nodeType":"Return","src":"11328:20:11"}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"10849:314:11","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:11","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"value","nameLocation":"11194:5:11","nodeType":"VariableDeclaration","scope":2360,"src":"11186:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:11"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"11224:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2340,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:11"},"scope":3398,"src":"11168:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2384,"nodeType":"Block","src":"11744:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"11762:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":2371,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":2370,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11771:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11784:3:11","memberName":"max","nodeType":"MemberAccess","src":"11771:16:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":2368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11754:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2378,"nodeType":"ExpressionStatement","src":"11754:76:11"},{"expression":{"arguments":[{"id":2381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"11854:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":2379,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:11","typeDescriptions":{}}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":2367,"id":2383,"nodeType":"Return","src":"11840:20:11"}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"11361:314:11","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:11","nodeType":"FunctionDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"value","nameLocation":"11706:5:11","nodeType":"VariableDeclaration","scope":2385,"src":"11698:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:11"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2385,"src":"11736:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":2365,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:11"},"scope":3398,"src":"11680:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2409,"nodeType":"Block","src":"12256:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"12274:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":2396,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":2395,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12296:3:11","memberName":"max","nodeType":"MemberAccess","src":"12283:16:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":2393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2403,"nodeType":"ExpressionStatement","src":"12266:76:11"},{"expression":{"arguments":[{"id":2406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"12366:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":2404,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:11","typeDescriptions":{}}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12359:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":2392,"id":2408,"nodeType":"Return","src":"12352:20:11"}]},"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"11873:314:11","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":2410,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:11","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"value","nameLocation":"12218:5:11","nodeType":"VariableDeclaration","scope":2410,"src":"12210:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:11"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2410,"src":"12248:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":2390,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:11"},"scope":3398,"src":"12192:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2434,"nodeType":"Block","src":"12768:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"12786:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":2421,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":2420,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12795:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12808:3:11","memberName":"max","nodeType":"MemberAccess","src":"12795:16:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":2418,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12778:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2428,"nodeType":"ExpressionStatement","src":"12778:76:11"},{"expression":{"arguments":[{"id":2431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"12878:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":2429,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:11","typeDescriptions":{}}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12871:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":2417,"id":2433,"nodeType":"Return","src":"12864:20:11"}]},"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"12385:314:11","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":2435,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:11","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"value","nameLocation":"12730:5:11","nodeType":"VariableDeclaration","scope":2435,"src":"12722:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:11"},"returnParameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2435,"src":"12760:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":2415,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:11"},"scope":3398,"src":"12704:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"13280:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"13298:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2446,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":2445,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13307:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13320:3:11","memberName":"max","nodeType":"MemberAccess","src":"13307:16:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":2443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13290:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2453,"nodeType":"ExpressionStatement","src":"13290:76:11"},{"expression":{"arguments":[{"id":2456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"13390:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2454,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:11","typeDescriptions":{}}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13383:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":2442,"id":2458,"nodeType":"Return","src":"13376:20:11"}]},"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"12897:314:11","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:11","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"value","nameLocation":"13242:5:11","nodeType":"VariableDeclaration","scope":2460,"src":"13234:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:11"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2460,"src":"13272:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2440,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:11"},"scope":3398,"src":"13216:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2484,"nodeType":"Block","src":"13792:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"13810:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":2471,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":2470,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13832:3:11","memberName":"max","nodeType":"MemberAccess","src":"13819:16:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":2468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13802:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2478,"nodeType":"ExpressionStatement","src":"13802:76:11"},{"expression":{"arguments":[{"id":2481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"13902:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":2479,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:11","typeDescriptions":{}}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13895:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":2467,"id":2483,"nodeType":"Return","src":"13888:20:11"}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"13409:314:11","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":2485,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:11","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"value","nameLocation":"13754:5:11","nodeType":"VariableDeclaration","scope":2485,"src":"13746:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:11"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2485,"src":"13784:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":2465,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:11"},"scope":3398,"src":"13728:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2509,"nodeType":"Block","src":"14304:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"14322:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2496,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2495,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14331:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14344:3:11","memberName":"max","nodeType":"MemberAccess","src":"14331:16:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":2493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2503,"nodeType":"ExpressionStatement","src":"14314:76:11"},{"expression":{"arguments":[{"id":2506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"14414:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2504,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:11","typeDescriptions":{}}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14407:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":2492,"id":2508,"nodeType":"Return","src":"14400:20:11"}]},"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"13921:314:11","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":2510,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:11","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"value","nameLocation":"14266:5:11","nodeType":"VariableDeclaration","scope":2510,"src":"14258:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:11"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2510,"src":"14296:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2490,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:11"},"scope":3398,"src":"14240:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2534,"nodeType":"Block","src":"14816:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"14834:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2521,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":2520,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14843:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14856:3:11","memberName":"max","nodeType":"MemberAccess","src":"14843:16:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":2518,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14826:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2528,"nodeType":"ExpressionStatement","src":"14826:76:11"},{"expression":{"arguments":[{"id":2531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"14926:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2529,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:11","typeDescriptions":{}}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14919:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":2517,"id":2533,"nodeType":"Return","src":"14912:20:11"}]},"documentation":{"id":2511,"nodeType":"StructuredDocumentation","src":"14433:314:11","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":2535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:11","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"value","nameLocation":"14778:5:11","nodeType":"VariableDeclaration","scope":2535,"src":"14770:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:11"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2535,"src":"14808:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":2515,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:11"},"scope":3398,"src":"14752:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2559,"nodeType":"Block","src":"15328:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"15346:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2546,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":2545,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15355:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15368:3:11","memberName":"max","nodeType":"MemberAccess","src":"15355:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":2543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15338:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2553,"nodeType":"ExpressionStatement","src":"15338:76:11"},{"expression":{"arguments":[{"id":2556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"15438:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2554,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:11","typeDescriptions":{}}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15431:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2542,"id":2558,"nodeType":"Return","src":"15424:20:11"}]},"documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"14945:314:11","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":2560,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:11","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"value","nameLocation":"15290:5:11","nodeType":"VariableDeclaration","scope":2560,"src":"15282:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:11"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2560,"src":"15320:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2540,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:11"},"scope":3398,"src":"15264:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2584,"nodeType":"Block","src":"15840:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"15858:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2571,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":2570,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15867:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15880:3:11","memberName":"max","nodeType":"MemberAccess","src":"15867:16:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":2568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15850:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2578,"nodeType":"ExpressionStatement","src":"15850:76:11"},{"expression":{"arguments":[{"id":2581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"15950:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":2579,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:11","typeDescriptions":{}}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15943:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":2567,"id":2583,"nodeType":"Return","src":"15936:20:11"}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"15457:314:11","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":2585,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:11","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"value","nameLocation":"15802:5:11","nodeType":"VariableDeclaration","scope":2585,"src":"15794:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:11"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2585,"src":"15832:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2565,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:11"},"scope":3398,"src":"15776:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2609,"nodeType":"Block","src":"16352:123:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"16370:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2596,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":2595,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16379:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16392:3:11","memberName":"max","nodeType":"MemberAccess","src":"16379:16:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":2593,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16362:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2603,"nodeType":"ExpressionStatement","src":"16362:76:11"},{"expression":{"arguments":[{"id":2606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"16462:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2604,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:11","typeDescriptions":{}}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16455:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":2592,"id":2608,"nodeType":"Return","src":"16448:20:11"}]},"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"15969:314:11","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":2610,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:11","nodeType":"FunctionDefinition","parameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"value","nameLocation":"16314:5:11","nodeType":"VariableDeclaration","scope":2610,"src":"16306:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:11"},"returnParameters":{"id":2592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2610,"src":"16344:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2590,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:11"},"scope":3398,"src":"16288:187:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2634,"nodeType":"Block","src":"16858:120:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"16876:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2621,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16885:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16897:3:11","memberName":"max","nodeType":"MemberAccess","src":"16885:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":2618,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16868:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2628,"nodeType":"ExpressionStatement","src":"16868:74:11"},{"expression":{"arguments":[{"id":2631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"16965:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2629,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:11","typeDescriptions":{}}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16959:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2617,"id":2633,"nodeType":"Return","src":"16952:19:11"}]},"documentation":{"id":2611,"nodeType":"StructuredDocumentation","src":"16481:310:11","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":2635,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:11","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"value","nameLocation":"16821:5:11","nodeType":"VariableDeclaration","scope":2635,"src":"16813:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:11"},"returnParameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2635,"src":"16851:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2615,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:11"},"scope":3398,"src":"16796:182:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2655,"nodeType":"Block","src":"17252:103:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"17270:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":2643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17262:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2649,"nodeType":"ExpressionStatement","src":"17262:55:11"},{"expression":{"arguments":[{"id":2652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"17342:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:11","typeDescriptions":{}}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17334:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2642,"id":2654,"nodeType":"Return","src":"17327:21:11"}]},"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"16984:198:11","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":2656,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:11","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"value","nameLocation":"17213:5:11","nodeType":"VariableDeclaration","scope":2656,"src":"17206:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2637,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:11"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2656,"src":"17243:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:11"},"scope":3398,"src":"17187:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2678,"nodeType":"Block","src":"17790:124:11","statements":[{"expression":{"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"17800:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"17820:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2665,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:11","typeDescriptions":{}}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17813:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":2670,"nodeType":"ExpressionStatement","src":"17800:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2672,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"17844:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"17858:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":2671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17836:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2677,"nodeType":"ExpressionStatement","src":"17836:71:11"}]},"documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"17361:350:11","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":2679,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:11","nodeType":"FunctionDefinition","parameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"value","nameLocation":"17741:5:11","nodeType":"VariableDeclaration","scope":2679,"src":"17734:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2658,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:11"},"returnParameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:11","nodeType":"VariableDeclaration","scope":2679,"src":"17771:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":2661,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:11"},"scope":3398,"src":"17716:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2701,"nodeType":"Block","src":"18349:124:11","statements":[{"expression":{"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2687,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"18359:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"18379:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2688,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:11","typeDescriptions":{}}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18372:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":2693,"nodeType":"ExpressionStatement","src":"18359:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"18403:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"18417:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":2694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2700,"nodeType":"ExpressionStatement","src":"18395:71:11"}]},"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"17920:350:11","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":2702,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:11","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"value","nameLocation":"18300:5:11","nodeType":"VariableDeclaration","scope":2702,"src":"18293:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2681,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:11"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:11","nodeType":"VariableDeclaration","scope":2702,"src":"18330:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":2684,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:11"},"scope":3398,"src":"18275:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2724,"nodeType":"Block","src":"18908:124:11","statements":[{"expression":{"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"18918:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"18938:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2711,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:11","typeDescriptions":{}}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18931:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":2716,"nodeType":"ExpressionStatement","src":"18918:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"18962:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"18976:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":2717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18954:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2723,"nodeType":"ExpressionStatement","src":"18954:71:11"}]},"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"18479:350:11","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:11","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"value","nameLocation":"18859:5:11","nodeType":"VariableDeclaration","scope":2725,"src":"18852:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2704,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:11"},"returnParameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:11","nodeType":"VariableDeclaration","scope":2725,"src":"18889:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":2707,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:11"},"scope":3398,"src":"18834:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2747,"nodeType":"Block","src":"19467:124:11","statements":[{"expression":{"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2733,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"19477:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"19497:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2734,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:11","typeDescriptions":{}}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19490:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":2739,"nodeType":"ExpressionStatement","src":"19477:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"19521:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"19535:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":2740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19513:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2746,"nodeType":"ExpressionStatement","src":"19513:71:11"}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"19038:350:11","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":2748,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:11","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"value","nameLocation":"19418:5:11","nodeType":"VariableDeclaration","scope":2748,"src":"19411:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2727,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:11"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:11","nodeType":"VariableDeclaration","scope":2748,"src":"19448:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":2730,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:11"},"scope":3398,"src":"19393:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2770,"nodeType":"Block","src":"20026:124:11","statements":[{"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"20036:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"20056:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2757,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:11","typeDescriptions":{}}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20049:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":2762,"nodeType":"ExpressionStatement","src":"20036:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"20080:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"20094:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":2763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20072:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2769,"nodeType":"ExpressionStatement","src":"20072:71:11"}]},"documentation":{"id":2749,"nodeType":"StructuredDocumentation","src":"19597:350:11","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":2771,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:11","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"value","nameLocation":"19977:5:11","nodeType":"VariableDeclaration","scope":2771,"src":"19970:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2750,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:11"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:11","nodeType":"VariableDeclaration","scope":2771,"src":"20007:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":2753,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:11"},"scope":3398,"src":"19952:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2793,"nodeType":"Block","src":"20585:124:11","statements":[{"expression":{"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"20595:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"20615:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2780,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:11","typeDescriptions":{}}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20608:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":2785,"nodeType":"ExpressionStatement","src":"20595:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"20639:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"20653:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":2786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20631:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2792,"nodeType":"ExpressionStatement","src":"20631:71:11"}]},"documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"20156:350:11","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":2794,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:11","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"value","nameLocation":"20536:5:11","nodeType":"VariableDeclaration","scope":2794,"src":"20529:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2773,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:11"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:11","nodeType":"VariableDeclaration","scope":2794,"src":"20566:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":2776,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:11"},"scope":3398,"src":"20511:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2816,"nodeType":"Block","src":"21144:124:11","statements":[{"expression":{"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"21154:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"21174:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2803,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:11","typeDescriptions":{}}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21167:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":2808,"nodeType":"ExpressionStatement","src":"21154:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"21198:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"21212:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":2809,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21190:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2815,"nodeType":"ExpressionStatement","src":"21190:71:11"}]},"documentation":{"id":2795,"nodeType":"StructuredDocumentation","src":"20715:350:11","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":2817,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:11","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"value","nameLocation":"21095:5:11","nodeType":"VariableDeclaration","scope":2817,"src":"21088:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2796,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:11"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:11","nodeType":"VariableDeclaration","scope":2817,"src":"21125:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":2799,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:11"},"scope":3398,"src":"21070:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2839,"nodeType":"Block","src":"21703:124:11","statements":[{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"21713:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"21733:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2826,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:11","typeDescriptions":{}}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21726:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":2831,"nodeType":"ExpressionStatement","src":"21713:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"21757:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"21771:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":2832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21749:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2838,"nodeType":"ExpressionStatement","src":"21749:71:11"}]},"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"21274:350:11","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":2840,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:11","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"value","nameLocation":"21654:5:11","nodeType":"VariableDeclaration","scope":2840,"src":"21647:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2819,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:11"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:11","nodeType":"VariableDeclaration","scope":2840,"src":"21684:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":2822,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:11"},"scope":3398,"src":"21629:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2862,"nodeType":"Block","src":"22262:124:11","statements":[{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2848,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"22272:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"22292:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2849,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:11","typeDescriptions":{}}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":2854,"nodeType":"ExpressionStatement","src":"22272:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2856,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"22316:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"22330:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":2855,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22308:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2861,"nodeType":"ExpressionStatement","src":"22308:71:11"}]},"documentation":{"id":2841,"nodeType":"StructuredDocumentation","src":"21833:350:11","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":2863,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:11","nodeType":"FunctionDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"value","nameLocation":"22213:5:11","nodeType":"VariableDeclaration","scope":2863,"src":"22206:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2842,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:11"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:11","nodeType":"VariableDeclaration","scope":2863,"src":"22243:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":2845,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:11"},"scope":3398,"src":"22188:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2885,"nodeType":"Block","src":"22821:124:11","statements":[{"expression":{"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2871,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"22831:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"22851:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2872,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:11","typeDescriptions":{}}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22844:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":2877,"nodeType":"ExpressionStatement","src":"22831:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"22875:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"22889:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":2878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22867:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2884,"nodeType":"ExpressionStatement","src":"22867:71:11"}]},"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"22392:350:11","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":2886,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:11","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"value","nameLocation":"22772:5:11","nodeType":"VariableDeclaration","scope":2886,"src":"22765:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2865,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:11"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:11","nodeType":"VariableDeclaration","scope":2886,"src":"22802:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":2868,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:11"},"scope":3398,"src":"22747:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2908,"nodeType":"Block","src":"23380:124:11","statements":[{"expression":{"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"23390:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"23410:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2895,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:11","typeDescriptions":{}}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23403:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":2900,"nodeType":"ExpressionStatement","src":"23390:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2902,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"23434:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"23448:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":2901,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23426:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2907,"nodeType":"ExpressionStatement","src":"23426:71:11"}]},"documentation":{"id":2887,"nodeType":"StructuredDocumentation","src":"22951:350:11","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":2909,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:11","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"value","nameLocation":"23331:5:11","nodeType":"VariableDeclaration","scope":2909,"src":"23324:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2888,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:11"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:11","nodeType":"VariableDeclaration","scope":2909,"src":"23361:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":2891,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:11"},"scope":3398,"src":"23306:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2931,"nodeType":"Block","src":"23939:124:11","statements":[{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"23949:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"23969:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2918,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:11","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23962:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":2923,"nodeType":"ExpressionStatement","src":"23949:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"23993:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"24007:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":2924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23985:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2930,"nodeType":"ExpressionStatement","src":"23985:71:11"}]},"documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"23510:350:11","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":2932,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:11","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"value","nameLocation":"23890:5:11","nodeType":"VariableDeclaration","scope":2932,"src":"23883:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2911,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:11"},"returnParameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:11","nodeType":"VariableDeclaration","scope":2932,"src":"23920:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":2914,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:11"},"scope":3398,"src":"23865:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2954,"nodeType":"Block","src":"24498:124:11","statements":[{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"24508:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"24528:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2941,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:11","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24521:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":2946,"nodeType":"ExpressionStatement","src":"24508:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"24552:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"24566:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":2947,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24544:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2953,"nodeType":"ExpressionStatement","src":"24544:71:11"}]},"documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"24069:350:11","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:11","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"value","nameLocation":"24449:5:11","nodeType":"VariableDeclaration","scope":2955,"src":"24442:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2934,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:11"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:11","nodeType":"VariableDeclaration","scope":2955,"src":"24479:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":2937,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:11"},"scope":3398,"src":"24424:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"25057:124:11","statements":[{"expression":{"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"25067:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"25087:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2964,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:11","typeDescriptions":{}}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25080:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":2969,"nodeType":"ExpressionStatement","src":"25067:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"25111:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"25125:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":2970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25103:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2976,"nodeType":"ExpressionStatement","src":"25103:71:11"}]},"documentation":{"id":2956,"nodeType":"StructuredDocumentation","src":"24628:350:11","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":2978,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:11","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"value","nameLocation":"25008:5:11","nodeType":"VariableDeclaration","scope":2978,"src":"25001:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2957,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:11"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:11","nodeType":"VariableDeclaration","scope":2978,"src":"25038:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":2960,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:11"},"scope":3398,"src":"24983:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3000,"nodeType":"Block","src":"25616:124:11","statements":[{"expression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2986,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"25626:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"25646:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2987,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:11","typeDescriptions":{}}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25639:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":2992,"nodeType":"ExpressionStatement","src":"25626:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"25670:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"25684:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":2993,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25662:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2999,"nodeType":"ExpressionStatement","src":"25662:71:11"}]},"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"25187:350:11","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":3001,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:11","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"value","nameLocation":"25567:5:11","nodeType":"VariableDeclaration","scope":3001,"src":"25560:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2980,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:11"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:11","nodeType":"VariableDeclaration","scope":3001,"src":"25597:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":2983,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:11"},"scope":3398,"src":"25542:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3023,"nodeType":"Block","src":"26175:124:11","statements":[{"expression":{"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"26185:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"26205:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":3010,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:11","typeDescriptions":{}}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26198:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3015,"nodeType":"ExpressionStatement","src":"26185:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3017,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"26229:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"26243:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":3016,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26221:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3022,"nodeType":"ExpressionStatement","src":"26221:71:11"}]},"documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"25746:350:11","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":3024,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:11","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"value","nameLocation":"26126:5:11","nodeType":"VariableDeclaration","scope":3024,"src":"26119:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3003,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:11"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:11","nodeType":"VariableDeclaration","scope":3024,"src":"26156:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3006,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:11"},"scope":3398,"src":"26101:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3046,"nodeType":"Block","src":"26734:124:11","statements":[{"expression":{"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3032,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"26744:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"26764:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":3033,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:11","typeDescriptions":{}}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26757:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":3038,"nodeType":"ExpressionStatement","src":"26744:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"26788:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"26802:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":3039,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26780:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3045,"nodeType":"ExpressionStatement","src":"26780:71:11"}]},"documentation":{"id":3025,"nodeType":"StructuredDocumentation","src":"26305:350:11","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:11","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"value","nameLocation":"26685:5:11","nodeType":"VariableDeclaration","scope":3047,"src":"26678:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3026,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:11"},"returnParameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:11","nodeType":"VariableDeclaration","scope":3047,"src":"26715:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":3029,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:11"},"scope":3398,"src":"26660:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3069,"nodeType":"Block","src":"27293:124:11","statements":[{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3055,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"27303:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"27323:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":3056,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:11","typeDescriptions":{}}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27316:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":3061,"nodeType":"ExpressionStatement","src":"27303:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"27347:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"27361:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":3062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27339:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3068,"nodeType":"ExpressionStatement","src":"27339:71:11"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"26864:350:11","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:11","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"value","nameLocation":"27244:5:11","nodeType":"VariableDeclaration","scope":3070,"src":"27237:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3049,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:11"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:11","nodeType":"VariableDeclaration","scope":3070,"src":"27274:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":3052,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:11"},"scope":3398,"src":"27219:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3092,"nodeType":"Block","src":"27852:124:11","statements":[{"expression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3078,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"27862:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"27882:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":3079,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:11","typeDescriptions":{}}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27875:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":3084,"nodeType":"ExpressionStatement","src":"27862:26:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"27906:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"27920:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":3085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27898:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3091,"nodeType":"ExpressionStatement","src":"27898:71:11"}]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"27423:350:11","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":3093,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:11","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"value","nameLocation":"27803:5:11","nodeType":"VariableDeclaration","scope":3093,"src":"27796:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3072,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:11"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:11","nodeType":"VariableDeclaration","scope":3093,"src":"27833:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":3075,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:11"},"scope":3398,"src":"27778:198:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3115,"nodeType":"Block","src":"28404:122:11","statements":[{"expression":{"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"28414:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"28433:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":3102,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:11","typeDescriptions":{}}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28427:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":3107,"nodeType":"ExpressionStatement","src":"28414:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"28457:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"28471:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":3108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28449:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3114,"nodeType":"ExpressionStatement","src":"28449:70:11"}]},"documentation":{"id":3094,"nodeType":"StructuredDocumentation","src":"27982:345:11","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":3116,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:11","nodeType":"FunctionDefinition","parameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"value","nameLocation":"28356:5:11","nodeType":"VariableDeclaration","scope":3116,"src":"28349:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3095,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:11"},"returnParameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:11","nodeType":"VariableDeclaration","scope":3116,"src":"28386:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":3098,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:11"},"scope":3398,"src":"28332:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3138,"nodeType":"Block","src":"28954:122:11","statements":[{"expression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3124,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"28964:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"28983:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":3125,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:11","typeDescriptions":{}}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28977:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":3130,"nodeType":"ExpressionStatement","src":"28964:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"29007:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"29021:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":3131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28999:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3137,"nodeType":"ExpressionStatement","src":"28999:70:11"}]},"documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"28532:345:11","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":3139,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:11","nodeType":"FunctionDefinition","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"value","nameLocation":"28906:5:11","nodeType":"VariableDeclaration","scope":3139,"src":"28899:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3118,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:11"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:11","nodeType":"VariableDeclaration","scope":3139,"src":"28936:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":3121,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:11"},"scope":3398,"src":"28882:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3161,"nodeType":"Block","src":"29504:122:11","statements":[{"expression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3147,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"29514:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"29533:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":3148,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:11","typeDescriptions":{}}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29527:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":3153,"nodeType":"ExpressionStatement","src":"29514:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"29557:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"29571:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":3154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29549:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3160,"nodeType":"ExpressionStatement","src":"29549:70:11"}]},"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"29082:345:11","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":3162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:11","nodeType":"FunctionDefinition","parameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"value","nameLocation":"29456:5:11","nodeType":"VariableDeclaration","scope":3162,"src":"29449:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3141,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:11"},"returnParameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3145,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:11","nodeType":"VariableDeclaration","scope":3162,"src":"29486:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":3144,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:11"},"scope":3398,"src":"29432:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3184,"nodeType":"Block","src":"30054:122:11","statements":[{"expression":{"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"30064:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"30083:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":3171,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:11","typeDescriptions":{}}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30077:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":3176,"nodeType":"ExpressionStatement","src":"30064:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3178,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"30107:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"30121:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":3177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30099:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3183,"nodeType":"ExpressionStatement","src":"30099:70:11"}]},"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"29632:345:11","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":3185,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:11","nodeType":"FunctionDefinition","parameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"value","nameLocation":"30006:5:11","nodeType":"VariableDeclaration","scope":3185,"src":"29999:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3164,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:11"},"returnParameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:11","nodeType":"VariableDeclaration","scope":3185,"src":"30036:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":3167,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:11"},"scope":3398,"src":"29982:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3207,"nodeType":"Block","src":"30604:122:11","statements":[{"expression":{"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3193,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"30614:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"30633:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":3194,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:11","typeDescriptions":{}}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30627:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":3199,"nodeType":"ExpressionStatement","src":"30614:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3201,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"30657:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"30671:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":3200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30649:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3206,"nodeType":"ExpressionStatement","src":"30649:70:11"}]},"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"30182:345:11","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":3208,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:11","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"value","nameLocation":"30556:5:11","nodeType":"VariableDeclaration","scope":3208,"src":"30549:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3187,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:11"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:11","nodeType":"VariableDeclaration","scope":3208,"src":"30586:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":3190,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:11"},"scope":3398,"src":"30532:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3230,"nodeType":"Block","src":"31154:122:11","statements":[{"expression":{"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"31164:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"31183:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":3217,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:11","typeDescriptions":{}}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31177:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":3222,"nodeType":"ExpressionStatement","src":"31164:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"31207:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"31221:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":3223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31199:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"ExpressionStatement","src":"31199:70:11"}]},"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"30732:345:11","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":3231,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:11","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"value","nameLocation":"31106:5:11","nodeType":"VariableDeclaration","scope":3231,"src":"31099:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3210,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:11"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:11","nodeType":"VariableDeclaration","scope":3231,"src":"31136:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":3213,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:11"},"scope":3398,"src":"31082:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3253,"nodeType":"Block","src":"31704:122:11","statements":[{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3239,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"31714:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"31733:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":3240,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:11","typeDescriptions":{}}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31727:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":3245,"nodeType":"ExpressionStatement","src":"31714:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"31757:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"31771:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":3246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3252,"nodeType":"ExpressionStatement","src":"31749:70:11"}]},"documentation":{"id":3232,"nodeType":"StructuredDocumentation","src":"31282:345:11","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":3254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:11","nodeType":"FunctionDefinition","parameters":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"value","nameLocation":"31656:5:11","nodeType":"VariableDeclaration","scope":3254,"src":"31649:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3233,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:11"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:11","nodeType":"VariableDeclaration","scope":3254,"src":"31686:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":3236,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:11"},"scope":3398,"src":"31632:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3276,"nodeType":"Block","src":"32254:122:11","statements":[{"expression":{"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"32264:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"32283:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":3263,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:11","typeDescriptions":{}}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32277:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":3268,"nodeType":"ExpressionStatement","src":"32264:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"32307:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"32321:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":3269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32299:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3275,"nodeType":"ExpressionStatement","src":"32299:70:11"}]},"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"31832:345:11","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":3277,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:11","nodeType":"FunctionDefinition","parameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"value","nameLocation":"32206:5:11","nodeType":"VariableDeclaration","scope":3277,"src":"32199:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3256,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:11"},"returnParameters":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3260,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:11","nodeType":"VariableDeclaration","scope":3277,"src":"32236:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":3259,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:11"},"scope":3398,"src":"32182:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3299,"nodeType":"Block","src":"32804:122:11","statements":[{"expression":{"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"32814:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"32833:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":3286,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:11","typeDescriptions":{}}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32827:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":3291,"nodeType":"ExpressionStatement","src":"32814:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"32857:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"32871:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":3292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32849:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3298,"nodeType":"ExpressionStatement","src":"32849:70:11"}]},"documentation":{"id":3278,"nodeType":"StructuredDocumentation","src":"32382:345:11","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":3300,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:11","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"value","nameLocation":"32756:5:11","nodeType":"VariableDeclaration","scope":3300,"src":"32749:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3279,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:11"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:11","nodeType":"VariableDeclaration","scope":3300,"src":"32786:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":3282,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:11"},"scope":3398,"src":"32732:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3322,"nodeType":"Block","src":"33354:122:11","statements":[{"expression":{"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3308,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"33364:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"33383:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3309,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:11","typeDescriptions":{}}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33377:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":3314,"nodeType":"ExpressionStatement","src":"33364:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3316,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"33407:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"33421:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":3315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33399:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3321,"nodeType":"ExpressionStatement","src":"33399:70:11"}]},"documentation":{"id":3301,"nodeType":"StructuredDocumentation","src":"32932:345:11","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":3323,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:11","nodeType":"FunctionDefinition","parameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"value","nameLocation":"33306:5:11","nodeType":"VariableDeclaration","scope":3323,"src":"33299:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3302,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:11"},"returnParameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:11","nodeType":"VariableDeclaration","scope":3323,"src":"33336:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3305,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:11"},"scope":3398,"src":"33282:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"33904:122:11","statements":[{"expression":{"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"33914:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"33933:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":3332,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:11","typeDescriptions":{}}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33927:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":3337,"nodeType":"ExpressionStatement","src":"33914:25:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"33957:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"33971:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":3338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33949:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3344,"nodeType":"ExpressionStatement","src":"33949:70:11"}]},"documentation":{"id":3324,"nodeType":"StructuredDocumentation","src":"33482:345:11","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:11","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"value","nameLocation":"33856:5:11","nodeType":"VariableDeclaration","scope":3346,"src":"33849:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3325,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:11"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:11","nodeType":"VariableDeclaration","scope":3346,"src":"33886:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":3328,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:11"},"scope":3398,"src":"33832:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3368,"nodeType":"Block","src":"34447:120:11","statements":[{"expression":{"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3354,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"34457:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"34475:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":3355,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:11","typeDescriptions":{}}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34470:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":3360,"nodeType":"ExpressionStatement","src":"34457:24:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"34499:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"34513:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":3361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34491:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3367,"nodeType":"ExpressionStatement","src":"34491:69:11"}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"34032:340:11","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":3369,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:11","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"value","nameLocation":"34400:5:11","nodeType":"VariableDeclaration","scope":3369,"src":"34393:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3348,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:11"},"returnParameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:11","nodeType":"VariableDeclaration","scope":3369,"src":"34430:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":3351,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:11"},"scope":3398,"src":"34377:190:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3396,"nodeType":"Block","src":"34845:233:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"34962:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":3383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3382,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3381,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34979:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34992:3:11","memberName":"max","nodeType":"MemberAccess","src":"34979:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:11","typeDescriptions":{}}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34971:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":3377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34954:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3390,"nodeType":"ExpressionStatement","src":"34954:87:11"},{"expression":{"arguments":[{"id":3393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"35065:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3391,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:11","typeDescriptions":{}}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35058:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3376,"id":3395,"nodeType":"Return","src":"35051:20:11"}]},"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"34573:203:11","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":3397,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:11","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"value","nameLocation":"34807:5:11","nodeType":"VariableDeclaration","scope":3397,"src":"34799:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:11"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3397,"src":"34837:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3374,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:11"},"scope":3398,"src":"34781:297:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3399,"src":"927:34153:11","usedErrors":[]}],"src":"192:34889:11"}},"contracts/Distributor.sol":{"id":12,"ast":{"absolutePath":"contracts/Distributor.sol","exportedSymbols":{"CampaignAlreadyExists":[4422],"CampaignDoesNotExist":[4420],"CampaignDurationBelowHour":[4424],"CampaignRewardTokenNotWhitelisted":[4426],"CampaignRewardTooLow":[4428],"CampaignSouldStartInFuture":[4430],"Claim":[3419],"Distributor":[4396],"ICore":[4416],"IERC20":[1115],"InvalidDispute":[4432],"InvalidLengths":[4434],"InvalidParam":[4436],"InvalidParams":[4438],"InvalidProof":[4440],"InvalidReward":[4444],"InvalidSignature":[4446],"InvalidUninitializedRoot":[4442],"MerkleTree":[3412],"NoDispute":[4448],"NotGovernor":[4450],"NotGovernorOrGuardian":[4452],"NotSigned":[4454],"NotTrusted":[4456],"NotWhitelisted":[4458],"SafeCast":[3398],"SafeERC20":[1527],"UUPSHelper":[4533],"UUPSUpgradeable":[693],"UnresolvedDispute":[4460],"ZeroAddress":[4462]},"id":4397,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":3400,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"3622:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4397,"sourceUnit":1116,"src":"3648:72:12","symbolAliases":[{"foreign":{"id":3401,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"3657:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":3404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4397,"sourceUnit":1528,"src":"3721:84:12","symbolAliases":[{"foreign":{"id":3403,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"3730:9:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":3406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4397,"sourceUnit":3399,"src":"3806:75:12","symbolAliases":[{"foreign":{"id":3405,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3815:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/utils/UUPSHelper.sol","file":"./utils/UUPSHelper.sol","id":3407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4397,"sourceUnit":4534,"src":"3883:32:12","symbolAliases":[],"unitAlias":""},{"canonicalName":"MerkleTree","id":3412,"members":[{"constant":false,"id":3409,"mutability":"mutable","name":"merkleRoot","nameLocation":"4298:10:12","nodeType":"VariableDeclaration","scope":3412,"src":"4290:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4290:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"ipfsHash","nameLocation":"4356:8:12","nodeType":"VariableDeclaration","scope":3412,"src":"4348:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4348:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"MerkleTree","nameLocation":"3924:10:12","nodeType":"StructDefinition","scope":4397,"src":"3917:450:12","visibility":"public"},{"canonicalName":"Claim","id":3419,"members":[{"constant":false,"id":3414,"mutability":"mutable","name":"amount","nameLocation":"4396:6:12","nodeType":"VariableDeclaration","scope":3419,"src":"4388:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3413,"name":"uint208","nodeType":"ElementaryTypeName","src":"4388:7:12","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"timestamp","nameLocation":"4415:9:12","nodeType":"VariableDeclaration","scope":3419,"src":"4408:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3415,"name":"uint48","nodeType":"ElementaryTypeName","src":"4408:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3418,"mutability":"mutable","name":"merkleRoot","nameLocation":"4438:10:12","nodeType":"VariableDeclaration","scope":3419,"src":"4430:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4430:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Claim","nameLocation":"4376:5:12","nodeType":"StructDefinition","scope":4397,"src":"4369:82:12","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":3421,"name":"UUPSHelper","nameLocations":["4598:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":4533,"src":"4598:10:12"},"id":3422,"nodeType":"InheritanceSpecifier","src":"4598:10:12"}],"canonicalName":"Distributor","contractDependencies":[],"contractKind":"contract","documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"4453:121:12","text":"@title Distributor\n @notice Allows to claim rewards distributed to them through Merkl\n @author Angle Labs. Inc"},"fullyImplemented":true,"id":4396,"linearizedBaseContracts":[4396,4533,693,378,9,557],"name":"Distributor","nameLocation":"4583:11:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3426,"libraryName":{"id":3423,"name":"SafeERC20","nameLocations":["4621:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1527,"src":"4621:9:12"},"nodeType":"UsingForDirective","src":"4615:27:12","typeName":{"id":3425,"nodeType":"UserDefinedTypeName","pathNode":{"id":3424,"name":"IERC20","nameLocations":["4635:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"4635:6:12"},"referencedDeclaration":1115,"src":"4635:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}}},{"constant":true,"documentation":{"id":3427,"nodeType":"StructuredDocumentation","src":"4648:26:12","text":"@notice Epoch duration"},"id":3430,"mutability":"constant","name":"_EPOCH_DURATION","nameLocation":"4704:15:12","nodeType":"VariableDeclaration","scope":4396,"src":"4679:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3428,"name":"uint32","nodeType":"ElementaryTypeName","src":"4679:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"33363030","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4722:4:12","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"3600"},"visibility":"internal"},{"constant":false,"documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"4819:58:12","text":"@notice Tree of claimable tokens through this contract"},"functionSelector":"fd54b228","id":3434,"mutability":"mutable","name":"tree","nameLocation":"4900:4:12","nodeType":"VariableDeclaration","scope":4396,"src":"4882:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree"},"typeName":{"id":3433,"nodeType":"UserDefinedTypeName","pathNode":{"id":3432,"name":"MerkleTree","nameLocations":["4882:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3412,"src":"4882:10:12"},"referencedDeclaration":3412,"src":"4882:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage_ptr","typeString":"struct MerkleTree"}},"visibility":"public"},{"constant":false,"documentation":{"id":3435,"nodeType":"StructuredDocumentation","src":"4911:80:12","text":"@notice Tree that was in place in the contract before the last `tree` update"},"functionSelector":"cce80e7a","id":3438,"mutability":"mutable","name":"lastTree","nameLocation":"5014:8:12","nodeType":"VariableDeclaration","scope":4396,"src":"4996:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree"},"typeName":{"id":3437,"nodeType":"UserDefinedTypeName","pathNode":{"id":3436,"name":"MerkleTree","nameLocations":["4996:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3412,"src":"4996:10:12"},"referencedDeclaration":3412,"src":"4996:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage_ptr","typeString":"struct MerkleTree"}},"visibility":"public"},{"constant":false,"documentation":{"id":3439,"nodeType":"StructuredDocumentation","src":"5029:55:12","text":"@notice Token to deposit to freeze the roots update"},"functionSelector":"c748d261","id":3442,"mutability":"mutable","name":"disputeToken","nameLocation":"5103:12:12","nodeType":"VariableDeclaration","scope":4396,"src":"5089:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},"typeName":{"id":3441,"nodeType":"UserDefinedTypeName","pathNode":{"id":3440,"name":"IERC20","nameLocations":["5089:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"5089:6:12"},"referencedDeclaration":1115,"src":"5089:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"documentation":{"id":3443,"nodeType":"StructuredDocumentation","src":"5122:51:12","text":"@notice `Core` contract handling access control"},"functionSelector":"f2f4eb26","id":3446,"mutability":"mutable","name":"core","nameLocation":"5191:4:12","nodeType":"VariableDeclaration","scope":4396,"src":"5178:17:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"},"typeName":{"id":3445,"nodeType":"UserDefinedTypeName","pathNode":{"id":3444,"name":"ICore","nameLocations":["5178:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":4416,"src":"5178:5:12"},"referencedDeclaration":4416,"src":"5178:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"visibility":"public"},{"constant":false,"documentation":{"id":3447,"nodeType":"StructuredDocumentation","src":"5202:103:12","text":"@notice Address which created the dispute\n @dev Used to store if there is an ongoing dispute"},"functionSelector":"6ac56103","id":3449,"mutability":"mutable","name":"disputer","nameLocation":"5325:8:12","nodeType":"VariableDeclaration","scope":4396,"src":"5310:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3448,"name":"address","nodeType":"ElementaryTypeName","src":"5310:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":3450,"nodeType":"StructuredDocumentation","src":"5340:51:12","text":"@notice When the current tree will become valid"},"functionSelector":"5cec892a","id":3452,"mutability":"mutable","name":"endOfDisputePeriod","nameLocation":"5410:18:12","nodeType":"VariableDeclaration","scope":4396,"src":"5396:32:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3451,"name":"uint48","nodeType":"ElementaryTypeName","src":"5396:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"public"},{"constant":false,"documentation":{"id":3453,"nodeType":"StructuredDocumentation","src":"5435:84:12","text":"@notice Time after which a change in a tree becomes effective, in EPOCH_DURATION"},"functionSelector":"5bf31d4d","id":3455,"mutability":"mutable","name":"disputePeriod","nameLocation":"5538:13:12","nodeType":"VariableDeclaration","scope":4396,"src":"5524:27:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3454,"name":"uint48","nodeType":"ElementaryTypeName","src":"5524:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"public"},{"constant":false,"documentation":{"id":3456,"nodeType":"StructuredDocumentation","src":"5558:56:12","text":"@notice Amount to deposit to freeze the roots update"},"functionSelector":"09454ba3","id":3458,"mutability":"mutable","name":"disputeAmount","nameLocation":"5634:13:12","nodeType":"VariableDeclaration","scope":4396,"src":"5619:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"5619:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"5654:68:12","text":"@notice Mapping user -> token -> amount to track claimed amounts"},"functionSelector":"0c9cbf0e","id":3466,"mutability":"mutable","name":"claimed","nameLocation":"5780:7:12","nodeType":"VariableDeclaration","scope":4396,"src":"5727:60:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Claim_$3419_storage_$_$","typeString":"mapping(address => mapping(address => struct Claim))"},"typeName":{"id":3465,"keyType":{"id":3460,"name":"address","nodeType":"ElementaryTypeName","src":"5735:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5727:45:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Claim_$3419_storage_$_$","typeString":"mapping(address => mapping(address => struct Claim))"},"valueType":{"id":3464,"keyType":{"id":3461,"name":"address","nodeType":"ElementaryTypeName","src":"5754:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5746:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Claim_$3419_storage_$","typeString":"mapping(address => struct Claim)"},"valueType":{"id":3463,"nodeType":"UserDefinedTypeName","pathNode":{"id":3462,"name":"Claim","nameLocations":["5765:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":3419,"src":"5765:5:12"},"referencedDeclaration":3419,"src":"5765:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$3419_storage_ptr","typeString":"struct Claim"}}}},"visibility":"public"},{"constant":false,"documentation":{"id":3467,"nodeType":"StructuredDocumentation","src":"5794:50:12","text":"@notice Trusted EOAs to update the Merkle root"},"functionSelector":"e57480e5","id":3471,"mutability":"mutable","name":"canUpdateMerkleRoot","nameLocation":"5884:19:12","nodeType":"VariableDeclaration","scope":4396,"src":"5849:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3470,"keyType":{"id":3468,"name":"address","nodeType":"ElementaryTypeName","src":"5857:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5849:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":3472,"nodeType":"StructuredDocumentation","src":"5910:61:12","text":"@notice Whether or not to disable permissionless claiming"},"functionSelector":"14769142","id":3476,"mutability":"mutable","name":"onlyOperatorCanClaim","nameLocation":"6011:20:12","nodeType":"VariableDeclaration","scope":4396,"src":"5976:55:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3475,"keyType":{"id":3473,"name":"address","nodeType":"ElementaryTypeName","src":"5984:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5976:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"5995:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"6038:54:12","text":"@notice user -> operator -> authorisation to claim"},"functionSelector":"2637588e","id":3483,"mutability":"mutable","name":"operators","nameLocation":"6152:9:12","nodeType":"VariableDeclaration","scope":4396,"src":"6097:64:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":3482,"keyType":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"6097:47:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":3481,"keyType":{"id":3479,"name":"address","nodeType":"ElementaryTypeName","src":"6124:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"6116:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"6135:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":3487,"mutability":"mutable","name":"__gap","nameLocation":"6188:5:12","nodeType":"VariableDeclaration","scope":4396,"src":"6168:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$38_storage","typeString":"uint256[38]"},"typeName":{"baseType":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"6168:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3486,"length":{"hexValue":"3338","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6176:2:12","typeDescriptions":{"typeIdentifier":"t_rational_38_by_1","typeString":"int_const 38"},"value":"38"},"nodeType":"ArrayTypeName","src":"6168:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$38_storage_ptr","typeString":"uint256[38]"}},"visibility":"private"},{"anonymous":false,"eventSelector":"f7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683","id":3495,"name":"Claimed","nameLocation":"6292:7:12","nodeType":"EventDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"6316:4:12","nodeType":"VariableDeclaration","scope":3495,"src":"6300:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3488,"name":"address","nodeType":"ElementaryTypeName","src":"6300:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3491,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"6338:5:12","nodeType":"VariableDeclaration","scope":3495,"src":"6322:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3490,"name":"address","nodeType":"ElementaryTypeName","src":"6322:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3493,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6353:6:12","nodeType":"VariableDeclaration","scope":3495,"src":"6345:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"6345:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6299:61:12"},"src":"6286:75:12"},{"anonymous":false,"eventSelector":"39bb629f3d59f5eddf978050e1f5fabeca2b5d02dfc9c25e84f32e7da1069db4","id":3499,"name":"DisputeAmountUpdated","nameLocation":"6372:20:12","nodeType":"EventDefinition","parameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"indexed":false,"mutability":"mutable","name":"_disputeAmount","nameLocation":"6401:14:12","nodeType":"VariableDeclaration","scope":3499,"src":"6393:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"6393:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6392:24:12"},"src":"6366:51:12"},{"anonymous":false,"eventSelector":"5eca00b8ed745eee61451333090bfa56aa1f2a9e696a2aebe5f1f5b6cef6f2ff","id":3503,"name":"Disputed","nameLocation":"6428:8:12","nodeType":"EventDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"6444:6:12","nodeType":"VariableDeclaration","scope":3503,"src":"6437:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3500,"name":"string","nodeType":"ElementaryTypeName","src":"6437:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6436:15:12"},"src":"6422:30:12"},{"anonymous":false,"eventSelector":"fdf22e84af74bd4ab6b9646f6370a02bc886ed6ac25882db14e4ebf4b8e3bc7e","id":3507,"name":"DisputePeriodUpdated","nameLocation":"6463:20:12","nodeType":"EventDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"indexed":false,"mutability":"mutable","name":"_disputePeriod","nameLocation":"6491:14:12","nodeType":"VariableDeclaration","scope":3507,"src":"6484:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3504,"name":"uint48","nodeType":"ElementaryTypeName","src":"6484:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"6483:23:12"},"src":"6457:50:12"},{"anonymous":false,"eventSelector":"8015c5005d9ad5d85ca80d3f894f08e0159277704c54166e5cff108800fa80cd","id":3511,"name":"DisputeResolved","nameLocation":"6518:15:12","nodeType":"EventDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"indexed":false,"mutability":"mutable","name":"valid","nameLocation":"6539:5:12","nodeType":"VariableDeclaration","scope":3511,"src":"6534:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3508,"name":"bool","nodeType":"ElementaryTypeName","src":"6534:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6533:12:12"},"src":"6512:34:12"},{"anonymous":false,"eventSelector":"1db8d6629941dcb63d5e0c927b89c174c714e139a4b9107a49de839d755f5d74","id":3515,"name":"DisputeTokenUpdated","nameLocation":"6557:19:12","nodeType":"EventDefinition","parameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"indexed":true,"mutability":"mutable","name":"_disputeToken","nameLocation":"6593:13:12","nodeType":"VariableDeclaration","scope":3515,"src":"6577:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3512,"name":"address","nodeType":"ElementaryTypeName","src":"6577:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6576:31:12"},"src":"6551:57:12"},{"anonymous":false,"eventSelector":"81d714ca01079a19c106993b49b2764df6bb6abe740164ef7b77ee9c100a024a","id":3521,"name":"OperatorClaimingToggled","nameLocation":"6619:23:12","nodeType":"EventDefinition","parameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"6659:4:12","nodeType":"VariableDeclaration","scope":3521,"src":"6643:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3516,"name":"address","nodeType":"ElementaryTypeName","src":"6643:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3519,"indexed":false,"mutability":"mutable","name":"isEnabled","nameLocation":"6670:9:12","nodeType":"VariableDeclaration","scope":3521,"src":"6665:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3518,"name":"bool","nodeType":"ElementaryTypeName","src":"6665:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6642:38:12"},"src":"6613:68:12"},{"anonymous":false,"eventSelector":"42343f44c66ea1eaffa334760d3da2cb731d2a0b3b3e30423df997faa36cc95c","id":3529,"name":"OperatorToggled","nameLocation":"6692:15:12","nodeType":"EventDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"6724:4:12","nodeType":"VariableDeclaration","scope":3529,"src":"6708:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3522,"name":"address","nodeType":"ElementaryTypeName","src":"6708:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3525,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6746:8:12","nodeType":"VariableDeclaration","scope":3529,"src":"6730:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3524,"name":"address","nodeType":"ElementaryTypeName","src":"6730:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3527,"indexed":false,"mutability":"mutable","name":"isWhitelisted","nameLocation":"6761:13:12","nodeType":"VariableDeclaration","scope":3529,"src":"6756:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3526,"name":"bool","nodeType":"ElementaryTypeName","src":"6756:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6707:68:12"},"src":"6686:90:12"},{"anonymous":false,"eventSelector":"fff3b3844276f57024e0b42afec1a37f75db36511e43819a4f2a63ab7862b648","id":3537,"name":"Recovered","nameLocation":"6787:9:12","nodeType":"EventDefinition","parameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3531,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"6813:5:12","nodeType":"VariableDeclaration","scope":3537,"src":"6797:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3530,"name":"address","nodeType":"ElementaryTypeName","src":"6797:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3533,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"6836:2:12","nodeType":"VariableDeclaration","scope":3537,"src":"6820:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3532,"name":"address","nodeType":"ElementaryTypeName","src":"6820:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3535,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6848:6:12","nodeType":"VariableDeclaration","scope":3537,"src":"6840:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"6840:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6796:59:12"},"src":"6781:75:12"},{"anonymous":false,"eventSelector":"44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6","id":3539,"name":"Revoked","nameLocation":"6867:7:12","nodeType":"EventDefinition","parameters":{"id":3538,"nodeType":"ParameterList","parameters":[],"src":"6874:2:12"},"src":"6861:16:12"},{"anonymous":false,"eventSelector":"23aa2e4f757a7bd974085d3e11439a843b137b30905e3ffd51b2097c34aef62e","id":3547,"name":"TreeUpdated","nameLocation":"6971:11:12","nodeType":"EventDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"6991:10:12","nodeType":"VariableDeclaration","scope":3547,"src":"6983:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6983:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3543,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"7011:8:12","nodeType":"VariableDeclaration","scope":3547,"src":"7003:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7003:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3545,"indexed":false,"mutability":"mutable","name":"endOfDisputePeriod","nameLocation":"7028:18:12","nodeType":"VariableDeclaration","scope":3547,"src":"7021:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3544,"name":"uint48","nodeType":"ElementaryTypeName","src":"7021:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"6982:65:12"},"src":"6965:83:12"},{"anonymous":false,"eventSelector":"7628ea5f6112a16b36a8239aa208395a8e8f221688cfb3a5461faffb9700abcd","id":3553,"name":"TrustedToggled","nameLocation":"7059:14:12","nodeType":"EventDefinition","parameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"indexed":true,"mutability":"mutable","name":"eoa","nameLocation":"7090:3:12","nodeType":"VariableDeclaration","scope":3553,"src":"7074:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3548,"name":"address","nodeType":"ElementaryTypeName","src":"7074:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3551,"indexed":false,"mutability":"mutable","name":"trust","nameLocation":"7100:5:12","nodeType":"VariableDeclaration","scope":3553,"src":"7095:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3550,"name":"bool","nodeType":"ElementaryTypeName","src":"7095:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7073:33:12"},"src":"7053:54:12"},{"body":{"id":3567,"nodeType":"Block","src":"7324:102:12","statements":[{"condition":{"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7338:38:12","subExpression":{"arguments":[{"expression":{"id":3558,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7365:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7369:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7365:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3556,"name":"core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"7339:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7344:20:12","memberName":"isGovernorOrGuardian","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"7339:25:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7339:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3565,"nodeType":"IfStatement","src":"7334:74:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3562,"name":"NotGovernorOrGuardian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"7385:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7385:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3564,"nodeType":"RevertStatement","src":"7378:30:12"}},{"id":3566,"nodeType":"PlaceholderStatement","src":"7418:1:12"}]},"documentation":{"id":3554,"nodeType":"StructuredDocumentation","src":"7199:86:12","text":"@notice Checks whether the `msg.sender` has the governor role or the guardian role"},"id":3568,"name":"onlyGovernorOrGuardian","nameLocation":"7299:22:12","nodeType":"ModifierDefinition","parameters":{"id":3555,"nodeType":"ParameterList","parameters":[],"src":"7321:2:12"},"src":"7290:136:12","virtual":false,"visibility":"internal"},{"body":{"id":3582,"nodeType":"Block","src":"7547:82:12","statements":[{"condition":{"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7561:28:12","subExpression":{"arguments":[{"expression":{"id":3573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7578:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7582:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7578:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3571,"name":"core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"7562:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:10:12","memberName":"isGovernor","nodeType":"MemberAccess","referencedDeclaration":4407,"src":"7562:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7562:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3580,"nodeType":"IfStatement","src":"7557:54:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3577,"name":"NotGovernor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"7598:11:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7598:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3579,"nodeType":"RevertStatement","src":"7591:20:12"}},{"id":3581,"nodeType":"PlaceholderStatement","src":"7621:1:12"}]},"documentation":{"id":3569,"nodeType":"StructuredDocumentation","src":"7432:86:12","text":"@notice Checks whether the `msg.sender` has the governor role or the guardian role"},"id":3583,"name":"onlyGovernor","nameLocation":"7532:12:12","nodeType":"ModifierDefinition","parameters":{"id":3570,"nodeType":"ParameterList","parameters":[],"src":"7544:2:12"},"src":"7523:106:12","virtual":false,"visibility":"internal"},{"body":{"id":3611,"nodeType":"Block","src":"7770:165:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"7784:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3589,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7792:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7796:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7792:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7784:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3592,"name":"canUpdateMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"7806:19:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3595,"indexExpression":{"expression":{"id":3593,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7826:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7830:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7826:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7806:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7841:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7806:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7784:58:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7846:38:12","subExpression":{"arguments":[{"expression":{"id":3601,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7873:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7877:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7873:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3599,"name":"core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"7847:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7852:20:12","memberName":"isGovernorOrGuardian","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"7847:25:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7847:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7784:100:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3609,"nodeType":"IfStatement","src":"7780:137:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3606,"name":"NotTrusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"7905:10:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7905:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3608,"nodeType":"RevertStatement","src":"7898:19:12"}},{"id":3610,"nodeType":"PlaceholderStatement","src":"7927:1:12"}]},"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"7635:89:12","text":"@notice Checks whether the `msg.sender` is the `user` address or is a trusted address"},"id":3612,"name":"onlyTrustedOrUser","nameLocation":"7738:17:12","nodeType":"ModifierDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"user","nameLocation":"7764:4:12","nodeType":"VariableDeclaration","scope":3612,"src":"7756:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3585,"name":"address","nodeType":"ElementaryTypeName","src":"7756:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7755:14:12"},"src":"7729:206:12","virtual":false,"visibility":"internal"},{"body":{"id":3617,"nodeType":"Block","src":"8053:2:12","statements":[]},"id":3618,"implemented":true,"kind":"constructor","modifiers":[{"id":3615,"kind":"modifierInvocation","modifierName":{"id":3614,"name":"initializer","nameLocations":["8041:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":459,"src":"8041:11:12"},"nodeType":"ModifierInvocation","src":"8041:11:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[],"src":"8038:2:12"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[],"src":"8053:0:12"},"scope":4396,"src":"8027:28:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3643,"nodeType":"Block","src":"8115:93:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3628,"name":"_core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"8137:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}],"id":3627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8129:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3626,"name":"address","nodeType":"ElementaryTypeName","src":"8129:7:12","typeDescriptions":{}}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8155:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8147:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3630,"name":"address","nodeType":"ElementaryTypeName","src":"8147:7:12","typeDescriptions":{}}},"id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8147:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8129:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3638,"nodeType":"IfStatement","src":"8125:54:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3635,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"8166:11:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8166:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3637,"nodeType":"RevertStatement","src":"8159:20:12"}},{"expression":{"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3639,"name":"core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"8189:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3640,"name":"_core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"8196:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"src":"8189:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"id":3642,"nodeType":"ExpressionStatement","src":"8189:12:12"}]},"functionSelector":"c4d66de8","id":3644,"implemented":true,"kind":"function","modifiers":[{"id":3624,"kind":"modifierInvocation","modifierName":{"id":3623,"name":"initializer","nameLocations":["8103:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":459,"src":"8103:11:12"},"nodeType":"ModifierInvocation","src":"8103:11:12"}],"name":"initialize","nameLocation":"8070:10:12","nodeType":"FunctionDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"_core","nameLocation":"8087:5:12","nodeType":"VariableDeclaration","scope":3644,"src":"8081:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"},"typeName":{"id":3620,"nodeType":"UserDefinedTypeName","pathNode":{"id":3619,"name":"ICore","nameLocations":["8081:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":4416,"src":"8081:5:12"},"referencedDeclaration":4416,"src":"8081:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"visibility":"internal"}],"src":"8080:13:12"},"returnParameters":{"id":3625,"nodeType":"ParameterList","parameters":[],"src":"8115:0:12"},"scope":4396,"src":"8061:147:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[687],"body":{"id":3654,"nodeType":"Block","src":"8336:2:12","statements":[]},"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"8214:31:12","text":"@inheritdoc UUPSUpgradeable"},"id":3655,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3651,"name":"core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"8330:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}}],"id":3652,"kind":"modifierInvocation","modifierName":{"id":3650,"name":"onlyGovernorUpgrader","nameLocations":["8309:20:12"],"nodeType":"IdentifierPath","referencedDeclaration":4526,"src":"8309:20:12"},"nodeType":"ModifierInvocation","src":"8309:26:12"}],"name":"_authorizeUpgrade","nameLocation":"8259:17:12","nodeType":"FunctionDefinition","overrides":{"id":3649,"nodeType":"OverrideSpecifier","overrides":[],"src":"8300:8:12"},"parameters":{"id":3648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3655,"src":"8277:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"8277:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8276:9:12"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[],"src":"8336:0:12"},"scope":4396,"src":"8250:88:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3813,"nodeType":"Block","src":"9173:1150:12","statements":[{"assignments":[3673],"declarations":[{"constant":false,"id":3673,"mutability":"mutable","name":"usersLength","nameLocation":"9191:11:12","nodeType":"VariableDeclaration","scope":3813,"src":"9183:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"9183:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3676,"initialValue":{"expression":{"id":3674,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"9205:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9211:6:12","memberName":"length","nodeType":"MemberAccess","src":"9205:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9183:34:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3677,"name":"usersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"9244:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9259:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9244:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3680,"name":"usersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"9276:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3681,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"9291:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9298:6:12","memberName":"length","nodeType":"MemberAccess","src":"9291:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9276:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9244:60:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"usersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"9320:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3686,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"9335:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9343:6:12","memberName":"length","nodeType":"MemberAccess","src":"9335:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9320:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9244:105:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"usersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"9365:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3691,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"9380:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[] calldata[] calldata"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9387:6:12","memberName":"length","nodeType":"MemberAccess","src":"9380:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9365:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9244:149:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3698,"nodeType":"IfStatement","src":"9227:200:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3695,"name":"InvalidLengths","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"9411:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9411:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3697,"nodeType":"RevertStatement","src":"9404:23:12"}},{"body":{"id":3811,"nodeType":"Block","src":"9473:844:12","statements":[{"assignments":[3706],"declarations":[{"constant":false,"id":3706,"mutability":"mutable","name":"user","nameLocation":"9495:4:12","nodeType":"VariableDeclaration","scope":3811,"src":"9487:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3705,"name":"address","nodeType":"ElementaryTypeName","src":"9487:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3710,"initialValue":{"baseExpression":{"id":3707,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"9502:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3709,"indexExpression":{"id":3708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"9508:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9502:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9487:23:12"},{"assignments":[3712],"declarations":[{"constant":false,"id":3712,"mutability":"mutable","name":"token","nameLocation":"9532:5:12","nodeType":"VariableDeclaration","scope":3811,"src":"9524:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3711,"name":"address","nodeType":"ElementaryTypeName","src":"9524:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3716,"initialValue":{"baseExpression":{"id":3713,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"9540:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3715,"indexExpression":{"id":3714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"9547:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9540:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9524:25:12"},{"assignments":[3718],"declarations":[{"constant":false,"id":3718,"mutability":"mutable","name":"amount","nameLocation":"9571:6:12","nodeType":"VariableDeclaration","scope":3811,"src":"9563:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"9563:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3722,"initialValue":{"baseExpression":{"id":3719,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"9580:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3721,"indexExpression":{"id":3720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"9588:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9580:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9563:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9668:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9672:6:12","memberName":"sender","nodeType":"MemberAccess","src":"9668:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3725,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"9682:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9668:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":3727,"name":"operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"9690:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3729,"indexExpression":{"id":3728,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"9700:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9690:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3732,"indexExpression":{"expression":{"id":3730,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9706:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9710:6:12","memberName":"sender","nodeType":"MemberAccess","src":"9706:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9690:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9721:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9690:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9668:54:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3739,"nodeType":"IfStatement","src":"9664:83:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3736,"name":"NotWhitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"9731:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9731:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3738,"nodeType":"RevertStatement","src":"9724:23:12"}},{"assignments":[3741],"declarations":[{"constant":false,"id":3741,"mutability":"mutable","name":"leaf","nameLocation":"9801:4:12","nodeType":"VariableDeclaration","scope":3811,"src":"9793:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9793:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3750,"initialValue":{"arguments":[{"arguments":[{"id":3745,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"9829:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3746,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"9835:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3747,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"9842:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3743,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9818:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9822:6:12","memberName":"encode","nodeType":"MemberAccess","src":"9818:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9818:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3742,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9808:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9808:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9793:57:12"},{"condition":{"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9868:30:12","subExpression":{"arguments":[{"id":3752,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"9882:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3753,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"9888:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[] calldata[] calldata"}},"id":3755,"indexExpression":{"id":3754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"9895:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9888:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":3751,"name":"_verifyProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"9869:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes32[] memory) view returns (bool)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9869:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3761,"nodeType":"IfStatement","src":"9864:57:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3758,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"9907:12:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9907:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3760,"nodeType":"RevertStatement","src":"9900:21:12"}},{"assignments":[3763],"declarations":[{"constant":false,"id":3763,"mutability":"mutable","name":"toSend","nameLocation":"9988:6:12","nodeType":"VariableDeclaration","scope":3811,"src":"9980:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"9980:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3772,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"9997:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"baseExpression":{"id":3765,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"10006:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Claim_$3419_storage_$_$","typeString":"mapping(address => mapping(address => struct Claim storage ref))"}},"id":3767,"indexExpression":{"id":3766,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"10014:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:13:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Claim_$3419_storage_$","typeString":"mapping(address => struct Claim storage ref)"}},"id":3769,"indexExpression":{"id":3768,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"10020:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$3419_storage","typeString":"struct Claim storage ref"}},"id":3770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10027:6:12","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3414,"src":"10006:27:12","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9997:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9980:53:12"},{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3773,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"10047:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Claim_$3419_storage_$_$","typeString":"mapping(address => mapping(address => struct Claim storage ref))"}},"id":3776,"indexExpression":{"id":3774,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"10055:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10047:13:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Claim_$3419_storage_$","typeString":"mapping(address => struct Claim storage ref)"}},"id":3777,"indexExpression":{"id":3775,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"10061:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10047:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$3419_storage","typeString":"struct Claim storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3781,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"10095:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3779,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"10076:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$3398_$","typeString":"type(library SafeCast)"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10085:9:12","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":2010,"src":"10076:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10076:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"arguments":[{"expression":{"id":3785,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10111:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10117:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"10111:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10104:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3783,"name":"uint48","nodeType":"ElementaryTypeName","src":"10104:6:12","typeDescriptions":{}}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10104:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3788,"name":"getMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"10129:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10129:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3778,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10070:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Claim_$3419_storage_ptr_$","typeString":"type(struct Claim storage pointer)"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$3419_memory_ptr","typeString":"struct Claim memory"}},"src":"10047:98:12","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$3419_storage","typeString":"struct Claim storage ref"}},"id":3792,"nodeType":"ExpressionStatement","src":"10047:98:12"},{"expression":{"arguments":[{"id":3797,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"10187:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3798,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"10193:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3794,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"10167:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3793,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"10160:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1115_$","typeString":"type(contract IERC20)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10160:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10174:12:12","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"10160:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1115_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10160:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3800,"nodeType":"ExpressionStatement","src":"10160:40:12"},{"eventCall":{"arguments":[{"id":3802,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"10227:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3803,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"10233:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3804,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"10240:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3801,"name":"Claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"10219:7:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10219:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3806,"nodeType":"EmitStatement","src":"10214:33:12"},{"id":3810,"nodeType":"UncheckedBlock","src":"10261:46:12","statements":[{"expression":{"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"10289:3:12","subExpression":{"id":3807,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"10291:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3809,"nodeType":"ExpressionStatement","src":"10289:3:12"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"9454:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3703,"name":"usersLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"9458:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9454:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3812,"initializationExpression":{"assignments":[3700],"declarations":[{"constant":false,"id":3700,"mutability":"mutable","name":"i","nameLocation":"9451:1:12","nodeType":"VariableDeclaration","scope":3812,"src":"9443:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"9443:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3701,"nodeType":"VariableDeclarationStatement","src":"9443:9:12"},"nodeType":"ForStatement","src":"9438:879:12"}]},"documentation":{"id":3656,"nodeType":"StructuredDocumentation","src":"8430:566:12","text":"@notice Claims rewards for a given set of users\n @dev Anyone may call this function for anyone else, funds go to destination regardless, it's just a question of\n who provides the proof and pays the gas: `msg.sender` is used only for addresses that require a trusted operator\n @param users Recipient of tokens\n @param tokens ERC20 claimed\n @param amounts Amount of tokens that will be sent to the corresponding users\n @param proofs Array of hashes bridging from a leaf `(hash of user | token | amount)` to the Merkle root"},"functionSelector":"71ee95c0","id":3814,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"9010:5:12","nodeType":"FunctionDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"users","nameLocation":"9044:5:12","nodeType":"VariableDeclaration","scope":3814,"src":"9025:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3657,"name":"address","nodeType":"ElementaryTypeName","src":"9025:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3658,"nodeType":"ArrayTypeName","src":"9025:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3662,"mutability":"mutable","name":"tokens","nameLocation":"9078:6:12","nodeType":"VariableDeclaration","scope":3814,"src":"9059:25:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3660,"name":"address","nodeType":"ElementaryTypeName","src":"9059:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3661,"nodeType":"ArrayTypeName","src":"9059:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"amounts","nameLocation":"9113:7:12","nodeType":"VariableDeclaration","scope":3814,"src":"9094:26:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"9094:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ArrayTypeName","src":"9094:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3669,"mutability":"mutable","name":"proofs","nameLocation":"9151:6:12","nodeType":"VariableDeclaration","scope":3814,"src":"9130:27:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[][]"},"typeName":{"baseType":{"baseType":{"id":3666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9130:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3667,"nodeType":"ArrayTypeName","src":"9130:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"id":3668,"nodeType":"ArrayTypeName","src":"9130:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_storage_$dyn_storage_ptr","typeString":"bytes32[][]"}},"visibility":"internal"}],"src":"9015:148:12"},"returnParameters":{"id":3671,"nodeType":"ParameterList","parameters":[],"src":"9173:0:12"},"scope":4396,"src":"9001:1322:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3838,"nodeType":"Block","src":"10463:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3820,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10477:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10483:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"10477:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3822,"name":"endOfDisputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"10496:18:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"10477:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3824,"name":"disputer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"10518:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10530:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3825,"name":"address","nodeType":"ElementaryTypeName","src":"10530:7:12","typeDescriptions":{}}},"id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10530:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10518:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10477:63:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"id":3834,"name":"lastTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"10586:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree storage ref"}},"id":3835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10595:10:12","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"10586:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3819,"id":3836,"nodeType":"Return","src":"10579:26:12"},"id":3837,"nodeType":"IfStatement","src":"10473:132:12","trueBody":{"expression":{"expression":{"id":3831,"name":"tree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"10549:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree storage ref"}},"id":3832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10554:10:12","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"10549:15:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3819,"id":3833,"nodeType":"Return","src":"10542:22:12"}}]},"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"10329:74:12","text":"@notice Returns the MerkleRoot that is currently live for the contract"},"functionSelector":"49590657","id":3839,"implemented":true,"kind":"function","modifiers":[],"name":"getMerkleRoot","nameLocation":"10417:13:12","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[],"src":"10430:2:12"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3839,"src":"10454:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10454:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10453:9:12"},"scope":4396,"src":"10408:204:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3868,"nodeType":"Block","src":"10843:173:12","statements":[{"assignments":[3848],"declarations":[{"constant":false,"id":3848,"mutability":"mutable","name":"trustedStatus","nameLocation":"10861:13:12","nodeType":"VariableDeclaration","scope":3868,"src":"10853:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3854,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10877:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3850,"name":"canUpdateMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"10881:19:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3852,"indexExpression":{"id":3851,"name":"eoa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"10901:3:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10881:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10877:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10853:52:12"},{"expression":{"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3855,"name":"canUpdateMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"10915:19:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3857,"indexExpression":{"id":3856,"name":"eoa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"10935:3:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10915:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3858,"name":"trustedStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"10942:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10915:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3860,"nodeType":"ExpressionStatement","src":"10915:40:12"},{"eventCall":{"arguments":[{"id":3862,"name":"eoa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"10985:3:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"trustedStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"10990:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11007:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3861,"name":"TrustedToggled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"10970:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10970:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3867,"nodeType":"EmitStatement","src":"10965:44:12"}]},"documentation":{"id":3840,"nodeType":"StructuredDocumentation","src":"10704:76:12","text":"@notice Adds or removes EOAs which are trusted to update the Merkle root"},"functionSelector":"7ee84349","id":3869,"implemented":true,"kind":"function","modifiers":[{"id":3845,"kind":"modifierInvocation","modifierName":{"id":3844,"name":"onlyGovernor","nameLocations":["10830:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3583,"src":"10830:12:12"},"nodeType":"ModifierInvocation","src":"10830:12:12"}],"name":"toggleTrusted","nameLocation":"10794:13:12","nodeType":"FunctionDefinition","parameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"eoa","nameLocation":"10816:3:12","nodeType":"VariableDeclaration","scope":3869,"src":"10808:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3841,"name":"address","nodeType":"ElementaryTypeName","src":"10808:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10807:13:12"},"returnParameters":{"id":3846,"nodeType":"ParameterList","parameters":[],"src":"10843:0:12"},"scope":4396,"src":"10785:231:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3942,"nodeType":"Block","src":"11114:707:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3876,"name":"disputer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"11141:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11161:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11153:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3877,"name":"address","nodeType":"ElementaryTypeName","src":"11153:7:12","typeDescriptions":{}}},"id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11153:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11141:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3882,"name":"canUpdateMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"11368:19:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3885,"indexExpression":{"expression":{"id":3883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11388:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11392:6:12","memberName":"sender","nodeType":"MemberAccess","src":"11388:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11368:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11403:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11368:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3888,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11408:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11414:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"11408:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3890,"name":"endOfDisputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"11426:18:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"11408:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11368:76:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11367:78:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11465:28:12","subExpression":{"arguments":[{"expression":{"id":3896,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11482:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11486:6:12","memberName":"sender","nodeType":"MemberAccess","src":"11482:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3894,"name":"core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"11466:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11471:10:12","memberName":"isGovernor","nodeType":"MemberAccess","referencedDeclaration":4407,"src":"11466:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11367:126:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11366:128:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11141:353:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3906,"nodeType":"IfStatement","src":"11124:400:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3903,"name":"NotTrusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"11512:10:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11512:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3905,"nodeType":"RevertStatement","src":"11505:19:12"}},{"assignments":[3909],"declarations":[{"constant":false,"id":3909,"mutability":"mutable","name":"_lastTree","nameLocation":"11552:9:12","nodeType":"VariableDeclaration","scope":3942,"src":"11534:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_memory_ptr","typeString":"struct MerkleTree"},"typeName":{"id":3908,"nodeType":"UserDefinedTypeName","pathNode":{"id":3907,"name":"MerkleTree","nameLocations":["11534:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3412,"src":"11534:10:12"},"referencedDeclaration":3412,"src":"11534:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage_ptr","typeString":"struct MerkleTree"}},"visibility":"internal"}],"id":3911,"initialValue":{"id":3910,"name":"tree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"11564:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11534:34:12"},{"expression":{"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3912,"name":"tree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"11578:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3913,"name":"_tree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"11585:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_calldata_ptr","typeString":"struct MerkleTree calldata"}},"src":"11578:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree storage ref"}},"id":3915,"nodeType":"ExpressionStatement","src":"11578:12:12"},{"expression":{"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3916,"name":"lastTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"11600:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3917,"name":"_lastTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"11611:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_memory_ptr","typeString":"struct MerkleTree memory"}},"src":"11600:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree storage ref"}},"id":3919,"nodeType":"ExpressionStatement","src":"11600:20:12"},{"assignments":[3921],"declarations":[{"constant":false,"id":3921,"mutability":"mutable","name":"_endOfPeriod","nameLocation":"11638:12:12","nodeType":"VariableDeclaration","scope":3942,"src":"11631:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3920,"name":"uint48","nodeType":"ElementaryTypeName","src":"11631:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3929,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":3925,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11680:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11686:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"11680:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11673:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3923,"name":"uint48","nodeType":"ElementaryTypeName","src":"11673:6:12","typeDescriptions":{}}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11673:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3922,"name":"_endOfDisputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"11653:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint48_$returns$_t_uint48_$","typeString":"function (uint48) view returns (uint48)"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11653:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"11631:66:12"},{"expression":{"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3930,"name":"endOfDisputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"11707:18:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3931,"name":"_endOfPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"11728:12:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"11707:33:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3933,"nodeType":"ExpressionStatement","src":"11707:33:12"},{"eventCall":{"arguments":[{"expression":{"id":3935,"name":"_tree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"11767:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_calldata_ptr","typeString":"struct MerkleTree calldata"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11773:10:12","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"11767:16:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3937,"name":"_tree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"11785:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_calldata_ptr","typeString":"struct MerkleTree calldata"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11791:8:12","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":3411,"src":"11785:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3939,"name":"_endOfPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"11801:12:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3934,"name":"TreeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"11755:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint48_$returns$__$","typeString":"function (bytes32,bytes32,uint48)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11755:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3941,"nodeType":"EmitStatement","src":"11750:64:12"}]},"documentation":{"id":3870,"nodeType":"StructuredDocumentation","src":"11022:31:12","text":"@notice Updates Merkle Tree"},"functionSelector":"d9c98087","id":3943,"implemented":true,"kind":"function","modifiers":[],"name":"updateTree","nameLocation":"11067:10:12","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"_tree","nameLocation":"11098:5:12","nodeType":"VariableDeclaration","scope":3943,"src":"11078:25:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_calldata_ptr","typeString":"struct MerkleTree"},"typeName":{"id":3872,"nodeType":"UserDefinedTypeName","pathNode":{"id":3871,"name":"MerkleTree","nameLocations":["11078:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3412,"src":"11078:10:12"},"referencedDeclaration":3412,"src":"11078:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage_ptr","typeString":"struct MerkleTree"}},"visibility":"internal"}],"src":"11077:27:12"},"returnParameters":{"id":3875,"nodeType":"ParameterList","parameters":[],"src":"11114:0:12"},"scope":4396,"src":"11058:763:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3989,"nodeType":"Block","src":"12155:298:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"disputer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"12169:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12181:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3950,"name":"address","nodeType":"ElementaryTypeName","src":"12181:7:12","typeDescriptions":{}}},"id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12181:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12169:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3958,"nodeType":"IfStatement","src":"12165:54:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3955,"name":"UnresolvedDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"12200:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12200:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3957,"nodeType":"RevertStatement","src":"12193:26:12"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3959,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12233:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12239:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"12233:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3961,"name":"endOfDisputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"12252:18:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12233:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3966,"nodeType":"IfStatement","src":"12229:66:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3963,"name":"InvalidDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"12279:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12279:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3965,"nodeType":"RevertStatement","src":"12272:23:12"}},{"expression":{"arguments":[{"expression":{"id":3971,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12343:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12347:6:12","memberName":"sender","nodeType":"MemberAccess","src":"12343:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3975,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12363:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Distributor_$4396","typeString":"contract Distributor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Distributor_$4396","typeString":"contract Distributor"}],"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12355:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3973,"name":"address","nodeType":"ElementaryTypeName","src":"12355:7:12","typeDescriptions":{}}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12355:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3977,"name":"disputeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"12370:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3968,"name":"disputeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"12312:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}],"id":3967,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"12305:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1115_$","typeString":"type(contract IERC20)"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12305:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12326:16:12","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1211,"src":"12305:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1115_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12305:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3979,"nodeType":"ExpressionStatement","src":"12305:79:12"},{"expression":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3980,"name":"disputer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"12394:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12405:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12409:6:12","memberName":"sender","nodeType":"MemberAccess","src":"12405:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12394:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3984,"nodeType":"ExpressionStatement","src":"12394:21:12"},{"eventCall":{"arguments":[{"id":3986,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"12439:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3985,"name":"Disputed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"12430:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12430:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3988,"nodeType":"EmitStatement","src":"12425:21:12"}]},"documentation":{"id":3944,"nodeType":"StructuredDocumentation","src":"11827:271:12","text":"@notice Freezes the Merkle tree update until the dispute is resolved\n @dev Requires a deposit of `disputeToken` that'll be slashed if the dispute is not accepted\n @dev It is only possible to create a dispute within `disputePeriod` after each tree update"},"functionSelector":"2a25dd41","id":3990,"implemented":true,"kind":"function","modifiers":[],"name":"disputeTree","nameLocation":"12112:11:12","nodeType":"FunctionDefinition","parameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"reason","nameLocation":"12138:6:12","nodeType":"VariableDeclaration","scope":3990,"src":"12124:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3945,"name":"string","nodeType":"ElementaryTypeName","src":"12124:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12123:22:12"},"returnParameters":{"id":3948,"nodeType":"ParameterList","parameters":[],"src":"12155:0:12"},"scope":4396,"src":"12103:350:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4053,"nodeType":"Block","src":"12620:527:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3998,"name":"disputer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"12634:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12654:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12646:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3999,"name":"address","nodeType":"ElementaryTypeName","src":"12646:7:12","typeDescriptions":{}}},"id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12646:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12634:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4007,"nodeType":"IfStatement","src":"12630:46:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4004,"name":"NoDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"12665:9:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12665:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4006,"nodeType":"RevertStatement","src":"12658:18:12"}},{"condition":{"id":4008,"name":"valid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"12690:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4040,"nodeType":"Block","src":"12909:164:12","statements":[{"expression":{"arguments":[{"expression":{"id":4025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12957:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12961:6:12","memberName":"sender","nodeType":"MemberAccess","src":"12957:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4027,"name":"disputeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"12969:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4022,"name":"disputeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"12930:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}],"id":4021,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"12923:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1115_$","typeString":"type(contract IERC20)"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12923:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12944:12:12","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"12923:33:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1115_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12923:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4029,"nodeType":"ExpressionStatement","src":"12923:60:12"},{"expression":{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4030,"name":"endOfDisputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"12997:18:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":4034,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13045:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13051:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"13045:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13038:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4032,"name":"uint48","nodeType":"ElementaryTypeName","src":"13038:6:12","typeDescriptions":{}}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13038:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":4031,"name":"_endOfDisputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"13018:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint48_$returns$_t_uint48_$","typeString":"function (uint48) view returns (uint48)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13018:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12997:65:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":4039,"nodeType":"ExpressionStatement","src":"12997:65:12"}]},"id":4041,"nodeType":"IfStatement","src":"12686:387:12","trueBody":{"id":4020,"nodeType":"Block","src":"12697:206:12","statements":[{"expression":{"arguments":[{"id":4013,"name":"disputer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"12745:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4014,"name":"disputeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"12755:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4010,"name":"disputeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"12718:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}],"id":4009,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"12711:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1115_$","typeString":"type(contract IERC20)"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12711:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12732:12:12","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"12711:33:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1115_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12711:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4016,"nodeType":"ExpressionStatement","src":"12711:58:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4017,"name":"_revokeTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"12879:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12879:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4019,"nodeType":"ExpressionStatement","src":"12879:13:12"}]}},{"expression":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4042,"name":"disputer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"13082:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13101:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13093:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4043,"name":"address","nodeType":"ElementaryTypeName","src":"13093:7:12","typeDescriptions":{}}},"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13093:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13082:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4048,"nodeType":"ExpressionStatement","src":"13082:21:12"},{"eventCall":{"arguments":[{"id":4050,"name":"valid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"13134:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4049,"name":"DisputeResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"13118:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13118:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4052,"nodeType":"EmitStatement","src":"13113:27:12"}]},"documentation":{"id":3991,"nodeType":"StructuredDocumentation","src":"12459:98:12","text":"@notice Resolve the ongoing dispute, if any\n @param valid Whether the dispute was valid"},"functionSelector":"89e1e82a","id":4054,"implemented":true,"kind":"function","modifiers":[{"id":3996,"kind":"modifierInvocation","modifierName":{"id":3995,"name":"onlyGovernor","nameLocations":["12607:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3583,"src":"12607:12:12"},"nodeType":"ModifierInvocation","src":"12607:12:12"}],"name":"resolveDispute","nameLocation":"12571:14:12","nodeType":"FunctionDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3993,"mutability":"mutable","name":"valid","nameLocation":"12591:5:12","nodeType":"VariableDeclaration","scope":4054,"src":"12586:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3992,"name":"bool","nodeType":"ElementaryTypeName","src":"12586:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12585:12:12"},"returnParameters":{"id":3997,"nodeType":"ParameterList","parameters":[],"src":"12620:0:12"},"scope":4396,"src":"12562:585:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4073,"nodeType":"Block","src":"13314:94:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"disputer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"13328:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13348:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13340:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4061,"name":"address","nodeType":"ElementaryTypeName","src":"13340:7:12","typeDescriptions":{}}},"id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13340:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13328:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4069,"nodeType":"IfStatement","src":"13324:54:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4066,"name":"UnresolvedDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"13359:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13359:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"RevertStatement","src":"13352:26:12"}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4070,"name":"_revokeTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"13388:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13388:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4072,"nodeType":"ExpressionStatement","src":"13388:13:12"}]},"documentation":{"id":4055,"nodeType":"StructuredDocumentation","src":"13153:112:12","text":"@notice Allows the governor of this contract to fallback to the last version of the tree\n immediately"},"functionSelector":"95788835","id":4074,"implemented":true,"kind":"function","modifiers":[{"id":4058,"kind":"modifierInvocation","modifierName":{"id":4057,"name":"onlyGovernor","nameLocations":["13301:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3583,"src":"13301:12:12"},"nodeType":"ModifierInvocation","src":"13301:12:12"}],"name":"revokeTree","nameLocation":"13279:10:12","nodeType":"FunctionDefinition","parameters":{"id":4056,"nodeType":"ParameterList","parameters":[],"src":"13289:2:12"},"returnParameters":{"id":4059,"nodeType":"ParameterList","parameters":[],"src":"13314:0:12"},"scope":4396,"src":"13270:138:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4104,"nodeType":"Block","src":"13584:172:12","statements":[{"assignments":[4084],"declarations":[{"constant":false,"id":4084,"mutability":"mutable","name":"oldValue","nameLocation":"13602:8:12","nodeType":"VariableDeclaration","scope":4104,"src":"13594:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"13594:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4088,"initialValue":{"baseExpression":{"id":4085,"name":"onlyOperatorCanClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"13613:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4087,"indexExpression":{"id":4086,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"13634:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13613:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13594:45:12"},{"expression":{"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4089,"name":"onlyOperatorCanClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"13649:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4091,"indexExpression":{"id":4090,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"13670:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13649:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13678:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4093,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"13682:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13678:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13649:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4096,"nodeType":"ExpressionStatement","src":"13649:41:12"},{"eventCall":{"arguments":[{"id":4098,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"13729:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"13735:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13747:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13735:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4097,"name":"OperatorClaimingToggled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"13705:23:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13705:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4103,"nodeType":"EmitStatement","src":"13700:49:12"}]},"documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"13414:82:12","text":"@notice Toggles permissioned claiming for a given user\n @dev deprecated"},"functionSelector":"28827838","id":4105,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4080,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"13578:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4081,"kind":"modifierInvocation","modifierName":{"id":4079,"name":"onlyTrustedOrUser","nameLocations":["13560:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":3612,"src":"13560:17:12"},"nodeType":"ModifierInvocation","src":"13560:23:12"}],"name":"toggleOnlyOperatorCanClaim","nameLocation":"13510:26:12","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"user","nameLocation":"13545:4:12","nodeType":"VariableDeclaration","scope":4105,"src":"13537:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4076,"name":"address","nodeType":"ElementaryTypeName","src":"13537:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13536:14:12"},"returnParameters":{"id":4082,"nodeType":"ParameterList","parameters":[],"src":"13584:0:12"},"scope":4396,"src":"13501:255:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4142,"nodeType":"Block","src":"13926:172:12","statements":[{"assignments":[4117],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"oldValue","nameLocation":"13944:8:12","nodeType":"VariableDeclaration","scope":4142,"src":"13936:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"13936:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4123,"initialValue":{"baseExpression":{"baseExpression":{"id":4118,"name":"operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"13955:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4120,"indexExpression":{"id":4119,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"13965:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13955:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4122,"indexExpression":{"id":4121,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"13971:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13955:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13936:44:12"},{"expression":{"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4124,"name":"operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"13990:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4127,"indexExpression":{"id":4125,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"14000:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13990:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4128,"indexExpression":{"id":4126,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"14006:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13990:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14018:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4130,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"14022:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14018:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13990:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4133,"nodeType":"ExpressionStatement","src":"13990:40:12"},{"eventCall":{"arguments":[{"id":4135,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"14061:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4136,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"14067:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"14077:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14089:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14077:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4134,"name":"OperatorToggled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"14045:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14045:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4141,"nodeType":"EmitStatement","src":"14040:51:12"}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"13762:70:12","text":"@notice Toggles whitelisting for a given user and a given operator"},"functionSelector":"bdac7ca3","id":4143,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4113,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"13920:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4114,"kind":"modifierInvocation","modifierName":{"id":4112,"name":"onlyTrustedOrUser","nameLocations":["13902:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":3612,"src":"13902:17:12"},"nodeType":"ModifierInvocation","src":"13902:23:12"}],"name":"toggleOperator","nameLocation":"13846:14:12","nodeType":"FunctionDefinition","parameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"user","nameLocation":"13869:4:12","nodeType":"VariableDeclaration","scope":4143,"src":"13861:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4107,"name":"address","nodeType":"ElementaryTypeName","src":"13861:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4110,"mutability":"mutable","name":"operator","nameLocation":"13883:8:12","nodeType":"VariableDeclaration","scope":4143,"src":"13875:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4109,"name":"address","nodeType":"ElementaryTypeName","src":"13875:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13860:32:12"},"returnParameters":{"id":4115,"nodeType":"ParameterList","parameters":[],"src":"13926:0:12"},"scope":4396,"src":"13837:261:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4169,"nodeType":"Block","src":"14248:130:12","statements":[{"expression":{"arguments":[{"id":4159,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"14292:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4160,"name":"amountToRecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"14296:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4156,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"14265:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4155,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14258:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1115_$","typeString":"type(contract IERC20)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14258:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14279:12:12","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"14258:33:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1115_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1115_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14258:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4162,"nodeType":"ExpressionStatement","src":"14258:54:12"},{"eventCall":{"arguments":[{"id":4164,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"14337:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4165,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"14351:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4166,"name":"amountToRecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"14355:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4163,"name":"Recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"14327:9:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14327:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4168,"nodeType":"EmitStatement","src":"14322:49:12"}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"14104:36:12","text":"@notice Recovers any ERC20 token"},"functionSelector":"1171bda9","id":4170,"implemented":true,"kind":"function","modifiers":[{"id":4153,"kind":"modifierInvocation","modifierName":{"id":4152,"name":"onlyGovernor","nameLocations":["14235:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3583,"src":"14235:12:12"},"nodeType":"ModifierInvocation","src":"14235:12:12"}],"name":"recoverERC20","nameLocation":"14154:12:12","nodeType":"FunctionDefinition","parameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"tokenAddress","nameLocation":"14175:12:12","nodeType":"VariableDeclaration","scope":4170,"src":"14167:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4145,"name":"address","nodeType":"ElementaryTypeName","src":"14167:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"to","nameLocation":"14197:2:12","nodeType":"VariableDeclaration","scope":4170,"src":"14189:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4147,"name":"address","nodeType":"ElementaryTypeName","src":"14189:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"amountToRecover","nameLocation":"14209:15:12","nodeType":"VariableDeclaration","scope":4170,"src":"14201:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"14201:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14166:59:12"},"returnParameters":{"id":4154,"nodeType":"ParameterList","parameters":[],"src":"14248:0:12"},"scope":4396,"src":"14145:233:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4189,"nodeType":"Block","src":"14539:106:12","statements":[{"expression":{"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4178,"name":"disputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"14549:13:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4181,"name":"_disputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"14572:14:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14565:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4179,"name":"uint48","nodeType":"ElementaryTypeName","src":"14565:6:12","typeDescriptions":{}}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14565:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14549:38:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":4184,"nodeType":"ExpressionStatement","src":"14549:38:12"},{"eventCall":{"arguments":[{"id":4186,"name":"_disputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"14623:14:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":4185,"name":"DisputePeriodUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"14602:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint48_$returns$__$","typeString":"function (uint48)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14602:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4188,"nodeType":"EmitStatement","src":"14597:41:12"}]},"documentation":{"id":4171,"nodeType":"StructuredDocumentation","src":"14384:79:12","text":"@notice Sets the dispute period after which a tree update becomes effective"},"functionSelector":"4641fdef","id":4190,"implemented":true,"kind":"function","modifiers":[{"id":4176,"kind":"modifierInvocation","modifierName":{"id":4175,"name":"onlyGovernor","nameLocations":["14526:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3583,"src":"14526:12:12"},"nodeType":"ModifierInvocation","src":"14526:12:12"}],"name":"setDisputePeriod","nameLocation":"14477:16:12","nodeType":"FunctionDefinition","parameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"_disputePeriod","nameLocation":"14501:14:12","nodeType":"VariableDeclaration","scope":4190,"src":"14494:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4172,"name":"uint48","nodeType":"ElementaryTypeName","src":"14494:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14493:23:12"},"returnParameters":{"id":4177,"nodeType":"ParameterList","parameters":[],"src":"14539:0:12"},"scope":4396,"src":"14468:177:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4220,"nodeType":"Block","src":"14785:167:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4199,"name":"disputer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"14799:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14819:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14811:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4200,"name":"address","nodeType":"ElementaryTypeName","src":"14811:7:12","typeDescriptions":{}}},"id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14811:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14799:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4208,"nodeType":"IfStatement","src":"14795:54:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4205,"name":"UnresolvedDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"14830:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14830:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4207,"nodeType":"RevertStatement","src":"14823:26:12"}},{"expression":{"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4209,"name":"disputeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"14859:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4210,"name":"_disputeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"14874:13:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"src":"14859:28:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"id":4212,"nodeType":"ExpressionStatement","src":"14859:28:12"},{"eventCall":{"arguments":[{"arguments":[{"id":4216,"name":"_disputeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"14930:13:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}],"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14922:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4214,"name":"address","nodeType":"ElementaryTypeName","src":"14922:7:12","typeDescriptions":{}}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14922:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4213,"name":"DisputeTokenUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"14902:19:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14902:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4219,"nodeType":"EmitStatement","src":"14897:48:12"}]},"documentation":{"id":4191,"nodeType":"StructuredDocumentation","src":"14651:60:12","text":"@notice Sets the token used as a caution during disputes"},"functionSelector":"623b9e9d","id":4221,"implemented":true,"kind":"function","modifiers":[{"id":4197,"kind":"modifierInvocation","modifierName":{"id":4196,"name":"onlyGovernor","nameLocations":["14772:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3583,"src":"14772:12:12"},"nodeType":"ModifierInvocation","src":"14772:12:12"}],"name":"setDisputeToken","nameLocation":"14725:15:12","nodeType":"FunctionDefinition","parameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"_disputeToken","nameLocation":"14748:13:12","nodeType":"VariableDeclaration","scope":4221,"src":"14741:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"},"typeName":{"id":4193,"nodeType":"UserDefinedTypeName","pathNode":{"id":4192,"name":"IERC20","nameLocations":["14741:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"14741:6:12"},"referencedDeclaration":1115,"src":"14741:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1115","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"14740:22:12"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[],"src":"14785:0:12"},"scope":4396,"src":"14716:236:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4247,"nodeType":"Block","src":"15114:162:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"disputer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"15128:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15148:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15140:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4230,"name":"address","nodeType":"ElementaryTypeName","src":"15140:7:12","typeDescriptions":{}}},"id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15140:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15128:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"15124:54:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4235,"name":"UnresolvedDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"15159:17:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15159:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4237,"nodeType":"RevertStatement","src":"15152:26:12"}},{"expression":{"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4239,"name":"disputeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"15188:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4240,"name":"_disputeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"15204:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15188:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4242,"nodeType":"ExpressionStatement","src":"15188:30:12"},{"eventCall":{"arguments":[{"id":4244,"name":"_disputeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"15254:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4243,"name":"DisputeAmountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"15233:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15233:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4246,"nodeType":"EmitStatement","src":"15228:41:12"}]},"documentation":{"id":4222,"nodeType":"StructuredDocumentation","src":"14958:79:12","text":"@notice Sets the amount of `disputeToken` used as a caution during disputes"},"functionSelector":"0d10fca3","id":4248,"implemented":true,"kind":"function","modifiers":[{"id":4227,"kind":"modifierInvocation","modifierName":{"id":4226,"name":"onlyGovernor","nameLocations":["15101:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":3583,"src":"15101:12:12"},"nodeType":"ModifierInvocation","src":"15101:12:12"}],"name":"setDisputeAmount","nameLocation":"15051:16:12","nodeType":"FunctionDefinition","parameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"_disputeAmount","nameLocation":"15076:14:12","nodeType":"VariableDeclaration","scope":4248,"src":"15068:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"15068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15067:24:12"},"returnParameters":{"id":4228,"nodeType":"ParameterList","parameters":[],"src":"15114:0:12"},"scope":4396,"src":"15042:234:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4286,"nodeType":"Block","src":"15457:313:12","statements":[{"assignments":[4254],"declarations":[{"constant":false,"id":4254,"mutability":"mutable","name":"_tree","nameLocation":"15485:5:12","nodeType":"VariableDeclaration","scope":4286,"src":"15467:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_memory_ptr","typeString":"struct MerkleTree"},"typeName":{"id":4253,"nodeType":"UserDefinedTypeName","pathNode":{"id":4252,"name":"MerkleTree","nameLocations":["15467:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":3412,"src":"15467:10:12"},"referencedDeclaration":3412,"src":"15467:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage_ptr","typeString":"struct MerkleTree"}},"visibility":"internal"}],"id":4256,"initialValue":{"id":4255,"name":"lastTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"15493:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15467:34:12"},{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"endOfDisputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"15511:18:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15511:22:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":4260,"nodeType":"ExpressionStatement","src":"15511:22:12"},{"expression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4261,"name":"tree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"15543:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4262,"name":"_tree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"15550:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_memory_ptr","typeString":"struct MerkleTree memory"}},"src":"15543:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_storage","typeString":"struct MerkleTree storage ref"}},"id":4264,"nodeType":"ExpressionStatement","src":"15543:12:12"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4265,"name":"Revoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"15570:7:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15570:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4267,"nodeType":"EmitStatement","src":"15565:14:12"},{"eventCall":{"arguments":[{"expression":{"id":4269,"name":"_tree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"15619:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_memory_ptr","typeString":"struct MerkleTree memory"}},"id":4270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15625:10:12","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"15619:16:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4271,"name":"_tree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"15649:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_MerkleTree_$3412_memory_ptr","typeString":"struct MerkleTree memory"}},"id":4272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15655:8:12","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":3411,"src":"15649:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4275,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15685:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15691:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"15685:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15678:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4273,"name":"uint48","nodeType":"ElementaryTypeName","src":"15678:6:12","typeDescriptions":{}}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15678:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4278,"name":"_EPOCH_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"15704:15:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15678:41:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":4280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15677:43:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":4281,"name":"_EPOCH_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"15724:15:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":4282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15723:17:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15677:63:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":4268,"name":"TreeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"15594:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint48_$returns$__$","typeString":"function (bytes32,bytes32,uint48)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15594:169:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4285,"nodeType":"EmitStatement","src":"15589:174:12"}]},"documentation":{"id":4249,"nodeType":"StructuredDocumentation","src":"15368:52:12","text":"@notice Fallback to the last version of the tree"},"id":4287,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeTree","nameLocation":"15434:11:12","nodeType":"FunctionDefinition","parameters":{"id":4250,"nodeType":"ParameterList","parameters":[],"src":"15445:2:12"},"returnParameters":{"id":4251,"nodeType":"ParameterList","parameters":[],"src":"15457:0:12"},"scope":4396,"src":"15425:345:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4310,"nodeType":"Block","src":"16001:100:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"treeUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"16020:10:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16033:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16020:14:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":4298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16019:16:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4299,"name":"_EPOCH_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"16038:15:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"16019:34:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16056:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16019:38:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4303,"name":"disputePeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"16060:13:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"16019:54:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":4305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16018:56:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"id":4306,"name":"_EPOCH_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"16078:15:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":4307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16077:17:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"16018:76:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4294,"id":4309,"nodeType":"Return","src":"16011:83:12"}]},"documentation":{"id":4288,"nodeType":"StructuredDocumentation","src":"15776:141:12","text":"@notice Returns the end of the dispute period\n @dev treeUpdate is rounded up to next hour and then `disputePeriod` hours are added"},"id":4311,"implemented":true,"kind":"function","modifiers":[],"name":"_endOfDisputePeriod","nameLocation":"15931:19:12","nodeType":"FunctionDefinition","parameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"treeUpdate","nameLocation":"15958:10:12","nodeType":"VariableDeclaration","scope":4311,"src":"15951:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4289,"name":"uint48","nodeType":"ElementaryTypeName","src":"15951:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"15950:19:12"},"returnParameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4311,"src":"15993:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4292,"name":"uint48","nodeType":"ElementaryTypeName","src":"15993:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"15992:8:12"},"scope":4396,"src":"15922:179:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4394,"nodeType":"Block","src":"16442:573:12","statements":[{"assignments":[4323],"declarations":[{"constant":false,"id":4323,"mutability":"mutable","name":"currentHash","nameLocation":"16460:11:12","nodeType":"VariableDeclaration","scope":4394,"src":"16452:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16452:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4325,"initialValue":{"id":4324,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"16474:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"16452:26:12"},{"assignments":[4327],"declarations":[{"constant":false,"id":4327,"mutability":"mutable","name":"proofLength","nameLocation":"16496:11:12","nodeType":"VariableDeclaration","scope":4394,"src":"16488:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4326,"name":"uint256","nodeType":"ElementaryTypeName","src":"16488:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4330,"initialValue":{"expression":{"id":4328,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"16510:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16516:6:12","memberName":"length","nodeType":"MemberAccess","src":"16510:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16488:34:12"},{"body":{"id":4373,"nodeType":"Block","src":"16567:299:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"16585:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":4338,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"16599:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4340,"indexExpression":{"id":4339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"16605:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16599:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16585:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4367,"nodeType":"Block","src":"16706:91:12","statements":[{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"16724:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":4359,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"16759:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4361,"indexExpression":{"id":4360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"16765:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16759:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4362,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"16769:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4357,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16748:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16752:6:12","memberName":"encode","nodeType":"MemberAccess","src":"16748:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16748:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4356,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16738:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16738:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16724:58:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4366,"nodeType":"ExpressionStatement","src":"16724:58:12"}]},"id":4368,"nodeType":"IfStatement","src":"16581:216:12","trueBody":{"id":4354,"nodeType":"Block","src":"16609:91:12","statements":[{"expression":{"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4342,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"16627:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4346,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"16662:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4347,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"16675:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4349,"indexExpression":{"id":4348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"16681:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16675:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4344,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16651:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16655:6:12","memberName":"encode","nodeType":"MemberAccess","src":"16651:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16651:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4343,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16641:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16641:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16627:58:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4353,"nodeType":"ExpressionStatement","src":"16627:58:12"}]}},{"id":4372,"nodeType":"UncheckedBlock","src":"16810:46:12","statements":[{"expression":{"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"16838:3:12","subExpression":{"id":4369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"16840:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4371,"nodeType":"ExpressionStatement","src":"16838:3:12"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"16548:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4335,"name":"proofLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"16552:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16548:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"initializationExpression":{"assignments":[4332],"declarations":[{"constant":false,"id":4332,"mutability":"mutable","name":"i","nameLocation":"16545:1:12","nodeType":"VariableDeclaration","scope":4374,"src":"16537:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"16537:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4333,"nodeType":"VariableDeclarationStatement","src":"16537:9:12"},"nodeType":"ForStatement","src":"16532:334:12"},{"assignments":[4376],"declarations":[{"constant":false,"id":4376,"mutability":"mutable","name":"root","nameLocation":"16883:4:12","nodeType":"VariableDeclaration","scope":4394,"src":"16875:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16875:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4377,"name":"getMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"16890:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16890:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"16875:30:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4380,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"16919:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16935:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16927:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16927:7:12","typeDescriptions":{}}},"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16927:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16919:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4389,"nodeType":"IfStatement","src":"16915:57:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4386,"name":"InvalidUninitializedRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"16946:24:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16946:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4388,"nodeType":"RevertStatement","src":"16939:33:12"}},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"16989:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4391,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"17004:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16989:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4321,"id":4393,"nodeType":"Return","src":"16982:26:12"}]},"documentation":{"id":4312,"nodeType":"StructuredDocumentation","src":"16107:241:12","text":"@notice Checks the validity of a proof\n @param leaf Hashed leaf data, the starting point of the proof\n @param proof Array of hashes forming a hash chain from leaf to root\n @return true If proof is correct, else false"},"id":4395,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyProof","nameLocation":"16362:12:12","nodeType":"FunctionDefinition","parameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"leaf","nameLocation":"16383:4:12","nodeType":"VariableDeclaration","scope":4395,"src":"16375:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16375:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4317,"mutability":"mutable","name":"proof","nameLocation":"16406:5:12","nodeType":"VariableDeclaration","scope":4395,"src":"16389:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16389:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4316,"nodeType":"ArrayTypeName","src":"16389:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16374:38:12"},"returnParameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4395,"src":"16436:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4319,"name":"bool","nodeType":"ElementaryTypeName","src":"16436:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16435:6:12"},"scope":4396,"src":"16353:662:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4397,"src":"4574:12443:12","usedErrors":[4432,4434,4440,4442,4448,4450,4456,4458,4460,4462]}],"src":"3622:13396:12"}},"contracts/interfaces/ICore.sol":{"id":13,"ast":{"absolutePath":"contracts/interfaces/ICore.sol","exportedSymbols":{"ICore":[4416]},"id":4417,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4398,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"ICore","contractDependencies":[],"contractKind":"interface","documentation":{"id":4399,"nodeType":"StructuredDocumentation","src":"63:148:13","text":"@title ICore\n @author Angle Labs, Inc.\n @notice Interface for the `Core` contracts of smart contract modules used in Angle Labs contracts"},"fullyImplemented":false,"id":4416,"linearizedBaseContracts":[4416],"name":"ICore","nameLocation":"221:5:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4400,"nodeType":"StructuredDocumentation","src":"233:154:13","text":"@notice Checks whether an address is governor\n @param admin Address to check\n @return Whether the address has the `GOVERNOR_ROLE` or not"},"functionSelector":"e43581b8","id":4407,"implemented":false,"kind":"function","modifiers":[],"name":"isGovernor","nameLocation":"401:10:13","nodeType":"FunctionDefinition","parameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"admin","nameLocation":"420:5:13","nodeType":"VariableDeclaration","scope":4407,"src":"412:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4401,"name":"address","nodeType":"ElementaryTypeName","src":"412:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"411:15:13"},"returnParameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4407,"src":"450:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4404,"name":"bool","nodeType":"ElementaryTypeName","src":"450:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"449:6:13"},"scope":4416,"src":"392:64:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4408,"nodeType":"StructuredDocumentation","src":"462:337:13","text":"@notice Checks whether an address is a governor or a guardian of a module\n @param admin Address to check\n @return Whether the address has the `GUARDIAN_ROLE` or not\n @dev Governance should make sure when adding a governor to also give this governor the guardian\n role by calling the `addGovernor` function"},"functionSelector":"521d4de9","id":4415,"implemented":false,"kind":"function","modifiers":[],"name":"isGovernorOrGuardian","nameLocation":"813:20:13","nodeType":"FunctionDefinition","parameters":{"id":4411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4410,"mutability":"mutable","name":"admin","nameLocation":"842:5:13","nodeType":"VariableDeclaration","scope":4415,"src":"834:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4409,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"833:15:13"},"returnParameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4415,"src":"872:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4412,"name":"bool","nodeType":"ElementaryTypeName","src":"872:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"871:6:13"},"scope":4416,"src":"804:74:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4417,"src":"211:669:13","usedErrors":[]}],"src":"37:844:13"}},"contracts/utils/Errors.sol":{"id":14,"ast":{"absolutePath":"contracts/utils/Errors.sol","exportedSymbols":{"CampaignAlreadyExists":[4422],"CampaignDoesNotExist":[4420],"CampaignDurationBelowHour":[4424],"CampaignRewardTokenNotWhitelisted":[4426],"CampaignRewardTooLow":[4428],"CampaignSouldStartInFuture":[4430],"InvalidDispute":[4432],"InvalidLengths":[4434],"InvalidParam":[4436],"InvalidParams":[4438],"InvalidProof":[4440],"InvalidReward":[4444],"InvalidSignature":[4446],"InvalidUninitializedRoot":[4442],"NoDispute":[4448],"NotGovernor":[4450],"NotGovernorOrGuardian":[4452],"NotSigned":[4454],"NotTrusted":[4456],"NotWhitelisted":[4458],"UnresolvedDispute":[4460],"ZeroAddress":[4462]},"id":4463,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4418,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"37:24:14"},{"errorSelector":"9b35ed3b","id":4420,"name":"CampaignDoesNotExist","nameLocation":"69:20:14","nodeType":"ErrorDefinition","parameters":{"id":4419,"nodeType":"ParameterList","parameters":[],"src":"89:2:14"},"src":"63:29:14"},{"errorSelector":"7e31d8a3","id":4422,"name":"CampaignAlreadyExists","nameLocation":"99:21:14","nodeType":"ErrorDefinition","parameters":{"id":4421,"nodeType":"ParameterList","parameters":[],"src":"120:2:14"},"src":"93:30:14"},{"errorSelector":"1b5982fd","id":4424,"name":"CampaignDurationBelowHour","nameLocation":"130:25:14","nodeType":"ErrorDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[],"src":"155:2:14"},"src":"124:34:14"},{"errorSelector":"c0460cfb","id":4426,"name":"CampaignRewardTokenNotWhitelisted","nameLocation":"165:33:14","nodeType":"ErrorDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[],"src":"198:2:14"},"src":"159:42:14"},{"errorSelector":"912f27bf","id":4428,"name":"CampaignRewardTooLow","nameLocation":"208:20:14","nodeType":"ErrorDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[],"src":"228:2:14"},"src":"202:29:14"},{"errorSelector":"cb737dcc","id":4430,"name":"CampaignSouldStartInFuture","nameLocation":"238:26:14","nodeType":"ErrorDefinition","parameters":{"id":4429,"nodeType":"ParameterList","parameters":[],"src":"264:2:14"},"src":"232:35:14"},{"errorSelector":"1a8f0395","id":4432,"name":"InvalidDispute","nameLocation":"274:14:14","nodeType":"ErrorDefinition","parameters":{"id":4431,"nodeType":"ParameterList","parameters":[],"src":"288:2:14"},"src":"268:23:14"},{"errorSelector":"1df89e8b","id":4434,"name":"InvalidLengths","nameLocation":"298:14:14","nodeType":"ErrorDefinition","parameters":{"id":4433,"nodeType":"ParameterList","parameters":[],"src":"312:2:14"},"src":"292:23:14"},{"errorSelector":"d2529034","id":4436,"name":"InvalidParam","nameLocation":"322:12:14","nodeType":"ErrorDefinition","parameters":{"id":4435,"nodeType":"ParameterList","parameters":[],"src":"334:2:14"},"src":"316:21:14"},{"errorSelector":"a86b6512","id":4438,"name":"InvalidParams","nameLocation":"344:13:14","nodeType":"ErrorDefinition","parameters":{"id":4437,"nodeType":"ParameterList","parameters":[],"src":"357:2:14"},"src":"338:22:14"},{"errorSelector":"09bde339","id":4440,"name":"InvalidProof","nameLocation":"367:12:14","nodeType":"ErrorDefinition","parameters":{"id":4439,"nodeType":"ParameterList","parameters":[],"src":"379:2:14"},"src":"361:21:14"},{"errorSelector":"094ad658","id":4442,"name":"InvalidUninitializedRoot","nameLocation":"389:24:14","nodeType":"ErrorDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[],"src":"413:2:14"},"src":"383:33:14"},{"errorSelector":"28829e82","id":4444,"name":"InvalidReward","nameLocation":"423:13:14","nodeType":"ErrorDefinition","parameters":{"id":4443,"nodeType":"ParameterList","parameters":[],"src":"436:2:14"},"src":"417:22:14"},{"errorSelector":"8baa579f","id":4446,"name":"InvalidSignature","nameLocation":"446:16:14","nodeType":"ErrorDefinition","parameters":{"id":4445,"nodeType":"ParameterList","parameters":[],"src":"462:2:14"},"src":"440:25:14"},{"errorSelector":"93754748","id":4448,"name":"NoDispute","nameLocation":"472:9:14","nodeType":"ErrorDefinition","parameters":{"id":4447,"nodeType":"ParameterList","parameters":[],"src":"481:2:14"},"src":"466:18:14"},{"errorSelector":"ee3675d4","id":4450,"name":"NotGovernor","nameLocation":"491:11:14","nodeType":"ErrorDefinition","parameters":{"id":4449,"nodeType":"ParameterList","parameters":[],"src":"502:2:14"},"src":"485:20:14"},{"errorSelector":"99e120bc","id":4452,"name":"NotGovernorOrGuardian","nameLocation":"512:21:14","nodeType":"ErrorDefinition","parameters":{"id":4451,"nodeType":"ParameterList","parameters":[],"src":"533:2:14"},"src":"506:30:14"},{"errorSelector":"a72952d8","id":4454,"name":"NotSigned","nameLocation":"543:9:14","nodeType":"ErrorDefinition","parameters":{"id":4453,"nodeType":"ParameterList","parameters":[],"src":"552:2:14"},"src":"537:18:14"},{"errorSelector":"c22a648e","id":4456,"name":"NotTrusted","nameLocation":"562:10:14","nodeType":"ErrorDefinition","parameters":{"id":4455,"nodeType":"ParameterList","parameters":[],"src":"572:2:14"},"src":"556:19:14"},{"errorSelector":"584a7938","id":4458,"name":"NotWhitelisted","nameLocation":"582:14:14","nodeType":"ErrorDefinition","parameters":{"id":4457,"nodeType":"ParameterList","parameters":[],"src":"596:2:14"},"src":"576:23:14"},{"errorSelector":"05832574","id":4460,"name":"UnresolvedDispute","nameLocation":"606:17:14","nodeType":"ErrorDefinition","parameters":{"id":4459,"nodeType":"ParameterList","parameters":[],"src":"623:2:14"},"src":"600:26:14"},{"errorSelector":"d92e233d","id":4462,"name":"ZeroAddress","nameLocation":"633:11:14","nodeType":"ErrorDefinition","parameters":{"id":4461,"nodeType":"ParameterList","parameters":[],"src":"644:2:14"},"src":"627:20:14"}],"src":"37:611:14"}},"contracts/utils/UUPSHelper.sol":{"id":15,"ast":{"absolutePath":"contracts/utils/UUPSHelper.sol","exportedSymbols":{"CampaignAlreadyExists":[4422],"CampaignDoesNotExist":[4420],"CampaignDurationBelowHour":[4424],"CampaignRewardTokenNotWhitelisted":[4426],"CampaignRewardTooLow":[4428],"CampaignSouldStartInFuture":[4430],"ICore":[4416],"InvalidDispute":[4432],"InvalidLengths":[4434],"InvalidParam":[4436],"InvalidParams":[4438],"InvalidProof":[4440],"InvalidReward":[4444],"InvalidSignature":[4446],"InvalidUninitializedRoot":[4442],"NoDispute":[4448],"NotGovernor":[4450],"NotGovernorOrGuardian":[4452],"NotSigned":[4454],"NotTrusted":[4456],"NotWhitelisted":[4458],"UUPSHelper":[4533],"UUPSUpgradeable":[693],"UnresolvedDispute":[4460],"ZeroAddress":[4462]},"id":4534,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4464,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"3621:24:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4534,"sourceUnit":694,"src":"3647:102:15","symbolAliases":[{"foreign":{"id":4465,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3656:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/ICore.sol","file":"../interfaces/ICore.sol","id":4468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4534,"sourceUnit":4417,"src":"3751:48:15","symbolAliases":[{"foreign":{"id":4467,"name":"ICore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"3760:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/utils/Errors.sol","file":"../utils/Errors.sol","id":4469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4534,"sourceUnit":4463,"src":"3800:29:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4471,"name":"UUPSUpgradeable","nameLocations":["4134:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":693,"src":"4134:15:15"},"id":4472,"nodeType":"InheritanceSpecifier","src":"4134:15:15"}],"canonicalName":"UUPSHelper","contractDependencies":[],"contractKind":"contract","documentation":{"id":4470,"nodeType":"StructuredDocumentation","src":"3831:271:15","text":"@title UUPSHelper\n @notice Helper contract for UUPSUpgradeable contracts where the upgradeability is controlled by a specific address\n @author Angle Labs., Inc\n @dev The 0 address check in the modifier allows the use of these modifiers during initialization"},"fullyImplemented":false,"id":4533,"linearizedBaseContracts":[4533,693,378,9,557],"name":"UUPSHelper","nameLocation":"4120:10:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":4498,"nodeType":"Block","src":"4199:135:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4479,"name":"_core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"4221:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}],"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4213:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4477,"name":"address","nodeType":"ElementaryTypeName","src":"4213:7:15","typeDescriptions":{}}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4213:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4239:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4231:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4481,"name":"address","nodeType":"ElementaryTypeName","src":"4231:7:15","typeDescriptions":{}}},"id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4213:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4245:39:15","subExpression":{"arguments":[{"expression":{"id":4488,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4273:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4277:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4273:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4486,"name":"_core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"4246:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4252:20:15","memberName":"isGovernorOrGuardian","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"4246:26:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4246:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4213:71:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4496,"nodeType":"IfStatement","src":"4209:107:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4493,"name":"NotGovernorOrGuardian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"4293:21:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4293:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4495,"nodeType":"RevertStatement","src":"4286:30:15"}},{"id":4497,"nodeType":"PlaceholderStatement","src":"4326:1:15"}]},"id":4499,"name":"onlyGuardianUpgrader","nameLocation":"4165:20:15","nodeType":"ModifierDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"_core","nameLocation":"4192:5:15","nodeType":"VariableDeclaration","scope":4499,"src":"4186:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"},"typeName":{"id":4474,"nodeType":"UserDefinedTypeName","pathNode":{"id":4473,"name":"ICore","nameLocations":["4186:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":4416,"src":"4186:5:15"},"referencedDeclaration":4416,"src":"4186:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"visibility":"internal"}],"src":"4185:13:15"},"src":"4156:178:15","virtual":false,"visibility":"internal"},{"body":{"id":4525,"nodeType":"Block","src":"4383:115:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4506,"name":"_core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"4405:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}],"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4504,"name":"address","nodeType":"ElementaryTypeName","src":"4397:7:15","typeDescriptions":{}}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4423:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4415:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4508,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:15","typeDescriptions":{}}},"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4415:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4397:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4429:29:15","subExpression":{"arguments":[{"expression":{"id":4515,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4447:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4451:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4447:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4513,"name":"_core","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"4430:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4436:10:15","memberName":"isGovernor","nodeType":"MemberAccess","referencedDeclaration":4407,"src":"4430:16:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4430:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4397:61:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4523,"nodeType":"IfStatement","src":"4393:87:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4520,"name":"NotGovernor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"4467:11:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4467:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4522,"nodeType":"RevertStatement","src":"4460:20:15"}},{"id":4524,"nodeType":"PlaceholderStatement","src":"4490:1:15"}]},"id":4526,"name":"onlyGovernorUpgrader","nameLocation":"4349:20:15","nodeType":"ModifierDefinition","parameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"_core","nameLocation":"4376:5:15","nodeType":"VariableDeclaration","scope":4526,"src":"4370:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"},"typeName":{"id":4501,"nodeType":"UserDefinedTypeName","pathNode":{"id":4500,"name":"ICore","nameLocations":["4370:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":4416,"src":"4370:5:15"},"referencedDeclaration":4416,"src":"4370:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_ICore_$4416","typeString":"contract ICore"}},"visibility":"internal"}],"src":"4369:13:15"},"src":"4340:158:15","virtual":false,"visibility":"internal"},{"body":{"id":4531,"nodeType":"Block","src":"4530:2:15","statements":[]},"id":4532,"implemented":true,"kind":"constructor","modifiers":[{"id":4529,"kind":"modifierInvocation","modifierName":{"id":4528,"name":"initializer","nameLocations":["4518:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":459,"src":"4518:11:15"},"nodeType":"ModifierInvocation","src":"4518:11:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4527,"nodeType":"ParameterList","parameters":[],"src":"4515:2:15"},"returnParameters":{"id":4530,"nodeType":"ParameterList","parameters":[],"src":"4530:0:15"},"scope":4533,"src":"4504:28:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4534,"src":"4102:432:15","usedErrors":[]}],"src":"3621:914:15"}}},"contracts":{"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}","devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"irOptimized":""}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","devdoc":{"custom:oz-upgrades-unsafe-allow":"delegatecall","details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is upgraded."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."},"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":395,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":398,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":377,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}","devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"irOptimized":""}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":395,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":398,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._","kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable state-variable-assignment"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":395,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":398,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":377,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":692,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"irOptimized":""}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","solc_version":"0.8.17","solc_zkvm_edition":null,"zk_version":"1.4.1"},"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"AddressUpgradeable.sol:AddressUpgradeable\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e93b44de308a07a1da3c3fc2fdd25d571f556a1e35b6a9c14d46d3ae09db6f67"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 5:\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\"\nobject \"AddressUpgradeable_977\" {\n    code {\n        {\n            /// @src 5:194:8281  \"library AddressUpgradeable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"AddressUpgradeable_977_deployed\")\n            codecopy(_1, dataoffset(\"AddressUpgradeable_977_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 5:\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\"\n    object \"AddressUpgradeable_977_deployed\" {\n        code {\n            {\n                /// @src 5:194:8281  \"library AddressUpgradeable {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209d927055ad850167b39a545f08c721cdd28cdffb72aab98c63b59fc3c6f0785c64736f6c63430008110033\"\n    }\n}\n","hash":"01000007561824269964699f4809517c935f2ff800594985821d3e08c295ba93","factoryDependencies":{}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","solc_version":"0.8.17","solc_zkvm_edition":null,"zk_version":"1.4.1"},"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"StorageSlotUpgradeable.sol:StorageSlotUpgradeable\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000e41612bddd0d156c13ad6f540a3577ac55f2545f5ca009c430023d89c42fcfd"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 6:\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\"\nobject \"StorageSlotUpgradeable_1037\" {\n    code {\n        {\n            /// @src 6:1279:2681  \"library StorageSlotUpgradeable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"StorageSlotUpgradeable_1037_deployed\")\n            codecopy(_1, dataoffset(\"StorageSlotUpgradeable_1037_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 6:\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\"\n    object \"StorageSlotUpgradeable_1037_deployed\" {\n        code {\n            {\n                /// @src 6:1279:2681  \"library StorageSlotUpgradeable {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220fd1b789d190c8b1740f98516b6cf373f27d670b4790c92233d22c600a585e88f64736f6c63430008110033\"\n    }\n}\n","hash":"01000007ed7c40fc1d6e29258dff2ccb80fad1cd2037d0d8448777bd43a2a510","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}","devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]}},\"version\":1}","devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","solc_version":"0.8.17","solc_zkvm_edition":null,"zk_version":"1.4.1"},"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeERC20.sol:SafeERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000005e1cd2be2aa92a7b768234d72e993bea720ed5571d25d781a85a2a861b7bd6ac"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 9:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\nobject \"SafeERC20_1527\" {\n    code {\n        {\n            /// @src 9:701:6935  \"library SafeERC20 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeERC20_1527_deployed\")\n            codecopy(_1, dataoffset(\"SafeERC20_1527_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 9:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\n    object \"SafeERC20_1527_deployed\" {\n        code {\n            {\n                /// @src 9:701:6935  \"library SafeERC20 {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220704b8121c4e70553454a84e3e33e24cbf08408e56815d0c24c1c7f3609757db664736f6c63430008110033\"\n    }\n}\n","hash":"0100000784cb69961627fc3469b0409ccae20c1d25c3c0715d5bbe1d331e4987","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","solc_version":"0.8.17","solc_zkvm_edition":null,"zk_version":"1.4.1"},"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000dbfafa33ab864a86d5cbb9c57758f1d9d73476f44ef00d15febfe0f0cb321f22"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 10:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_1857\" {\n    code {\n        {\n            /// @src 10:194:9363  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_1857_deployed\")\n            codecopy(_1, dataoffset(\"Address_1857_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 10:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_1857_deployed\" {\n        code {\n            {\n                /// @src 10:194:9363  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122011159174e33a9ce8293172a4ed5b304a5879a97b68139ca3c6e94b358da5dbb964736f6c63430008110033\"\n    }\n}\n","hash":"01000007450fa40fb2f97e56e2198e4ec90524bb04c2da717ca1bd74587844fa","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}","solc_version":"0.8.17","solc_zkvm_edition":null,"zk_version":"1.4.1"},"devdoc":{"details":"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeCast.sol:SafeCast\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004dd778589219d2c5e296abce73d880de5f377e1c8b6370ec293557f9b98209d4"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 11:\"@openzeppelin/contracts/utils/math/SafeCast.sol\"\nobject \"SafeCast_3398\" {\n    code {\n        {\n            /// @src 11:927:35080  \"library SafeCast {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeCast_3398_deployed\")\n            codecopy(_1, dataoffset(\"SafeCast_3398_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 11:\"@openzeppelin/contracts/utils/math/SafeCast.sol\"\n    object \"SafeCast_3398_deployed\" {\n        code {\n            {\n                /// @src 11:927:35080  \"library SafeCast {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220de6749afc5beb53a12b42044aa53a67fb5165029b0b00290abccc9095b40b76a64736f6c63430008110033\"\n    }\n}\n","hash":"01000007ed2a6514dfc74aa9728ca70191244ec1a955ad87c2d529d6429b89a8","factoryDependencies":{}}},"contracts/Distributor.sol":{"Distributor":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidDispute","type":"error"},{"inputs":[],"name":"InvalidLengths","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[],"name":"InvalidUninitializedRoot","type":"error"},{"inputs":[],"name":"NoDispute","type":"error"},{"inputs":[],"name":"NotGovernor","type":"error"},{"inputs":[],"name":"NotTrusted","type":"error"},{"inputs":[],"name":"NotWhitelisted","type":"error"},{"inputs":[],"name":"UnresolvedDispute","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Claimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_disputeAmount","type":"uint256"}],"name":"DisputeAmountUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint48","name":"_disputePeriod","type":"uint48"}],"name":"DisputePeriodUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"valid","type":"bool"}],"name":"DisputeResolved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_disputeToken","type":"address"}],"name":"DisputeTokenUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"Disputed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"isEnabled","type":"bool"}],"name":"OperatorClaimingToggled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"isWhitelisted","type":"bool"}],"name":"OperatorToggled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Recovered","type":"event"},{"anonymous":false,"inputs":[],"name":"Revoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"ipfsHash","type":"bytes32"},{"indexed":false,"internalType":"uint48","name":"endOfDisputePeriod","type":"uint48"}],"name":"TreeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"eoa","type":"address"},{"indexed":false,"internalType":"bool","name":"trust","type":"bool"}],"name":"TrustedToggled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"canUpdateMerkleRoot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes32[][]","name":"proofs","type":"bytes32[][]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"uint208","name":"amount","type":"uint208"},{"internalType":"uint48","name":"timestamp","type":"uint48"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"core","outputs":[{"internalType":"contract ICore","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"disputeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"disputePeriod","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"disputeToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"reason","type":"string"}],"name":"disputeTree","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"disputer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endOfDisputePeriod","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMerkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract ICore","name":"_core","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lastTree","outputs":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"ipfsHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"onlyOperatorCanClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"operators","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amountToRecover","type":"uint256"}],"name":"recoverERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"valid","type":"bool"}],"name":"resolveDispute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revokeTree","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeAmount","type":"uint256"}],"name":"setDisputeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint48","name":"_disputePeriod","type":"uint48"}],"name":"setDisputePeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_disputeToken","type":"address"}],"name":"setDisputeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"toggleOnlyOperatorCanClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"toggleOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"eoa","type":"address"}],"name":"toggleTrusted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tree","outputs":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"ipfsHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"bytes32","name":"ipfsHash","type":"bytes32"}],"internalType":"struct MerkleTree","name":"_tree","type":"tuple"}],"name":"updateTree","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidDispute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUninitializedRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoDispute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotGovernor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotTrusted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnresolvedDispute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_disputeAmount\",\"type\":\"uint256\"}],\"name\":\"DisputeAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"_disputePeriod\",\"type\":\"uint48\"}],\"name\":\"DisputePeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_disputeToken\",\"type\":\"address\"}],\"name\":\"DisputeTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"Disputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"OperatorClaimingToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"OperatorToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"endOfDisputePeriod\",\"type\":\"uint48\"}],\"name\":\"TreeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"eoa\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"trust\",\"type\":\"bool\"}],\"name\":\"TrustedToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canUpdateMerkleRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"proofs\",\"type\":\"bytes32[][]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint208\",\"name\":\"amount\",\"type\":\"uint208\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"core\",\"outputs\":[{\"internalType\":\"contract ICore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputePeriod\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"disputeTree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endOfDisputePeriod\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICore\",\"name\":\"_core\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTree\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"onlyOperatorCanClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToRecover\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeTree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeAmount\",\"type\":\"uint256\"}],\"name\":\"setDisputeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"_disputePeriod\",\"type\":\"uint48\"}],\"name\":\"setDisputePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_disputeToken\",\"type\":\"address\"}],\"name\":\"setDisputeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"toggleOnlyOperatorCanClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"toggleOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eoa\",\"type\":\"address\"}],\"name\":\"toggleTrusted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tree\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct MerkleTree\",\"name\":\"_tree\",\"type\":\"tuple\"}],\"name\":\"updateTree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Angle Labs. Inc\",\"kind\":\"dev\",\"methods\":{\"claim(address[],address[],uint256[],bytes32[][])\":{\"details\":\"Anyone may call this function for anyone else, funds go to destination regardless, it's just a question of who provides the proof and pays the gas: `msg.sender` is used only for addresses that require a trusted operator\",\"params\":{\"amounts\":\"Amount of tokens that will be sent to the corresponding users\",\"proofs\":\"Array of hashes bridging from a leaf `(hash of user | token | amount)` to the Merkle root\",\"tokens\":\"ERC20 claimed\",\"users\":\"Recipient of tokens\"}},\"disputeTree(string)\":{\"details\":\"Requires a deposit of `disputeToken` that'll be slashed if the dispute is not acceptedIt is only possible to create a dispute within `disputePeriod` after each tree update\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"resolveDispute(bool)\":{\"params\":{\"valid\":\"Whether the dispute was valid\"}},\"toggleOnlyOperatorCanClaim(address)\":{\"details\":\"deprecated\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"disputer\":{\"details\":\"Used to store if there is an ongoing dispute\"}},\"title\":\"Distributor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canUpdateMerkleRoot(address)\":{\"notice\":\"Trusted EOAs to update the Merkle root\"},\"claim(address[],address[],uint256[],bytes32[][])\":{\"notice\":\"Claims rewards for a given set of users\"},\"claimed(address,address)\":{\"notice\":\"Mapping user -> token -> amount to track claimed amounts\"},\"core()\":{\"notice\":\"`Core` contract handling access control\"},\"disputeAmount()\":{\"notice\":\"Amount to deposit to freeze the roots update\"},\"disputePeriod()\":{\"notice\":\"Time after which a change in a tree becomes effective, in EPOCH_DURATION\"},\"disputeToken()\":{\"notice\":\"Token to deposit to freeze the roots update\"},\"disputeTree(string)\":{\"notice\":\"Freezes the Merkle tree update until the dispute is resolved\"},\"disputer()\":{\"notice\":\"Address which created the dispute\"},\"endOfDisputePeriod()\":{\"notice\":\"When the current tree will become valid\"},\"getMerkleRoot()\":{\"notice\":\"Returns the MerkleRoot that is currently live for the contract\"},\"lastTree()\":{\"notice\":\"Tree that was in place in the contract before the last `tree` update\"},\"onlyOperatorCanClaim(address)\":{\"notice\":\"Whether or not to disable permissionless claiming\"},\"operators(address,address)\":{\"notice\":\"user -> operator -> authorisation to claim\"},\"recoverERC20(address,address,uint256)\":{\"notice\":\"Recovers any ERC20 token\"},\"resolveDispute(bool)\":{\"notice\":\"Resolve the ongoing dispute, if any\"},\"revokeTree()\":{\"notice\":\"Allows the governor of this contract to fallback to the last version of the tree immediately\"},\"setDisputeAmount(uint256)\":{\"notice\":\"Sets the amount of `disputeToken` used as a caution during disputes\"},\"setDisputePeriod(uint48)\":{\"notice\":\"Sets the dispute period after which a tree update becomes effective\"},\"setDisputeToken(address)\":{\"notice\":\"Sets the token used as a caution during disputes\"},\"toggleOnlyOperatorCanClaim(address)\":{\"notice\":\"Toggles permissioned claiming for a given user\"},\"toggleOperator(address,address)\":{\"notice\":\"Toggles whitelisting for a given user and a given operator\"},\"toggleTrusted(address)\":{\"notice\":\"Adds or removes EOAs which are trusted to update the Merkle root\"},\"tree()\":{\"notice\":\"Tree of claimable tokens through this contract\"},\"updateTree((bytes32,bytes32))\":{\"notice\":\"Updates Merkle Tree\"}},\"notice\":\"Allows to claim rewards distributed to them through Merkl\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Distributor.sol\":\"Distributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"contracts/Distributor.sol\":{\"keccak256\":\"0xc9d48efe2fdfaacec38040ae1b6d0b17f6d6d3fc5bda249fdca0cfbece5c0244\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9f5ecdc3c03f2f6b5875d4132b5ba609a8f2eb9a100c98f255e1124c829359d7\",\"dweb:/ipfs/QmZtdQuyVJCusCKesosLvKiu4w2sQxVbxuWqpSQCxyBsFh\"]},\"contracts/interfaces/ICore.sol\":{\"keccak256\":\"0x11e92b745193d16934aaeb873c0388041dce2ef3e359a9c3315b668b05903100\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2958b2c0b9b0365a3ddf0d39c3623c4b41cf9d1797d4aeee3bfd02ad255692d9\",\"dweb:/ipfs/QmUkyhLEfW3YfVKcnZ3CxBQj33EdBKsx5rijkezNmGVALL\"]},\"contracts/utils/Errors.sol\":{\"keccak256\":\"0xfc5e2a6d240998521df671386b373a6943527333c0bd480aa8350d7547d6ee07\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5f328e836c82c0f6bec3684df4558ea4137d843cf8786d2f4a1133ab264c4f21\",\"dweb:/ipfs/QmeV1UsYPBXutW4ptWmcWb6G5ZjUK5XK1boXQPQDvwDvhC\"]},\"contracts/utils/UUPSHelper.sol\":{\"keccak256\":\"0xb8011db6d148c8a111678c8074343c82114b923806aee0f60c48ed05f8bd6c40\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://50c3ecca8c5e46c57a3abc32bb4e74c5983f83722842018715ced14b68528efd\",\"dweb:/ipfs/QmYBTwe1sCieZ3nBLUc3zq1x78rBB9rRDVo9LSDnMTySdv\"]}},\"version\":1}","solc_version":"0.8.17","solc_zkvm_edition":null,"zk_version":"1.4.1"},"devdoc":{"author":"Angle Labs. Inc","kind":"dev","methods":{"claim(address[],address[],uint256[],bytes32[][])":{"details":"Anyone may call this function for anyone else, funds go to destination regardless, it's just a question of who provides the proof and pays the gas: `msg.sender` is used only for addresses that require a trusted operator","params":{"amounts":"Amount of tokens that will be sent to the corresponding users","proofs":"Array of hashes bridging from a leaf `(hash of user | token | amount)` to the Merkle root","tokens":"ERC20 claimed","users":"Recipient of tokens"}},"disputeTree(string)":{"details":"Requires a deposit of `disputeToken` that'll be slashed if the dispute is not acceptedIt is only possible to create a dispute within `disputePeriod` after each tree update"},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"resolveDispute(bool)":{"params":{"valid":"Whether the dispute was valid"}},"toggleOnlyOperatorCanClaim(address)":{"details":"deprecated"},"upgradeTo(address)":{"details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"disputer":{"details":"Used to store if there is an ongoing dispute"}},"title":"Distributor","version":1},"userdoc":{"kind":"user","methods":{"canUpdateMerkleRoot(address)":{"notice":"Trusted EOAs to update the Merkle root"},"claim(address[],address[],uint256[],bytes32[][])":{"notice":"Claims rewards for a given set of users"},"claimed(address,address)":{"notice":"Mapping user -> token -> amount to track claimed amounts"},"core()":{"notice":"`Core` contract handling access control"},"disputeAmount()":{"notice":"Amount to deposit to freeze the roots update"},"disputePeriod()":{"notice":"Time after which a change in a tree becomes effective, in EPOCH_DURATION"},"disputeToken()":{"notice":"Token to deposit to freeze the roots update"},"disputeTree(string)":{"notice":"Freezes the Merkle tree update until the dispute is resolved"},"disputer()":{"notice":"Address which created the dispute"},"endOfDisputePeriod()":{"notice":"When the current tree will become valid"},"getMerkleRoot()":{"notice":"Returns the MerkleRoot that is currently live for the contract"},"lastTree()":{"notice":"Tree that was in place in the contract before the last `tree` update"},"onlyOperatorCanClaim(address)":{"notice":"Whether or not to disable permissionless claiming"},"operators(address,address)":{"notice":"user -> operator -> authorisation to claim"},"recoverERC20(address,address,uint256)":{"notice":"Recovers any ERC20 token"},"resolveDispute(bool)":{"notice":"Resolve the ongoing dispute, if any"},"revokeTree()":{"notice":"Allows the governor of this contract to fallback to the last version of the tree immediately"},"setDisputeAmount(uint256)":{"notice":"Sets the amount of `disputeToken` used as a caution during disputes"},"setDisputePeriod(uint48)":{"notice":"Sets the dispute period after which a tree update becomes effective"},"setDisputeToken(address)":{"notice":"Sets the token used as a caution during disputes"},"toggleOnlyOperatorCanClaim(address)":{"notice":"Toggles permissioned claiming for a given user"},"toggleOperator(address,address)":{"notice":"Toggles whitelisting for a given user and a given operator"},"toggleTrusted(address)":{"notice":"Adds or removes EOAs which are trusted to update the Merkle root"},"tree()":{"notice":"Tree of claimable tokens through this contract"},"updateTree((bytes32,bytes32))":{"notice":"Updates Merkle Tree"}},"notice":"Allows to claim rewards distributed to them through Merkl","version":1},"storageLayout":{"storage":[{"astId":395,"contract":"contracts/Distributor.sol:Distributor","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":398,"contract":"contracts/Distributor.sol:Distributor","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":377,"contract":"contracts/Distributor.sol:Distributor","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":692,"contract":"contracts/Distributor.sol:Distributor","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":3434,"contract":"contracts/Distributor.sol:Distributor","label":"tree","offset":0,"slot":"101","type":"t_struct(MerkleTree)3412_storage"},{"astId":3438,"contract":"contracts/Distributor.sol:Distributor","label":"lastTree","offset":0,"slot":"103","type":"t_struct(MerkleTree)3412_storage"},{"astId":3442,"contract":"contracts/Distributor.sol:Distributor","label":"disputeToken","offset":0,"slot":"105","type":"t_contract(IERC20)1115"},{"astId":3446,"contract":"contracts/Distributor.sol:Distributor","label":"core","offset":0,"slot":"106","type":"t_contract(ICore)4416"},{"astId":3449,"contract":"contracts/Distributor.sol:Distributor","label":"disputer","offset":0,"slot":"107","type":"t_address"},{"astId":3452,"contract":"contracts/Distributor.sol:Distributor","label":"endOfDisputePeriod","offset":20,"slot":"107","type":"t_uint48"},{"astId":3455,"contract":"contracts/Distributor.sol:Distributor","label":"disputePeriod","offset":26,"slot":"107","type":"t_uint48"},{"astId":3458,"contract":"contracts/Distributor.sol:Distributor","label":"disputeAmount","offset":0,"slot":"108","type":"t_uint256"},{"astId":3466,"contract":"contracts/Distributor.sol:Distributor","label":"claimed","offset":0,"slot":"109","type":"t_mapping(t_address,t_mapping(t_address,t_struct(Claim)3419_storage))"},{"astId":3471,"contract":"contracts/Distributor.sol:Distributor","label":"canUpdateMerkleRoot","offset":0,"slot":"110","type":"t_mapping(t_address,t_uint256)"},{"astId":3476,"contract":"contracts/Distributor.sol:Distributor","label":"onlyOperatorCanClaim","offset":0,"slot":"111","type":"t_mapping(t_address,t_uint256)"},{"astId":3483,"contract":"contracts/Distributor.sol:Distributor","label":"operators","offset":0,"slot":"112","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3487,"contract":"contracts/Distributor.sol:Distributor","label":"__gap","offset":0,"slot":"113","type":"t_array(t_uint256)38_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)38_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[38]","numberOfBytes":"1216"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(ICore)4416":{"encoding":"inplace","label":"contract ICore","numberOfBytes":"20"},"t_contract(IERC20)1115":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_struct(Claim)3419_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => struct Claim))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(Claim)3419_storage)"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Claim)3419_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Claim)","numberOfBytes":"32","value":"t_struct(Claim)3419_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Claim)3419_storage":{"encoding":"inplace","label":"struct Claim","members":[{"astId":3414,"contract":"contracts/Distributor.sol:Distributor","label":"amount","offset":0,"slot":"0","type":"t_uint208"},{"astId":3416,"contract":"contracts/Distributor.sol:Distributor","label":"timestamp","offset":26,"slot":"0","type":"t_uint48"},{"astId":3418,"contract":"contracts/Distributor.sol:Distributor","label":"merkleRoot","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_struct(MerkleTree)3412_storage":{"encoding":"inplace","label":"struct MerkleTree","members":[{"astId":3409,"contract":"contracts/Distributor.sol:Distributor","label":"merkleRoot","offset":0,"slot":"0","type":"t_bytes32"},{"astId":3411,"contract":"contracts/Distributor.sol:Distributor","label":"ipfsHash","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint208":{"encoding":"inplace","label":"uint208","numberOfBytes":"26"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint48":{"encoding":"inplace","label":"uint48","numberOfBytes":"6"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Distributor.sol:Distributor\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[25]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t@CPI0_0[0], r4, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r4, stack[@calldatasize]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_16\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_531\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r5\n\tjump.le\t@.BB0_18\n\tsub.s!\t@CPI0_3[0], r2, r5\n\tjump.le\t@.BB0_27\n\tsub.s!\t@CPI0_4[0], r2, r5\n\tjump.gt\t@.BB0_59\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.gt\t@.BB0_87\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.eq\t@.BB0_116\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_44[0], r1, stack-[17]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_531\n\tcontext.sp\tr4\n\tsub.s\t21, r4, r4\n\tshl.s\t5, r4, r4\n\tsload\tr0, r3\n\tand!\t65280, r3, r2\n\tjump.ne\t@.BB0_284\n\tcontext.sp\tr4\n\tsub.s\t20, r4, r4\n\tshl.s\t5, r4, r4\n\tand!\t255, r3, r1\n\tjump.ne\t@.BB0_284\n\tadd\t128, r0, r1\n.BB0_14:\n\tand\t@CPI0_70[0], r3, r2\n\tor\t257, r2, r3\n\tsstore\tr0, r3\n\tadd\tstack-[17], r0, r5\n\tsub!\tr5, r0, r3\n\tjump.ne\t@.BB0_413\n\tadd\t@CPI0_73[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_16:\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tcontext.this\tr1\n\tst.1\t128, r1\n\tnear_call\tr0, @modifier_initializer, @DEFAULT_UNWIND\n\tnear_call\tr0, @modifier_initializer, @DEFAULT_UNWIND\n\tld.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tadd\t1, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.gt\t@.BB0_36\n\tsub.s!\t@CPI0_34[0], r2, r4\n\tjump.le\t@.BB0_67\n\tsub.s!\t@CPI0_35[0], r2, r4\n\tjump.gt\t@.BB0_91\n\tsub.s!\t@CPI0_38[0], r2, r4\n\tjump.eq\t@.BB0_129\n\tsub.s!\t@CPI0_39[0], r2, r2\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.gt\t@.BB0_531\n\tst.1\t0, r1\n\tadd\t111, r0, r1\n\tjump\t@.BB0_66\n.BB0_27:\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.le\t@.BB0_74\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.gt\t@.BB0_102\n\tsub.s!\t@CPI0_19[0], r2, r4\n\tjump.eq\t@.BB0_135\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_531\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_289\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_295\n.BB0_36:\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.le\t@.BB0_79\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.gt\t@.BB0_107\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_203\n\tsub.s!\t@CPI0_30[0], r2, r2\n\tjump.ne\t@.BB0_531\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_531\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.gt\t@.BB0_531\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_52[0], r4, r2\n\tjump.gt\t@.BB0_531\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_531\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_52[0], r2, r6\n\tjump.gt\t@.BB0_234\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r8\n\tand\tr6, r8, r6\n\tadd\t63, r6, r6\n\tand\tr6, r8, r6\n\tsub.s!\t@CPI0_86[0], r6, r7\n\tjump.gt\t@.BB0_234\n\tadd\tr8, r0, stack-[16]\n\tadd\t36, r4, r4\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_531\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_50\n\tadd\tr0, r0, r5\n.BB0_49:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_49\n.BB0_50:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_52\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_52:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_100[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_101[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tcontext.this\tr2\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB0_240\n\tadd\t@CPI0_104[0], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_44[0], r2, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_418\n\tadd\t106, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_44[0], r1, r2\n\tjump.ne\t@.BB0_532\n.BB0_56:\n\tadd\t@CPI0_106[0], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_544\n\tld.1\t64, r2\n\tadd\t@CPI0_107[0], r0, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_559\n\tcontext.sp\tr5\n\tsub.s\t23, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_565\n.BB0_59:\n\tsub.s!\t@CPI0_5[0], r2, r5\n\tjump.gt\t@.BB0_111\n\tsub.s!\t@CPI0_8[0], r2, r5\n\tjump.eq\t@.BB0_205\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.gt\t@.BB0_531\n\tst.1\t0, r1\n\tadd\t110, r0, r1\n.BB0_66:\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_248\n.BB0_67:\n\tsub.s!\t@CPI0_40[0], r2, r4\n\tjump.eq\t@.BB0_214\n\tsub.s!\t@CPI0_41[0], r2, r4\n\tjump.eq\t@.BB0_216\n\tsub.s!\t@CPI0_42[0], r2, r2\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_262\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_268\n.BB0_74:\n\tsub.s!\t@CPI0_21[0], r2, r4\n\tjump.eq\t@.BB0_221\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.eq\t@.BB0_223\n\tsub.s!\t@CPI0_23[0], r2, r1\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t107, r0, r1\n\tjump\t@.BB0_261\n.BB0_79:\n\tsub.s!\t@CPI0_31[0], r2, r4\n\tjump.eq\t@.BB0_228\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.eq\t@.BB0_235\n\tsub.s!\t@CPI0_33[0], r2, r2\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tand\t@CPI0_49[0], r2, stack-[17]\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_49[0], r2, r1\n\tjump.gt\t@.BB0_531\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_302\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_308\n.BB0_87:\n\tsub.s!\t@CPI0_11[0], r2, r1\n\tjump.eq\t@.BB0_241\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t104, r0, r1\n\tsload\tr1, r1\n\tadd\t103, r0, r2\n\tjump\t@.BB0_115\n.BB0_91:\n\tsub.s!\t@CPI0_36[0], r2, r4\n\tjump.eq\t@.BB0_243\n\tsub.s!\t@CPI0_37[0], r2, r2\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_531\n\tcontext.caller\tr2\n\tsub!\tstack-[17], r2, r1\n\tjump.eq\t@.BB0_99\n\tadd\tr2, r0, stack-[16]\n\tst.1\t0, r2\n\tadd\t110, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t1, r1, r1\n\tadd\tstack-[16], r0, r3\n\tjump.ne\t@.BB0_421\n.BB0_99:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t111, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\t2, r2, r1\n\tjump.lt\t@.BB0_398\n.BB0_101:\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_51[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_102:\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.eq\t@.BB0_250\n\tsub.s!\t@CPI0_18[0], r2, r1\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_273\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_279\n.BB0_107:\n\tsub.s!\t@CPI0_27[0], r2, r1\n\tjump.eq\t@.BB0_255\n\tsub.s!\t@CPI0_28[0], r2, r1\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t107, r0, r1\n\tsload\tr1, r1\n\tshr.s\t208, r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_111:\n\tsub.s!\t@CPI0_6[0], r2, r1\n\tjump.eq\t@.BB0_259\n\tsub.s!\t@CPI0_7[0], r2, r1\n\tjump.ne\t@.BB0_531\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t102, r0, r1\n\tsload\tr1, r1\n\tadd\t101, r0, r2\n.BB0_115:\n\tsload\tr2, r2\n\tst.1\t128, r2\n\tst.1\t160, r1\n\tadd\t@CPI0_43[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_116:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.gt\t@.BB0_531\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_531\n\tcontext.caller\tr2\n\tsub!\tstack-[17], r2, r1\n\tjump.eq\t@.BB0_123\n\tadd\tr2, r0, stack-[15]\n\tst.1\t0, r2\n\tadd\t110, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t1, r1, r1\n\tadd\tstack-[15], r0, r3\n\tjump.ne\t@.BB0_437\n.BB0_123:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t112, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t1, r1, r1\n\tjump.gt\t@.BB0_101\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tadd\tstack-[14], r0, r3\n\tsub\t1, r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tsub!\tr3, r0, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_71[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_75[0], r0, r4\n\tjump\t@.BB0_467\n.BB0_129:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.gt\t@.BB0_531\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.gt\t@.BB0_531\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_344\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_350\n.BB0_135:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t132, r3, r4\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_52[0], r2, r4\n\tjump.gt\t@.BB0_531\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_531\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[6]\n\tsub.s!\t@CPI0_52[0], r4, r4\n\tjump.gt\t@.BB0_531\n\tadd\t36, r2, stack-[5]\n\tadd\tstack-[6], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tstack-[5], r2, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_531\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_52[0], r4, r2\n\tjump.gt\t@.BB0_531\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_531\n\tadd\t4, r4, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_52[0], r2, r5\n\tjump.gt\t@.BB0_531\n\tadd\t36, r4, stack-[4]\n\tshl.s\t5, r2, r4\n\tadd\tstack-[4], r4, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_531\n\tptr.add.s\t68, r1, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_52[0], r5, r4\n\tjump.gt\t@.BB0_531\n\tadd\t35, r5, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_531\n\tadd\t4, r5, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_52[0], r4, r6\n\tjump.gt\t@.BB0_531\n\tadd\t36, r5, stack-[2]\n\tshl.s\t5, r4, r5\n\tadd\tstack-[2], r5, r5\n\tsub!\tr5, r3, r5\n\tjump.gt\t@.BB0_531\n\tptr.add.s\t100, r1, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[3]\n\tsub.s!\t@CPI0_52[0], r5, r5\n\tjump.gt\t@.BB0_531\n\tadd\tstack-[3], r0, r5\n\tadd\t35, r5, r5\n\tsub!\tr5, r3, r5\n\tjump.ge\t@.BB0_531\n\tadd\tstack-[3], r0, r5\n\tadd\t4, r5, r5\n\tptr.add\tr1, r5, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_52[0], r1, r5\n\tjump.gt\t@.BB0_531\n\tadd\tstack-[3], r0, r5\n\tadd\t36, r5, stack-[9]\n\tshl.s\t5, r1, r5\n\tadd\tstack-[9], r5, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_531\n\tsub!\tstack-[6], r0, r3\n\tjump.eq\t@.BB0_583\n\tsub!\tstack-[6], r2, r2\n\tjump.ne\t@.BB0_583\n\tsub!\tstack-[6], r4, r2\n\tjump.ne\t@.BB0_583\n\tsub!\tstack-[6], r1, r1\n\tjump.ne\t@.BB0_583\n\tadd\t96, r0, stack-[1]\n\tadd\tr0, r0, stack-[10]\n.BB0_158:\n\tadd\tstack-[10], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\tstack-[5], r2, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.gt\t@.BB0_531\n\tadd\tstack-[17], r0, r3\n\tadd\tstack-[4], r3, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.gt\t@.BB0_531\n\tadd\tstack-[17], r0, r3\n\tadd\tstack-[2], r3, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r4\n\tcontext.caller\tr2\n\tadd\tstack-[13], r0, r3\n\tsub!\tr2, r3, r1\n\tadd\tr4, r0, stack-[11]\n\tjump.ne\t@.BB0_162\n\tld.1\t64, r2\n\tjump\t@.BB0_166\n.BB0_162:\n\tadd\tr2, r0, stack-[16]\n\tst.1\t0, r3\n\tadd\t112, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_620\n\tadd\tstack-[13], r0, r3\n\tadd\tstack-[11], r0, r4\n.BB0_166:\n\tadd\t96, r2, r1\n\tst.1\tr1, r4\n\tadd\t64, r2, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr1, r4\n\tadd\tstack-[1], r0, r1\n\tst.1.inc\tr2, r1, r1\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_86[0], r2, r3\n\tjump.gt\t@.BB0_234\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tadd\tstack-[17], r0, r3\n\tadd\tstack-[9], r3, r4\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\tstack-[3], r3, r2\n\tsub.s\t67, r2, r5\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tsub!\tr4, r5, r6\n\tadd\t@CPI0_88[0], r0, r9\n\tadd\tr0, r0, r6\n\tadd.ge\tr9, r0, r6\n\tand\t@CPI0_88[0], r5, r5\n\tand\t@CPI0_88[0], r4, r7\n\tsub!\tr7, r5, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr9, r0, r8\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI0_88[0], r5, r5\n\tadd.ne\tr6, r0, r8\n\tld\tr1, r10\n\tsub!\tr8, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\tstack-[9], r4, r1\n\tptr.add\tr2, r1, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[16]\n\tsub.s!\t@CPI0_52[0], r4, r4\n\tjump.gt\t@.BB0_531\n\tadd\tstack-[16], r0, r4\n\tshl.s\t5, r4, r4\n\tsub\tr3, r4, r5\n\tadd\t32, r1, r1\n\tsub!\tr1, r5, r6\n\tadd\tr0, r0, r6\n\tadd.gt\tr9, r0, r6\n\tand\t@CPI0_88[0], r5, r5\n\tand\t@CPI0_88[0], r1, r7\n\tsub!\tr7, r5, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr9, r0, r8\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI0_88[0], r5, r5\n\tadd.ne\tr6, r0, r8\n\tsub!\tr8, r0, r5\n\tjump.ne\t@.BB0_531\n\tadd\t63, r4, r5\n\tand\t@CPI0_89[0], r5, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[15]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_52[0], r5, r7\n\tjump.gt\t@.BB0_234\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_234\n\tst.1\t64, r5\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[15], r0, r6\n\tst.1.inc\tr6, r5, r5\n\tadd\tr5, r0, stack-[14]\n\tadd\tr4, r1, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_531\n\tsub!\tr1, r4, r3\n\tjump.ge\t@.BB0_178\n\tadd\tstack-[14], r0, r3\n.BB0_176:\n\tptr.add\tr2, r1, r5\n\tld\tr5, r5\n\tst.1.inc\tr3, r5, r3\n\tadd\t32, r1, r1\n\tsub!\tr1, r4, r5\n\tjump.lt\t@.BB0_176\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[16]\n.BB0_178:\n\tsub!\tstack-[16], r0, r1\n\tjump.eq\t@.BB0_188\n\tadd\tr0, r0, r2\n.BB0_180:\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_584\n\tadd\tr2, r0, stack-[17]\n\tshl.s\t5, r2, r1\n\tadd\tstack-[14], r1, r4\n\tld.1\t64, r1\n\tadd\t64, r1, r3\n\tadd\t32, r1, r2\n\tld.1\tr4, r4\n\tsub!\tr10, r4, r5\n\tjump.ge\t@.BB0_184\n\tst.1\tr2, r10\n\tst.1\tr3, r4\n\tadd\t64, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_91[0], r1, r3\n\tjump.gt\t@.BB0_234\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tjump\t@.BB0_186\n.BB0_184:\n\tst.1\tr2, r4\n\tst.1\tr3, r10\n\tadd\t64, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_91[0], r1, r3\n\tjump.gt\t@.BB0_234\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n.BB0_186:\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r10\n\tadd\tstack-[17], r0, r2\n\tadd\t1, r2, r2\n\tsub.s!\tstack-[16], r2, r1\n\tjump.lt\t@.BB0_180\n.BB0_188:\n\tadd\tr10, r0, stack-[17]\n\tadd\t107, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_47[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r3\n\tshr.s\t160, r3, r2\n\tand\t@CPI0_49[0], r2, r2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.ge\t1, r0, r1\n\tand!\t@CPI0_44[0], r3, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tand!\tr1, r2, r1\n\tadd\t103, r0, r1\n\tadd.ne\t101, r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[17], r0, r2\n\tjump.eq\t@.BB0_617\n\tsub!\tr2, r1, r1\n\tadd\tstack-[13], r0, r1\n\tjump.ne\t@.BB0_618\n\tst.1\t0, r1\n\tadd\t109, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_93[0], r1, r3\n\tadd\tstack-[11], r0, r2\n\tsub!\tr2, r3, r1\n\tjump.lt\t@.BB0_101\n\tadd\tr3, r0, stack-[8]\n\tsub.s!\t@CPI0_94[0], r2, r1\n\tjump.ge\t@.BB0_619\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_47[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r3\n\tshr.s\t160, r3, r2\n\tand\t@CPI0_49[0], r2, r2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.ge\t1, r0, r1\n\tand!\t@CPI0_44[0], r3, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tand!\tr1, r2, r1\n\tadd\t103, r0, r1\n\tadd.ne\t101, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_91[0], r2, r1\n\tjump.gt\t@.BB0_234\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[11], r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_47[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tadd\t64, r2, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tand\t@CPI0_49[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tadd\tstack-[8], r0, r3\n\tsub\tstack-[11], r3, r4\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_93[0], r2, r2\n\tadd\tstack-[16], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t208, r3, r3\n\tor\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\t1, r1, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r2\n\tadd\t32, r2, r1\n\tadd\t@CPI0_79[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r2, r1\n\tadd\tr4, r0, stack-[17]\n\tst.1\tr1, r4\n\tadd\t36, r2, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_86[0], r2, r1\n\tjump.gt\t@.BB0_234\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[12], r0, r1\n\tnear_call\tr0, @fun_callOptionalReturn, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[13], r0, r2\n\tand\t@CPI0_44[0], r2, r5\n\tadd\tstack-[12], r0, r2\n\tand\t@CPI0_44[0], r2, r6\n\tor\t@CPI0_71[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_95[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_531\n\tadd\tstack-[10], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\tstack-[6], r2, r1\n\tjump.lt\t@.BB0_158\n\tjump\t@.BB0_417\n.BB0_203:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tnear_call\tr0, @fun_getMerkleRoot, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_105[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_205:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_531\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t107, r0, r2\n\tsload\tr2, r3\n\tand!\t@CPI0_44[0], r3, r1\n\tjump.ne\t@.BB0_412\n\tadd\tr3, r0, stack-[16]\n\tadd\tr2, r0, stack-[15]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t0, r1\n\tadd\t110, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tcontext.sp\tr3\n\tsub.s\t19, r3, r3\n\tshl.s\t5, r3, r3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_212\n\tadd\t@CPI0_47[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tcontext.sp\tr3\n\tsub.s\t18, r3, r3\n\tshl.s\t5, r3, r3\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tshr.s\t160, r2, r2\n\tand\t@CPI0_49[0], r2, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB0_439\n.BB0_212:\n\tadd\tr3, r0, stack-[14]\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r10\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[17], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_401\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_407\n.BB0_214:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t108, r0, r1\n\tjump\t@.BB0_249\n.BB0_216:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_44[0], r2, r3\n\tjump.gt\t@.BB0_531\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_531\n\tst.1\t0, r2\n\tadd\t109, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r1\n\tand\t@CPI0_93[0], r1, r3\n\tst.1\t128, r3\n\tshr.s\t208, r1, r1\n\tst.1\t160, r1\n\tst.1\t192, r2\n\tadd\t@CPI0_132[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_221:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t107, r0, r1\n\tsload\tr1, r1\n\tshr.s\t160, r1, r1\n\tand\t@CPI0_49[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_223:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_44[0], r1, stack-[17]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_531\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_312\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_318\n.BB0_228:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r4\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_52[0], r4, r2\n\tjump.gt\t@.BB0_531\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_531\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_52[0], r2, r6\n\tjump.gt\t@.BB0_234\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r8\n\tand\tr6, r8, r6\n\tadd\t63, r6, r6\n\tand\tr6, r8, r6\n\tsub.s!\t@CPI0_86[0], r6, r7\n\tjump.le\t@.BB0_355\n.BB0_234:\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_51[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_235:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_531\n\tadd\t@CPI0_100[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_101[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tcontext.this\tr2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_369\n.BB0_240:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_124[0], r0, r3\n\tjump\t@.BB0_419\n.BB0_241:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t105, r0, r1\n\tjump\t@.BB0_261\n.BB0_243:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_44[0], r2, r3\n\tjump.gt\t@.BB0_531\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_531\n\tst.1\t0, r2\n\tadd\t112, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[16], r0, r2\n.BB0_248:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_249:\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_250:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_531\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[17]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_531\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_323\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_329\n.BB0_255:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t@CPI0_100[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_101[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr2, r0, r3\n\tshl.s\t64, r3, r3\n\tld\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tcontext.this\tr4\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_334\n\tadd\t@CPI0_104[0], r0, r1\n\tst.1\tr2, r1\n\tor\t@CPI0_105[0], r3, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_259:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_531\n\tadd\t106, r0, r1\n.BB0_261:\n\tsload\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_262:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_265\n\tadd\tr0, r0, r7\n.BB0_264:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_264\n.BB0_265:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_267\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_267:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_335\n.BB0_268:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_531\n\tld.1\t128, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_321\n\tadd\t107, r0, r2\n\tsload\tr2, r2\n\tand!\t@CPI0_44[0], r2, r2\n\tjump.ne\t@.BB0_428\n\tadd\t108, r0, r2\n\tadd\tstack-[17], r0, r3\n\tsstore\tr2, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tshl.s\t64, r1, r1\n\tor\tr2, r1, r1\n\tor\t@CPI0_71[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_131[0], r0, r4\n\tjump\t@.BB0_414\n.BB0_273:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_276\n\tadd\tr0, r0, r7\n.BB0_275:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_275\n.BB0_276:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_278\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_278:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_339\n.BB0_279:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_531\n\tld.1\t128, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_321\n\tadd\t107, r0, r2\n\tsload\tr2, r2\n\tand!\t@CPI0_44[0], r2, r2\n\tjump.ne\t@.BB0_429\n\tnear_call\tr0, @fun_revokeTree, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_284:\n\tadd\tr4, r0, stack-[16]\n\tadd\tr2, r0, stack-[14]\n\tadd\tr3, r0, stack-[15]\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_395\n\tadd\tstack-[15], r0, r3\n\tand\t255, r3, r1\n\tsub.s!\t1, r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tadd\tstack-[16], r0, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r0, stack[r2]\n\tjump.ne\t@.BB0_396\n\tsub!\tstack-[14], r0, r1\n\tjump.ne\t@.BB0_459\n\tld.1\t64, r1\n\tjump\t@.BB0_14\n.BB0_289:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_292\n\tadd\tr0, r0, r7\n.BB0_291:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_291\n.BB0_292:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_294\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_294:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_375\n.BB0_295:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_531\n\tld.1\t128, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_321\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t110, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t1, r1, r1\n\tjump.gt\t@.BB0_101\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tadd\tstack-[15], r0, r3\n\tsub\t1, r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tsub!\tr3, r0, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_71[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_82[0], r0, r4\n\tjump\t@.BB0_400\n.BB0_302:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_305\n\tadd\tr0, r0, r7\n.BB0_304:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_304\n.BB0_305:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_307\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_307:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_380\n.BB0_308:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_531\n\tld.1\t128, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_321\n\tadd\tstack-[16], r0, r2\n\tshl.s\t208, r2, r2\n\tadd\t107, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_93[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_71[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_116[0], r0, r4\n\tjump\t@.BB0_414\n.BB0_312:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_315\n\tadd\tr0, r0, r7\n.BB0_314:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_314\n.BB0_315:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_317\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_317:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_385\n.BB0_318:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_531\n\tld.1\t128, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_430\n.BB0_321:\n\tadd\t@CPI0_78[0], r0, r2\n\tjump\t@.BB0_322\n.BB0_323:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_326\n\tadd\tr0, r0, r7\n.BB0_325:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_325\n.BB0_326:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_328\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_328:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n.BB0_329:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r3\n\tjump.lt\t@.BB0_531\n\tld.1\t128, r3\n\tsub!\tr3, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB0_531\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_353\n\tadd\t107, r0, r4\n\tsload\tr4, r3\n\tand!\t@CPI0_44[0], r3, r3\n\tjump.ne\t@.BB0_461\n\tadd\t@CPI0_81[0], r0, r1\n\tjump\t@.BB0_354\n.BB0_334:\n\tadd\t100, r2, r1\n\tadd\t@CPI0_102[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t68, r2, r1\n\tadd\t@CPI0_103[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r2, r1\n\tadd\t56, r0, r4\n\tst.1\tr1, r4\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tor\t@CPI0_68[0], r3, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_335:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_338\n\tadd\tr0, r0, r6\n.BB0_337:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_337\n.BB0_338:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_520\n\tjump\t@.BB0_521\n.BB0_339:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_342\n\tadd\tr0, r0, r6\n.BB0_341:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_341\n.BB0_342:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tjump\t@.BB0_520\n.BB0_344:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_76[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_347\n\tadd\tr0, r0, r7\n.BB0_346:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_346\n.BB0_347:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_349\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_349:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_423\n.BB0_350:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r3\n\tjump.lt\t@.BB0_531\n\tld.1\t128, r3\n\tsub!\tr3, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB0_531\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_466\n.BB0_353:\n\tadd\t@CPI0_78[0], r0, r1\n.BB0_354:\n\tst.1\tr2, r1\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_355:\n\tadd\tr8, r0, stack-[17]\n\tadd\t36, r4, r4\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_531\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_359\n\tadd\tr0, r0, r5\n.BB0_358:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_358\n.BB0_359:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_361\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_361:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t107, r0, r2\n\tsload\tr2, r3\n\tand!\t@CPI0_44[0], r3, r1\n\tjump.ne\t@.BB0_445\n\tadd\tr3, r0, stack-[16]\n\tadd\tr2, r0, stack-[15]\n\tadd\t@CPI0_47[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld.1\t64, r2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r3\n\tshr.s\t160, r3, r3\n\tand\t@CPI0_49[0], r3, r3\n\tsub!\tr1, r3, r1\n\tjump.ge\t@.BB0_508\n\tadd\t105, r0, r1\n\tsload\tr1, r1\n\tadd\t108, r0, r3\n\tsload\tr3, r3\n\tadd\t32, r2, r4\n\tadd\t@CPI0_126[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t100, r2, r4\n\tst.1\tr4, r3\n\tcontext.this\tr3\n\tand\t@CPI0_44[0], r3, r3\n\tadd\t68, r2, r4\n\tst.1\tr4, r3\n\tcontext.caller\tr3\n\tadd\tr3, r0, stack-[16]\n\tand\t@CPI0_44[0], r3, r3\n\tadd\t36, r2, r4\n\tst.1\tr4, r3\n\tadd\t100, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_127[0], r2, r3\n\tjump.gt\t@.BB0_234\n\tadd\t160, r2, r3\n\tst.1\t64, r3\n\tand\t@CPI0_44[0], r1, r1\n\tnear_call\tr0, @fun_callOptionalReturn, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_69[0], r1, r1\n\tor\tstack-[16], r1, r1\n\tsstore\tr2, r1\n\tadd\t32, r0, r2\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tld.1\t128, r2\n\tst.1\tr3, r2\n\tadd\t64, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_368\n\tadd\tr0, r0, r4\n.BB0_367:\n\tadd\tr4, r3, r5\n\tadd\t160, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_367\n.BB0_368:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tand\tstack-[17], r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_128[0], r0, r4\n\tjump\t@.BB0_414\n.BB0_369:\n\tadd\t@CPI0_104[0], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_44[0], r2, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_418\n\tld.1\t64, r5\n\tadd\t106, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_44[0], r1, r2\n\tjump.ne\t@.BB0_446\n\tsub.s!\t@CPI0_119[0], r5, r1\n\tjump.gt\t@.BB0_234\n.BB0_372:\n\tadd\t32, r5, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\t64, r1\n\tadd\tr5, r0, stack-[16]\n\tst.1\tr5, r0\n\tadd\t@CPI0_106[0], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_505\n\tld.1\t64, r2\n\tadd\t@CPI0_107[0], r0, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_522\n\tcontext.sp\tr5\n\tsub.s\t25, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_528\n.BB0_375:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_378\n\tadd\tr0, r0, r6\n.BB0_377:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_377\n.BB0_378:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tjump\t@.BB0_520\n.BB0_380:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_383\n\tadd\tr0, r0, r6\n.BB0_382:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_382\n.BB0_383:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tjump\t@.BB0_520\n.BB0_385:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_388\n\tadd\tr0, r0, r6\n.BB0_387:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_387\n.BB0_388:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tjump\t@.BB0_520\n.BB0_390:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_393\n\tadd\tr0, r0, r6\n.BB0_392:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_392\n.BB0_393:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tjump\t@.BB0_520\n.BB0_395:\n\tadd\tstack-[16], r0, r1\n\tshr.s\t5, r1, r1\n\tadd\t0, r0, stack[r1]\n.BB0_396:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_65[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_66[0], r0, r3\n.BB0_397:\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tjump\t@.BB0_420\n.BB0_398:\n\tadd\tr2, r0, stack-[15]\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_531\n\tadd\tstack-[15], r0, r3\n\tsub\t1, r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tsub!\tr3, r0, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_71[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_129[0], r0, r4\n.BB0_400:\n\tadd\tstack-[17], r0, r5\n\tjump\t@.BB0_415\n.BB0_401:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\tr10, r0, stack-[17]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_404\n\tadd\tr0, r0, r7\n.BB0_403:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_403\n.BB0_404:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_406\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_406:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_432\n.BB0_407:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_52[0], r4, r2\n\tjump.gt\t@.BB0_234\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_234\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_531\n\tld.1\tr10, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_531\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tadd\tstack-[14], r0, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r0, stack[r2]\n\tjump.ne\t@.BB0_440\n.BB0_412:\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_413:\n\tadd\t106, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_69[0], r4, r4\n\tor\tr4, r5, r4\n\tsstore\tr3, r4\n\tor\t1, r2, r2\n\tsstore\tr0, r2\n\tadd\t1, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_71[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_72[0], r0, r4\n.BB0_414:\n.BB0_415:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_531\n.BB0_417:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_418:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_117[0], r0, r3\n.BB0_419:\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_118[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t44, r0, r3\n.BB0_420:\n\tst.1\tr2, r3\n\tadd\t@CPI0_67[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_68[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_421:\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r10\n\tadd\t@CPI0_74[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_448\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_454\n.BB0_423:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_426\n\tadd\tr0, r0, r6\n.BB0_425:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_425\n.BB0_426:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tjump\t@.BB0_520\n.BB0_429:\n\tjump\t@.BB0_428\n.BB0_430:\n\tadd\t107, r0, r2\n\tsload\tr2, r2\n\tand!\t@CPI0_44[0], r2, r2\n\tjump.ne\t@.BB0_468\n\tadd\t105, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_69[0], r2, r2\n\tadd\tstack-[17], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_99[0], r0, r4\n\tjump\t@.BB0_415\n.BB0_432:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_435\n\tadd\tr0, r0, r6\n.BB0_434:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_434\n.BB0_435:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tjump\t@.BB0_520\n.BB0_437:\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r5\n\tadd\t@CPI0_74[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr5, r0, stack-[15]\n\tjump.ne\t@.BB0_469\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_476\n.BB0_439:\n\tld.1\t64, r4\n.BB0_440:\n\tsub.s!\t@CPI0_53[0], r4, r1\n\tjump.gt\t@.BB0_234\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t101, r0, r1\n\tsload\tr1, r2\n\tst.1.inc\tr4, r2, r3\n\tadd\t102, r0, r4\n\tsload\tr4, r5\n\tst.1\tr3, r5\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r6\n\tld\tr6, r6\n\tadd\tr6, r0, stack-[17]\n\tsstore\tr1, r6\n\tptr.add.s\t36, r3, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsstore\tr4, r1\n\tadd\t103, r0, r1\n\tsstore\tr1, r2\n\tadd\t104, r0, r1\n\tsstore\tr1, r5\n\tadd\t@CPI0_47[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tand\t@CPI0_49[0], r1, r1\n\tsub.s\t1, r1, r1\n\tsub.s!\t@CPI0_49[0], r1, r2\n\tjump.gt\t@.BB0_101\n\tadd\tstack-[15], r0, r2\n\tsload\tr2, r2\n\tshr.s\t208, r2, r2\n\tand\t@CPI0_52[0], r1, r1\n\tdiv.s\t3600, r1, r1, r3\n\tadd\tr1, r2, r1\n\tadd\t1, r1, r1\n\tsub.s!\t@CPI0_54[0], r1, r2\n\tjump.gt\t@.BB0_101\n\tadd\tstack-[16], r0, r2\n\tand\t@CPI0_55[0], r2, r2\n\tmul\t@CPI0_56[0], r1, r3, r4\n\tand\t@CPI0_57[0], r3, r3\n\tor\tr3, r2, r2\n\tadd\tstack-[15], r0, r3\n\tsstore\tr3, r2\n\tmul\t3600, r1, r1, r2\n\tand\t@CPI0_58[0], r1, r1\n\tld.1\t64, r2\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\t32, r2, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\tr1, r3\n\tadd\tstack-[17], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_59[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_60[0], r0, r4\n\tjump\t@.BB0_414\n.BB0_445:\n\tld.1\t64, r1\n\tadd\t@CPI0_77[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_446:\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tcontext.caller\tr3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_482\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_489\n.BB0_448:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\tr10, r0, stack-[16]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_451\n\tadd\tr0, r0, r7\n.BB0_450:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_450\n.BB0_451:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_453\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_453:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_496\n.BB0_454:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr10, r0, r5\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_52[0], r1, r4\n\tjump.gt\t@.BB0_234\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_234\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_531\n\tld.1\tr5, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_99\n\tjump\t@.BB0_481\n.BB0_459:\n\tsub.s\t256, r0, r1\n\tand\tr3, r1, r1\n\tor\t1, r1, r1\n\tsstore\tr0, r1\n\tadd\tstack-[17], r0, r3\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_501\n\tld.1\t64, r1\n\tadd\t@CPI0_73[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_461:\n\tadd\tr4, r0, stack-[15]\n\tadd\t108, r0, r4\n\tsload\tr4, r4\n\tadd\t105, r0, r5\n\tsload\tr5, r8\n\tadd\t160, r1, r5\n\tadd\t@CPI0_79[0], r0, r6\n\tst.1\tr5, r6\n\tor\t256, r1, r5\n\tadd\t196, r1, r6\n\tadd\t164, r1, r7\n\tand\t@CPI0_44[0], r8, r1\n\tsub!\tstack-[17], r0, r8\n\tjump.ne\t@.BB0_503\n\tadd\tstack-[16], r0, r3\n\tand\t@CPI0_44[0], r3, r3\n\tst.1\tr7, r3\n\tst.1\tr6, r4\n\tadd\t68, r0, r3\n\tst.1\tr2, r3\n\tst.1\t64, r5\n\tnear_call\tr0, @fun_callOptionalReturn, @DEFAULT_UNWIND\n\tadd\t@CPI0_47[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tand\t@CPI0_49[0], r1, r1\n\tsub.s\t1, r1, r1\n\tsub.s!\t@CPI0_49[0], r1, r2\n\tjump.gt\t@.BB0_101\n\tand\t@CPI0_52[0], r1, r1\n\tdiv.s\t3600, r1, r2, r1\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tshr.s\t208, r1, r3\n\tadd\tr2, r3, r2\n\tadd\t1, r2, r2\n\tsub.s!\t@CPI0_54[0], r2, r3\n\tjump.gt\t@.BB0_101\n\tand\t@CPI0_55[0], r1, r1\n\tmul\t@CPI0_56[0], r2, r2, r3\n\tand\t@CPI0_57[0], r2, r2\n\tor\tr2, r1, r1\n\tjump\t@.BB0_504\n.BB0_466:\n\tadd\t160, r1, r3\n\tadd\t@CPI0_79[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t196, r1, r3\n\tadd\tstack-[15], r0, r4\n\tst.1\tr3, r4\n\tadd\t164, r1, r3\n\tadd\tstack-[16], r0, r4\n\tst.1\tr3, r4\n\tadd\t68, r0, r3\n\tst.1\tr2, r3\n\tor\t256, r1, r1\n\tst.1\t64, r1\n\tadd\tstack-[17], r0, r1\n\tnear_call\tr0, @fun_callOptionalReturn, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_71[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_130[0], r0, r4\n.BB0_467:\n\tadd\tstack-[17], r0, r5\n\tadd\tstack-[16], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_531\n\tjump\t@.BB0_417\n.BB0_468:\n.BB0_428:\n\tadd\t@CPI0_77[0], r0, r2\n.BB0_322:\n\tst.1\tr1, r2\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_469:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_51[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_472\n\tadd\tr0, r0, r7\n.BB0_471:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_471\n.BB0_472:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_474\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_474:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_510\n\tadd\tstack-[15], r0, r5\n.BB0_476:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_52[0], r1, r4\n\tjump.gt\t@.BB0_234\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_234\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_531\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_123\n.BB0_481:\n\tadd\t@CPI0_61[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_482:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\tr5, r0, stack-[16]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_485\n\tadd\tr0, r0, r7\n.BB0_484:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_484\n.BB0_485:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_487\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_487:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_515\n\tadd\tstack-[16], r0, r5\n.BB0_489:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_52[0], r1, r4\n\tjump.gt\t@.BB0_234\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_234\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_531\n\tld.1\tr5, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_543\n.BB0_494:\n\tadd\t@CPI0_78[0], r0, r2\n.BB0_495:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_496:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_499\n\tadd\tr0, r0, r6\n.BB0_498:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_498\n.BB0_499:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tjump\t@.BB0_520\n.BB0_501:\n\tadd\t106, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_69[0], r2, r2\n.BB0_502:\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_503:\n\tst.1\tr7, r3\n\tst.1\tr6, r4\n\tadd\t68, r0, r3\n\tst.1\tr2, r3\n\tst.1\t64, r5\n\tnear_call\tr0, @fun_callOptionalReturn, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_revokeTree, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n.BB0_504:\n\tand\t@CPI0_69[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_71[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_80[0], r0, r4\n\tjump\t@.BB0_414\n.BB0_505:\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_546\n.BB0_507:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_122[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_123[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tjump\t@.BB0_420\n.BB0_508:\n\tadd\t@CPI0_125[0], r0, r1\n.BB0_509:\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_510:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_513\n\tadd\tr0, r0, r6\n.BB0_512:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_512\n.BB0_513:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tjump\t@.BB0_520\n.BB0_515:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_518\n\tadd\tr0, r0, r6\n.BB0_517:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_517\n.BB0_518:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n.BB0_520:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_521:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_522:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[15], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_525\n\tadd\tr0, r0, r7\n.BB0_524:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_524\n.BB0_525:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_527\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[15], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_527:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t24, r5, r5\n\tshl.s\t5, r5, r5\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_576\n.BB0_528:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[15], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_52[0], r1, r4\n\tjump.gt\t@.BB0_234\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_234\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.ge\t@.BB0_534\n.BB0_531:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_532:\n\tld.1\t64, r3\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[15]\n\tadd\t4, r3, r1\n\tcontext.caller\tr3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_547\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_553\n.BB0_534:\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tshr.s\t5, r5, r3\n\tadd\tr2, r0, stack[r3]\n\tsub.s!\t@CPI0_104[0], r2, r2\n\tjump.ne\t@.BB0_577\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_507\n\tadd\t@CPI0_104[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_69[0], r2, r2\n\tadd\tstack-[17], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_110[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_531\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_417\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_574\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_585\n\tadd\t1, r0, r3\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_586\n.BB0_543:\n\tadd\tr1, r0, r5\n\tsub.s!\t@CPI0_119[0], r5, r1\n\tjump.gt\t@.BB0_234\n\tjump\t@.BB0_372\n.BB0_544:\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_507\n.BB0_546:\n\tadd\t@CPI0_104[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_69[0], r2, r2\n\tadd\tstack-[17], r0, r3\n\tjump\t@.BB0_502\n.BB0_547:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[15], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_51[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_550\n\tadd\tr0, r0, r7\n.BB0_549:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_549\n.BB0_550:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_552\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[15], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_552:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_578\n.BB0_553:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[15], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_52[0], r1, r4\n\tjump.gt\t@.BB0_234\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_234\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_531\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_531\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_56\n\tjump\t@.BB0_494\n.BB0_559:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[15], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_562\n\tadd\tr0, r0, r7\n.BB0_561:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_561\n.BB0_562:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_564\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[15], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_564:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t22, r5, r5\n\tshl.s\t5, r5, r5\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_576\n.BB0_565:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[15], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_52[0], r1, r4\n\tjump.gt\t@.BB0_234\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_234\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_531\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tshr.s\t5, r5, r3\n\tadd\tr2, r0, stack[r3]\n\tsub.s!\t@CPI0_104[0], r2, r2\n\tjump.ne\t@.BB0_577\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_507\n\tadd\t@CPI0_104[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_69[0], r2, r2\n\tadd\tstack-[17], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_110[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_531\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_575\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_601\n.BB0_574:\n\tadd\tstack-[15], r0, r3\n\tadd\t100, r3, r1\n\tadd\t@CPI0_114[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\t@CPI0_115[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\t38, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_68[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_575:\n\trevert\n.BB0_576:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_120[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_121[0], r0, r3\n\tjump\t@.BB0_397\n.BB0_577:\n\tadd\t100, r1, r2\n\tadd\t@CPI0_108[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_109[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t41, r0, r3\n\tjump\t@.BB0_420\n.BB0_578:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_581\n\tadd\tr0, r0, r6\n.BB0_580:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_580\n.BB0_581:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tjump\t@.BB0_520\n.BB0_583:\n\tadd\t@CPI0_83[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_84[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_584:\n\tadd\t@CPI0_90[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_51[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_585:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tshl.s\t64, r5, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r2\n.BB0_586:\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_593\n\tadd\t96, r0, r1\n\tadd\t128, r0, r4\n.BB0_588:\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_91[0], r2, r5\n\tjump.gt\t@.BB0_234\n\tadd\t96, r2, r5\n\tst.1\t64, r5\n\tadd\t64, r2, r5\n\tadd\t@CPI0_112[0], r0, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r5\n\tadd\t@CPI0_113[0], r0, r6\n\tst.1\tr5, r6\n\tadd\t39, r0, r5\n\tst.1\tr2, r5\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_417\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_592\n.BB0_591:\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[17]\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n.BB0_592:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_593:\n\tsub.s!\t@CPI0_52[0], r2, r1\n\tjump.gt\t@.BB0_234\n\tadd\t31, r2, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r1\n\tadd\t63, r1, r1\n\tand\tr1, r4, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_52[0], r4, r6\n\tjump.gt\t@.BB0_234\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_234\n\tst.1\t64, r4\n\tand\t31, r2, r5\n\tst.1.inc\tr1, r2, r4\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB0_599\n\tadd\tr0, r0, r7\n.BB0_598:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r2, r8\n\tjump.lt\t@.BB0_598\n.BB0_599:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_588\n\tshl.s\t5, r2, r2\n\tptr.add\tr6, r2, r6\n\tadd\tr4, r2, r2\n\tshl.s\t3, r5, r5\n\tld.1\tr2, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr2, r5\n\tjump\t@.BB0_588\n.BB0_601:\n\tld.1\t128, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_603\n\tadd\t1, r0, r3\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_604\n.BB0_603:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r2\n.BB0_604:\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_609\n\tadd\t96, r0, r1\n\tadd\t128, r0, r4\n.BB0_606:\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_91[0], r2, r5\n\tjump.gt\t@.BB0_234\n\tadd\t96, r2, r5\n\tst.1\t64, r5\n\tadd\t64, r2, r5\n\tadd\t@CPI0_112[0], r0, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r5\n\tadd\t@CPI0_113[0], r0, r6\n\tst.1\tr5, r6\n\tadd\t39, r0, r5\n\tst.1\tr2, r5\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_417\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_592\n\tjump\t@.BB0_591\n.BB0_609:\n\tsub.s!\t@CPI0_52[0], r2, r1\n\tadd\tstack-[16], r0, r4\n\tjump.gt\t@.BB0_234\n\tadd\t31, r2, r1\n\tand\tr1, r4, r1\n\tadd\t63, r1, r1\n\tand\tr1, r4, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_52[0], r4, r6\n\tjump.gt\t@.BB0_234\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_234\n\tst.1\t64, r4\n\tand\t31, r2, r5\n\tst.1.inc\tr1, r2, r4\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB0_615\n\tadd\tr0, r0, r7\n.BB0_614:\n\tshl.s\t5, r7, r8\n\tadd\tr4, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r2, r8\n\tjump.lt\t@.BB0_614\n.BB0_615:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_606\n\tshl.s\t5, r2, r2\n\tptr.add\tr6, r2, r6\n\tadd\tr4, r2, r2\n\tshl.s\t3, r5, r5\n\tld.1\tr2, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr2, r5\n\tjump\t@.BB0_606\n.BB0_617:\n\tld.1\t64, r1\n\tadd\t@CPI0_98[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_618:\n\tld.1\t64, r1\n\tadd\t@CPI0_92[0], r0, r2\n\tjump\t@.BB0_495\n.BB0_619:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_96[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_97[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t39, r0, r3\n\tjump\t@.BB0_420\n.BB0_620:\n\tadd\t@CPI0_85[0], r0, r1\n\tjump\t@.BB0_509\n.func_end0:\n\nmodifier_initializer:\n.func_begin1:\n\tnop\tstack+=[1]\n\tsload\tr0, r3\n\tand!\t65535, r3, r1\n\tjump.eq\t@.BB1_6\n\tadd\tr3, r0, stack-[1]\n\tadd\t@CPI1_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tst.2\t4, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tadd\tstack-[1], r0, r3\n\tand\t255, r3, r2\n\tld\tr1, r1\n\tsub.s!\t1, r2, r2\n\tjump.ne\t@.BB1_5\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB1_5\n.BB1_6:\n\tand!\t65280, r3, r1\n\tsub.s\t256, r0, r1\n\tand\tr3, r1, r1\n\tor\t1, r1, r2\n\tand\t@CPI1_7[0], r3, r1\n\tor\t257, r1, r3\n\tadd.ne\tr2, r0, r3\n\tsstore\tr0, r3\n\tjump.ne\t@.BB1_8\n\tor\t1, r1, r1\n\tsstore\tr0, r1\n\tadd\t1, r0, r3\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI1_1[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI1_1[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI1_1[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI1_9[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_9\n.BB1_8:\n\tret\n.BB1_2:\n\trevert\n.BB1_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI1_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI1_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_1[0], r0, r2\n\tsub.s!\t@CPI1_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI1_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_9:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1.inc\tr2, r2, r3\n\tst.1\tr4, r2\n\tadd\t64, r1, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr1, r4, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nfun_callOptionalReturn:\n.func_begin3:\n\tnop\tstack+=[5]\n\tand\t@CPI3_0[0], r1, r6\n\tld.1\t64, r5\n\tsub.s!\t@CPI3_1[0], r5, r1\n\tjump.ge\t@.BB3_1\n\tadd\t64, r5, r1\n\tst.1\t64, r1\n\tadd\t32, r5, r1\n\tadd\t@CPI3_2[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\tr5, r1\n\tld.1.inc\tr2, r3, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r6, r4\n\tjump.ne\t@.BB3_18\n\tadd!\tstack[@returndatasize], r0, r1\n\tjump.eq\t@.BB3_4\n\tsub.s!\t@CPI3_6[0], r1, r2\n\tjump.gt\t@.BB3_1\n\tadd\t31, r1, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t63, r2, r2\n\tand\tr2, r3, r2\n\tld.1\t64, r9\n\tadd\tr9, r2, r2\n\tsub!\tr2, r9, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI3_6[0], r2, r4\n\tjump.gt\t@.BB3_1\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_1\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tst.1.inc\tr9, r1, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB3_43\n\tadd\tr0, r0, r5\n.BB3_10:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB3_10\n.BB3_43:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB3_12\n\tshl.s\t5, r1, r1\n\tptr.add\tr4, r1, r4\n\tadd\tr3, r1, r1\n\tshl.s\t3, r2, r2\n\tld.1\tr1, r3\n\tshl\tr3, r2, r3\n\tshr\tr3, r2, r3\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r3, r2\n\tst.1\tr1, r2\n\tjump\t@.BB3_12\n.BB3_18:\n\tadd\tr5, r0, stack-[1]\n\tadd\t@CPI3_3[0], r0, r4\n\tsub.s!\t@CPI3_3[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tsub.s!\t@CPI3_3[0], r2, r5\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr3, r2, r2\n\tsub.s!\t@CPI3_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tr6, r0, stack-[2]\n\tadd\tr6, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_3[0], r3, stack[@returndatasize]\n\tand!\t@CPI3_3[0], r3, r5\n\tjump.eq\t@.BB3_19\n\tadd\t31, r5, r3\n\tand\t@CPI3_4[0], r3, r3\n\tadd\t63, r3, r3\n\tand\t@CPI3_5[0], r3, r3\n\tld.1\t64, r9\n\tadd\tr9, r3, r3\n\tsub!\tr3, r9, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI3_6[0], r3, r6\n\tadd\tstack-[2], r0, r10\n\tjump.gt\t@.BB3_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_1\n\tst.1\t64, r3\n\tand\t31, r5, r4\n\tst.1.inc\tr9, r5, r3\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB3_42\n\tadd\tr0, r0, r6\n.BB3_24:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_24\n.BB3_42:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_26\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB3_26\n.BB3_4:\n\tadd\t96, r0, r9\n.BB3_12:\n\tcontext.sp\tr2\n\tsub.s\t5, r2, r2\n\tshl.s\t5, r2, r2\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB3_34\n\tadd\tr9, r0, stack-[2]\n\tadd\t@CPI3_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t4, r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI3_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_14\n\tcontext.sp\tr2\n\tsub.s\t5, r2, r2\n\tjump\t@.BB3_16\n.BB3_19:\n\tadd\t96, r0, r9\n\tadd\t128, r0, r3\n\tadd\tstack-[2], r0, r10\n.BB3_26:\n\tld.1\tr9, r1\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_27\n\tcontext.sp\tr2\n\tsub.s\t4, r2, r2\n\tshl.s\t5, r2, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB3_32\n.BB3_34:\n\tshr.s\t5, r2, r2\n\tadd\tr9, r0, stack[r2]\n\tjump\t@.BB3_36\n.BB3_32:\n\tadd\tr9, r0, stack-[2]\n\tadd\t@CPI3_8[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI3_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_9[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_14\n\tcontext.sp\tr2\n\tsub.s\t4, r2, r2\n.BB3_16:\n\tshl.s\t5, r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[2], r0, r9\n\tjump.eq\t@.BB3_17\n\tld.1\tr9, r1\n\tshr.s\t5, r2, r2\n\tadd\tr9, r0, stack[r2]\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB3_41\n.BB3_36:\n\tadd\t@CPI3_10[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_10[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI3_10[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB3_37\n\tadd\t32, r9, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB3_37\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB3_40\n.BB3_41:\n\tret\n.BB3_1:\n\tadd\t@CPI3_16[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_37:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_40:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t42, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_3[0], r0, r2\n\tsub.s!\t@CPI3_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_27:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB3_29\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\t@CPI3_7[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_3[0], r0, r2\n\tsub.s!\t@CPI3_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_3[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_14:\n\trevert\n.BB3_17:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_3[0], r0, r2\n\tsub.s!\t@CPI3_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_15[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_29:\n\tadd\t@CPI3_3[0], r0, r2\n\tsub.s!\t@CPI3_3[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_getMerkleRoot:\n.func_begin4:\n\tnop\tstack+=[1]\n\tadd\t107, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI4_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r3\n\tshr.s\t160, r3, r2\n\tand\t@CPI4_3[0], r2, r2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r1\n\tadd.ge\t1, r0, r1\n\tand!\t@CPI4_4[0], r3, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tand!\tr1, r2, r1\n\tadd\t103, r0, r1\n\tadd.ne\t101, r0, r1\n\tsload\tr1, r1\n\tret\n.BB4_1:\n\trevert\n.func_end4:\n\nfun_revokeTree:\n.func_begin5:\n\tnop\tstack+=[2]\n\tld.1\t64, r1\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tjump.ge\t@.BB5_1\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t103, r0, r2\n\tsload\tr2, r3\n\tst.1.inc\tr1, r3, r1\n\tadd\t104, r0, r2\n\tsload\tr2, r4\n\tst.1\tr1, r4\n\tadd\t107, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI5_1[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t101, r0, r1\n\tadd\tr3, r0, stack-[2]\n\tsstore\tr1, r3\n\tadd\t102, r0, r1\n\tadd\tr4, r0, stack-[1]\n\tsstore\tr1, r4\n\tadd\t@CPI5_2[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_2[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI5_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB5_3\n\tadd\t@CPI5_5[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_2[0], r1, r2\n\tadd.ge\t@CPI5_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_6[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_5\n\tld\tr1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr3, r4\n\tand\t@CPI5_7[0], r1, r1\n\tdiv.s\t3600, r1, r3, r4\n\tsub\tr1, r4, r1\n\tand\t@CPI5_8[0], r1, r1\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI5_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI5_10[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB5_3\n\tret\n.BB5_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_1:\n\tadd\t@CPI5_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_5:\n\trevert\n.func_end5:\n\n__cxa_throw:\n.func_begin6:\n\trevert\n.func_end6:\n\n__sha3:\n.func_begin7:\n\tadd\t@CPI7_0[0], r0, r3\n\tsub.s!\t@CPI7_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI7_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_2\n\tld\tr1, r1\n\tret\n.BB7_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__farcall:\n.func_begin8:\n.tmp0:\n\tfar_call\tr1, r2, @.BB8_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n__staticcall:\n.func_begin9:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB9_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n__delegatecall:\n.func_begin10:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB10_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI3_3:\nCPI4_1:\nCPI5_2:\nCPI7_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261357415493651629346657050491355136\nCPI0_2:\n\t.cell 1559005481\nCPI0_3:\n\t.cell 3182197922\nCPI0_4:\n\t.cell 3653861510\nCPI0_5:\n\t.cell 4076137253\nCPI0_6:\n\t.cell 4076137254\nCPI0_7:\n\t.cell 4250186280\nCPI0_8:\n\t.cell 3653861511\nCPI0_9:\n\t.cell 3849617637\nCPI0_10:\n\t.cell 3343438432\nCPI0_11:\n\t.cell 3343438433\nCPI0_12:\n\t.cell 3437760122\nCPI0_13:\n\t.cell 3182197923\nCPI0_14:\n\t.cell 3302387176\nCPI0_15:\n\t.cell 1911461311\nCPI0_16:\n\t.cell 2313283625\nCPI0_17:\n\t.cell 2313283626\nCPI0_18:\n\t.cell 2507704373\nCPI0_19:\n\t.cell 1911461312\nCPI0_20:\n\t.cell 2129150793\nCPI0_21:\n\t.cell 1559005482\nCPI0_22:\n\t.cell 1648074397\nCPI0_23:\n\t.cell 1791320323\nCPI0_24:\n\t.cell 707124544\nCPI0_25:\n\t.cell 1230571094\nCPI0_26:\n\t.cell 1389465644\nCPI0_27:\n\t.cell 1389465645\nCPI0_28:\n\t.cell 1542659405\nCPI0_29:\n\t.cell 1230571095\nCPI0_30:\n\t.cell 1327428230\nCPI0_31:\n\t.cell 707124545\nCPI0_32:\n\t.cell 911855590\nCPI0_33:\n\t.cell 1178729967\nCPI0_34:\n\t.cell 292666792\nCPI0_35:\n\t.cell 641161357\nCPI0_36:\n\t.cell 641161358\nCPI0_37:\n\t.cell 679639096\nCPI0_38:\n\t.cell 292666793\nCPI0_39:\n\t.cell 343314754\nCPI0_40:\n\t.cell 155536291\nCPI0_41:\n\t.cell 211599118\nCPI0_42:\n\t.cell 219217059\nCPI0_43:\n\t.cell 5070602403274100847421635428352\nCPI0_44:\nCPI3_0:\nCPI4_4:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_45:\n\t.cell 2535301202817642044428229017600\nCPI0_46:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_47:\nCPI4_0:\nCPI5_5:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_48:\nCPI4_2:\nCPI5_6:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_49:\nCPI4_3:\n\t.cell 281474976710655\nCPI0_50:\n\t.cell -12570221579989281766538860415548855492217137783978045159704275633507833741312\nCPI0_51:\nCPI3_17:\nCPI5_12:\n\t.cell 2852213850513516153367582212096\nCPI0_52:\nCPI3_6:\n\t.cell 18446744073709551615\nCPI0_53:\n\t.cell 18446744073709551551\nCPI0_54:\n\t.cell 78187493530\nCPI0_55:\nCPI5_1:\n\t.cell -411376139330300049037104964736419422560851250125375309904609281\nCPI0_56:\n\t.cell 5261405894391250505533265397778618870761357154713600\nCPI0_57:\n\t.cell 411376139330278126512545001192646367288360505880080470916464640\nCPI0_58:\nCPI5_7:\n\t.cell 281474976710640\nCPI0_59:\nCPI5_9:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_60:\nCPI5_10:\n\t.cell 16131633323966313032505392879662622087502733647739400501128874044419589731886\nCPI0_61:\n\t.cell -27968495032494718145534005118458030046216269320169323067648217597327135735808\nCPI0_62:\n\t.cell 316912650057057350374175801344\nCPI0_63:\nCPI1_0:\nCPI3_8:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_64:\nCPI1_2:\nCPI3_9:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_65:\nCPI1_3:\n\t.cell 45445297051470054334538976711054531813460623115156291166328260229624781340672\nCPI0_66:\nCPI1_4:\n\t.cell 33213918945522163348297488160619434111254143694905912425159868126486596838753\nCPI0_67:\nCPI1_5:\nCPI3_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_68:\nCPI1_6:\nCPI3_13:\n\t.cell 10458117451882892562347801444352\nCPI0_69:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_70:\nCPI1_7:\n\t.cell -65536\nCPI0_71:\nCPI1_8:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_72:\nCPI1_9:\n\t.cell 57512143604608921510564439283751233207941214245504845198923540334447261918360\nCPI0_73:\n\t.cell -17558682924088699101477222871240024206205228086470065467308170392777997156352\nCPI0_74:\n\t.cell 37141429864842693311681201396732800727743324689067893690392419568878580924416\nCPI0_75:\n\t.cell 29944960718057624107375642112930003049312499374652257919908050116898483652956\nCPI0_76:\n\t.cell 2852213852874699394802404818944\nCPI0_77:\n\t.cell 2493279700370944929376384040888912370051478611432221668918535171438955986944\nCPI0_78:\n\t.cell -8045408313169494305023570482540166060938722075547207221457474631387033108480\nCPI0_79:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_80:\n\t.cell -57857581176409695213236102209872779059990683061306353146858681224592926015283\nCPI0_81:\n\t.cell -49094887423890183201256114569452168865077762511871401468958436336638198022144\nCPI0_82:\n\t.cell 53445207595479608024845807620945137738068221620321938031553313074585360444365\nCPI0_83:\n\t.cell 13556344904335144219580404575841007719178607367610426300924253328546163851264\nCPI0_84:\n\t.cell 316912652418240591808998408192\nCPI0_85:\n\t.cell 39935113979186017635895798218603624687911855345048459970509776968849045848064\nCPI0_86:\n\t.cell 18446744073709551487\nCPI0_87:\nCPI5_3:\nCPI7_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_88:\nCPI3_10:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_89:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_90:\nCPI3_16:\nCPI5_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_91:\n\t.cell 18446744073709551519\nCPI0_92:\n\t.cell 4406317965630193619217376654952692704854572153964832825157817575727087747072\nCPI0_93:\n\t.cell 411376139330301510538742295639337626245683966408394965837152255\nCPI0_94:\n\t.cell 411376139330301510538742295639337626245683966408394965837152256\nCPI0_95:\n\t.cell -3781049483487259127363724928551774419451248846428119418395369376671496329597\nCPI0_96:\n\t.cell 21810183676687941898416031501111231890832923466787677690904290816600886476800\nCPI0_97:\n\t.cell 37714057305872612089428949748275078505078436571074044799028069429283585400882\nCPI0_98:\n\t.cell 4203041666236517825655894425218515171812080524158975528706362663975444807680\nCPI0_99:\n\t.cell 13443652100766809285535634044982366087336539112610716046577299804222365064564\nCPI0_100:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_101:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_102:\n\t.cell 49028930250147552009423198470819527052274638315267462323702687215708847210496\nCPI0_103:\n\t.cell 38597328516464907450381791897611812109118893678090996085186089136390337159532\nCPI0_104:\n\t.cell 24440054405305269366569402256811496959409073762505157381672968839269610695612\nCPI0_105:\n\t.cell 2535301200456458802993406410752\nCPI0_106:\n\t.cell 33048860383849004559742813297059419343339852917517107368639918720169455489347\nCPI0_107:\n\t.cell 37459919685038064034459671678110462261607019371023489081125878126755520184320\nCPI0_108:\n\t.cell 47664912560014345066685778438402563143956901868464129892614585335817688842240\nCPI0_109:\n\t.cell 31354931755624933825474123435272379398210001229669056050698106585324926955384\nCPI0_110:\n\t.cell -30536698362301869620703524882028299911890425965968411027149867401609008632517\nCPI0_111:\n\t.cell 2951479051793528258560\nCPI0_112:\n\t.cell 14654901866877395549149391597484105336708473837108585137082493300548441210880\nCPI0_113:\n\t.cell 29577713123142787666065354962605974352286555015652805685687967870311454567532\nCPI0_114:\n\t.cell 49960157028345592648530624234191905822321225401495951855107091972775720517632\nCPI0_115:\n\t.cell 29577713123142787666064584957634423460416013783948686862361103426147352142703\nCPI0_116:\n\t.cell -929040498550842873106039503511486670995398791330413812844273070007987749762\nCPI0_117:\n\t.cell 44050067617828979011878578625180248225014146853756292052128471792154780368896\nCPI0_118:\n\t.cell 31869382380800184552205435258528072406063111974373436732989712343482266773536\nCPI0_119:\n\t.cell 18446744073709551583\nCPI0_120:\n\t.cell 50401303068669943775684736735757017138977288973911071831392451021110784294912\nCPI0_121:\n\t.cell 31354931755624933825474123435272379398200649977419909409797735310156391085161\nCPI0_122:\n\t.cell 50411903926665684337970802942352511357568373430877458990420567558264874598400\nCPI0_123:\n\t.cell 31354931755624933654031447922210259146857421806447843296373930569683382247534\nCPI0_124:\n\t.cell 45410484534316578986337634331317446511511056819483496063341795534749768351744\nCPI0_125:\n\t.cell 12012817915699328833973531417203937786112390740118768765973765734599120388096\nCPI0_126:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_127:\n\t.cell 18446744073709551455\nCPI0_128:\n\t.cell 42874315859549346203507810111279465289318550009285995101740832126715706143487\nCPI0_129:\n\t.cell -57063716170202876562083565350431451158439543881344030959709555547059753713078\nCPI0_130:\n\t.cell -21730033533535383155951655988610773606275113142696861782588133935670970808\nCPI0_131:\n\t.cell 26112913434594305020273244709053496060065778142800834862093344847628006235572\nCPI0_132:\n\t.cell 7605903603730559650415041839104\nCPI3_1:\nCPI5_0:\n\t.cell 18446744073709551552\nCPI3_2:\n\t.cell 37714057306076988483118529490347679105585116642029194716945419020321082336612\nCPI3_4:\n\t.cell 8589934560\nCPI3_5:\n\t.cell 17179869152\nCPI3_11:\n\t.cell 50411904420896249798390057088552747694053213439589473829759729709664159399936\nCPI3_12:\n\t.cell 37714057306076988483118529433182395293628422681814405642689417129066110394478\nCPI3_14:\n\t.cell 29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI3_15:\n\t.cell 7922816251426433759354395033600\nCPI5_4:\n\t.cell 30987587006091867475147364552653864700941135559600095664268832286174312595174\nCPI5_8:\n\t.cell 18446744073709551600\n","bytecode":{"object":""},"methodIdentifiers":{"canUpdateMerkleRoot(address)":"e57480e5","claim(address[],address[],uint256[],bytes32[][])":"71ee95c0","claimed(address,address)":"0c9cbf0e","core()":"f2f4eb26","disputeAmount()":"09454ba3","disputePeriod()":"5bf31d4d","disputeToken()":"c748d261","disputeTree(string)":"2a25dd41","disputer()":"6ac56103","endOfDisputePeriod()":"5cec892a","getMerkleRoot()":"49590657","initialize(address)":"c4d66de8","lastTree()":"cce80e7a","onlyOperatorCanClaim(address)":"14769142","operators(address,address)":"2637588e","proxiableUUID()":"52d1902d","recoverERC20(address,address,uint256)":"1171bda9","resolveDispute(bool)":"89e1e82a","revokeTree()":"95788835","setDisputeAmount(uint256)":"0d10fca3","setDisputePeriod(uint48)":"4641fdef","setDisputeToken(address)":"623b9e9d","toggleOnlyOperatorCanClaim(address)":"28827838","toggleOperator(address,address)":"bdac7ca3","toggleTrusted(address)":"7ee84349","tree()":"fd54b228","updateTree((bytes32,bytes32))":"d9c98087","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\", 1:\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\", 3:\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\", 4:\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\", 5:\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\", 12:\"contracts/Distributor.sol\", 15:\"contracts/utils/UUPSHelper.sol\"\nobject \"Distributor_4396\" {\n    code {\n        {\n            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n            mstore(64, memoryguard(0xa0))\n            if callvalue() { revert(0, 0) }\n            /// @src 4:1324:1337  \"address(this)\"\n            mstore(128, /** @src 4:1332:1336  \"this\" */ address())\n            /// @src 15:4504:4532  \"constructor() initializer {}\"\n            modifier_initializer()\n            /// @src 12:8027:8055  \"constructor() initializer {}\"\n            modifier_initializer()\n            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n            let _1 := mload(64)\n            let _2 := datasize(\"Distributor_4396_deployed\")\n            codecopy(_1, dataoffset(\"Distributor_4396_deployed\"), _2)\n            setimmutable(_1, \"588\", mload(/** @src 4:1324:1337  \"address(this)\" */ 128))\n            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n            return(_1, _2)\n        }\n        /// @ast-id 459 @src 3:3235:3741  \"modifier initializer() {...\"\n        function modifier_initializer()\n        {\n            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n            let _1 := sload(/** @src 3:3291:3304  \"_initializing\" */ 0x00)\n            /// @src 3:3336:3370  \"isTopLevelCall && _initialized < 1\"\n            let expr := /** @src 3:3290:3304  \"!_initializing\" */ iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(shr(8, _1), 0xff))\n            /// @src 3:3336:3370  \"isTopLevelCall && _initialized < 1\"\n            let expr_1 := expr\n            if expr\n            {\n                expr := /** @src 3:3354:3370  \"_initialized < 1\" */ lt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(_1, 0xff), /** @src 3:3369:3370  \"1\" */ 0x01)\n            }\n            /// @src 3:3335:3443  \"(isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1)\"\n            let expr_2 := expr\n            if iszero(expr)\n            {\n                /// @src 3:3376:3442  \"!AddressUpgradeable.isContract(address(this)) && _initialized == 1\"\n                let expr_3 := /** @src 5:1476:1499  \"account.code.length > 0\" */ iszero(/** @src 5:1476:1495  \"account.code.length\" */ extcodesize(/** @src 3:3415:3419  \"this\" */ address()))\n                /// @src 3:3376:3442  \"!AddressUpgradeable.isContract(address(this)) && _initialized == 1\"\n                if expr_3\n                {\n                    expr_3 := /** @src 3:3425:3442  \"_initialized == 1\" */ eq(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(_1, 0xff), /** @src 3:3441:3442  \"1\" */ 0x01)\n                }\n                /// @src 3:3335:3443  \"(isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1)\"\n                expr_2 := expr_3\n            }\n            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n            if iszero(expr_2)\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 46)\n                mstore(add(memPtr, 68), \"Initializable: contract is alrea\")\n                mstore(add(memPtr, 100), \"dy initialized\")\n                revert(memPtr, 132)\n            }\n            sstore(/** @src 3:3291:3304  \"_initializing\" */ 0x00, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ or(and(_1, not(255)), /** @src 3:3540:3541  \"1\" */ 0x01))\n            /// @src 3:3551:3616  \"if (isTopLevelCall) {...\"\n            if expr_1\n            {\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                sstore(/** @src 3:3291:3304  \"_initializing\" */ 0x00, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ or(and(_1, not(65535)), 257))\n            }\n            /// @src 3:3636:3735  \"if (isTopLevelCall) {...\"\n            if expr_1\n            {\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                sstore(/** @src 3:3291:3304  \"_initializing\" */ 0x00, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(sload(/** @src 3:3291:3304  \"_initializing\" */ 0x00), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ not(65280)))\n                /// @src 3:3710:3724  \"Initialized(1)\"\n                let _2 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                mstore(_2, /** @src 3:3540:3541  \"1\" */ 0x01)\n                /// @src 3:3710:3724  \"Initialized(1)\"\n                log1(_2, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32, /** @src 3:3710:3724  \"Initialized(1)\" */ 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498)\n            }\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\", 3:\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\", 4:\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\", 5:\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\", 6:\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\", 9:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 10:\"@openzeppelin/contracts/utils/Address.sol\", 11:\"@openzeppelin/contracts/utils/math/SafeCast.sol\", 12:\"contracts/Distributor.sol\", 15:\"contracts/utils/UUPSHelper.sol\"\n    object \"Distributor_4396_deployed\" {\n        code {\n            {\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x09454ba3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, sload(/** @src 12:5619:5647  \"uint256 public disputeAmount\" */ 108))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(_1, 32)\n                    }\n                    case 0x0c9cbf0e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address_23263()\n                        let value1 := abi_decode_address()\n                        let _2 := sub(shl(160, 1), 1)\n                        mstore(0, and(value0, _2))\n                        mstore(32, /** @src 12:5727:5787  \"mapping(address => mapping(address => Claim)) public claimed\" */ 109)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _3 := keccak256(0, 64)\n                        mstore(0, and(value1, _2))\n                        mstore(32, _3)\n                        let dataSlot := keccak256(0, 64)\n                        let _4 := sload(/** @src 12:5727:5787  \"mapping(address => mapping(address => Claim)) public claimed\" */ dataSlot)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _5 := sload(/** @src 12:5727:5787  \"mapping(address => mapping(address => Claim)) public claimed\" */ add(dataSlot, 1))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, and(_4, sub(shl(208, 1), 1)))\n                        mstore(add(memPos, 32), shr(208, _4))\n                        mstore(add(memPos, 64), _5)\n                        return(memPos, 96)\n                    }\n                    case 0x0d10fca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _6 := sub(shl(160, 1), 1)\n                        let cleaned := and(sload(/** @src 12:7562:7566  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _6)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _7 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        mstore(_7, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(227, 0x1c86b037))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        mstore(/** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ add(_7, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 12:7578:7588  \"msg.sender\" */ caller())\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _8 := staticcall(gas(), cleaned, _7, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ _7, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if iszero(_8)\n                        {\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            let pos := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            returndatacopy(pos, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let expr := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if _8\n                        {\n                            let _9 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32\n                            /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                            if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _9, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ returndatasize()) { _9 := returndatasize() }\n                            finalize_allocation(_7, _9)\n                            expr := abi_decode_bool_fromMemory(_7, add(_7, _9))\n                        }\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        if /** @src 12:7561:7589  \"!core.isGovernor(msg.sender)\" */ iszero(expr)\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        {\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            let _10 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            mstore(_10, shl(226, 0x3b8d9d75))\n                            revert(_10, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        /// @src 12:15124:15178  \"if (disputer != address(0)) revert UnresolvedDispute()\"\n                        if /** @src 12:15128:15150  \"disputer != address(0)\" */ iszero(iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(sload(/** @src 12:15128:15136  \"disputer\" */ 0x6b), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _6)))\n                        /// @src 12:15124:15178  \"if (disputer != address(0)) revert UnresolvedDispute()\"\n                        {\n                            /// @src 12:15159:15178  \"UnresolvedDispute()\"\n                            let _11 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:15159:15178  \"UnresolvedDispute()\"\n                            mstore(_11, shl(226, 0x0160c95d))\n                            revert(_11, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        sstore(/** @src 12:15188:15218  \"disputeAmount = _disputeAmount\" */ 0x6c, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ value)\n                        /// @src 12:15233:15269  \"DisputeAmountUpdated(_disputeAmount)\"\n                        let _12 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        mstore(_12, value)\n                        /// @src 12:15233:15269  \"DisputeAmountUpdated(_disputeAmount)\"\n                        log1(_12, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32, /** @src 12:15233:15269  \"DisputeAmountUpdated(_disputeAmount)\" */ 0x39bb629f3d59f5eddf978050e1f5fabeca2b5d02dfc9c25e84f32e7da1069db4)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0x1171bda9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_23263()\n                        let value1_1 := abi_decode_address()\n                        let value_1 := calldataload(68)\n                        let _13 := sub(shl(160, 1), 1)\n                        let cleaned_1 := and(sload(/** @src 12:7562:7566  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _13)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _14 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        mstore(_14, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(227, 0x1c86b037))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        mstore(/** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ add(_14, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 12:7578:7588  \"msg.sender\" */ caller())\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _15 := staticcall(gas(), cleaned_1, _14, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ _14, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if iszero(_15)\n                        {\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            let pos_1 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            returndatacopy(pos_1, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let expr_1 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if _15\n                        {\n                            let _16 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32\n                            /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                            if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _16, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ returndatasize()) { _16 := returndatasize() }\n                            finalize_allocation(_14, _16)\n                            expr_1 := abi_decode_bool_fromMemory(_14, add(_14, _16))\n                        }\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        if /** @src 12:7561:7589  \"!core.isGovernor(msg.sender)\" */ iszero(expr_1)\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        {\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            let _17 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            mstore(_17, shl(226, 0x3b8d9d75))\n                            revert(_17, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        let _18 := and(/** @src 12:14258:14278  \"IERC20(tokenAddress)\" */ value0_1, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _13)\n                        /// @src 12:14296:14311  \"amountToRecover\"\n                        fun_safeTransfer(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _18, /** @src 12:14296:14311  \"amountToRecover\" */ value1_1, value_1)\n                        /// @src 12:14327:14371  \"Recovered(tokenAddress, to, amountToRecover)\"\n                        let _19 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        mstore(_19, value_1)\n                        /// @src 12:14327:14371  \"Recovered(tokenAddress, to, amountToRecover)\"\n                        log3(_19, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32, /** @src 12:14327:14371  \"Recovered(tokenAddress, to, amountToRecover)\" */ 0xfff3b3844276f57024e0b42afec1a37f75db36511e43819a4f2a63ab7862b648, _18, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 12:14327:14371  \"Recovered(tokenAddress, to, amountToRecover)\" */ value1_1, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _13))\n                        return(0, 0)\n                    }\n                    case 0x14769142 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_23263(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 12:5976:6031  \"mapping(address => uint256) public onlyOperatorCanClaim\" */ 111)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _20 := sload(keccak256(0, 64))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _20)\n                        return(memPos_1, 32)\n                    }\n                    case 0x2637588e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_23263()\n                        let value1_2 := abi_decode_address()\n                        let _21 := sub(shl(160, 1), 1)\n                        mstore(0, and(value0_2, _21))\n                        mstore(32, /** @src 12:6097:6161  \"mapping(address => mapping(address => uint256)) public operators\" */ 112)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _22 := keccak256(0, 64)\n                        mstore(0, and(value1_2, _21))\n                        mstore(32, _22)\n                        let _23 := sload(keccak256(0, 64))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _23)\n                        return(memPos_2, 32)\n                    }\n                    case 0x28827838 {\n                        if callvalue() { revert(0, 0) }\n                        let _24 := 32\n                        if slt(add(calldatasize(), not(3)), _24) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_23263()\n                        let _25 := sub(shl(160, 1), 1)\n                        let _26 := and(/** @src 12:7784:7802  \"user != msg.sender\" */ value0_3, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _25)\n                        /// @src 12:7784:7842  \"user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1\"\n                        let expr_2 := /** @src 12:7784:7802  \"user != msg.sender\" */ iszero(eq(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _26, /** @src 12:7792:7802  \"msg.sender\" */ caller()))\n                        /// @src 12:7784:7842  \"user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1\"\n                        if expr_2\n                        {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(0, /** @src 12:7792:7802  \"msg.sender\" */ caller())\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(_24, /** @src 12:7806:7825  \"canUpdateMerkleRoot\" */ 0x6e)\n                            /// @src 12:7784:7842  \"user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1\"\n                            expr_2 := /** @src 12:7806:7842  \"canUpdateMerkleRoot[msg.sender] != 1\" */ iszero(eq(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sload(keccak256(0, 64)), /** @src 12:7841:7842  \"1\" */ 0x01))\n                        }\n                        /// @src 12:7784:7884  \"user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1 && !core.isGovernorOrGuardian(msg.sender)\"\n                        let expr_3 := expr_2\n                        if expr_2\n                        {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            let cleaned_2 := and(sload(/** @src 12:7847:7851  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _25)\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            let _27 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            mstore(_27, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(224, 0x521d4de9))\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(/** @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\" */ add(_27, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 12:7792:7802  \"msg.sender\" */ caller())\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            let _28 := staticcall(gas(), cleaned_2, _27, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\" */ _27, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _24)\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            if iszero(_28)\n                            {\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                let pos_2 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                returndatacopy(pos_2, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                                revert(pos_2, returndatasize())\n                            }\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            let expr_4 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            if _28\n                            {\n                                let _29 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _24\n                                /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                                if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _24, /** @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\" */ returndatasize()) { _29 := returndatasize() }\n                                finalize_allocation(_27, _29)\n                                expr_4 := abi_decode_bool_fromMemory(_27, add(_27, _29))\n                            }\n                            /// @src 12:7784:7884  \"user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1 && !core.isGovernorOrGuardian(msg.sender)\"\n                            expr_3 := /** @src 12:7846:7884  \"!core.isGovernorOrGuardian(msg.sender)\" */ iszero(expr_4)\n                        }\n                        /// @src 12:7780:7917  \"if (user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1 && !core.isGovernorOrGuardian(msg.sender))...\"\n                        if expr_3\n                        {\n                            /// @src 12:7905:7917  \"NotTrusted()\"\n                            let _30 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7905:7917  \"NotTrusted()\"\n                            mstore(_30, shl(225, 0x61153247))\n                            revert(_30, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        mstore(0, _26)\n                        mstore(_24, /** @src 12:13613:13633  \"onlyOperatorCanClaim\" */ 0x6f)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _31 := sload(keccak256(0, 64))\n                        let diff := sub(/** @src 12:13678:13679  \"1\" */ 0x01, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _31)\n                        if gt(diff, /** @src 12:13678:13679  \"1\" */ 0x01)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        mstore(0, _26)\n                        mstore(_24, /** @src 12:13613:13633  \"onlyOperatorCanClaim\" */ 0x6f)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        sstore(keccak256(0, 64), diff)\n                        /// @src 12:13705:13749  \"OperatorClaimingToggled(user, oldValue == 0)\"\n                        let _32 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        mstore(_32, /** @src 12:13735:13748  \"oldValue == 0\" */ iszero(_31))\n                        /// @src 12:13705:13749  \"OperatorClaimingToggled(user, oldValue == 0)\"\n                        log2(_32, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _24, /** @src 12:13705:13749  \"OperatorClaimingToggled(user, oldValue == 0)\" */ 0x81d714ca01079a19c106993b49b2764df6bb6abe740164ef7b77ee9c100a024a, _26)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0x2a25dd41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let array := abi_decode_available_length_string(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                        let _33 := sload(/** @src 12:12169:12177  \"disputer\" */ 0x6b)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _34 := sub(shl(160, 1), 1)\n                        /// @src 12:12165:12219  \"if (disputer != address(0)) revert UnresolvedDispute()\"\n                        if /** @src 12:12169:12191  \"disputer != address(0)\" */ iszero(iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(_33, _34)))\n                        /// @src 12:12165:12219  \"if (disputer != address(0)) revert UnresolvedDispute()\"\n                        {\n                            /// @src 12:12200:12219  \"UnresolvedDispute()\"\n                            let _35 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:12200:12219  \"UnresolvedDispute()\"\n                            mstore(_35, /** @src 12:15159:15178  \"UnresolvedDispute()\" */ shl(226, 0x0160c95d))\n                            /// @src 12:12200:12219  \"UnresolvedDispute()\"\n                            revert(_35, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        /// @src 12:12229:12295  \"if (block.timestamp >= endOfDisputePeriod) revert InvalidDispute()\"\n                        if /** @src 12:12233:12270  \"block.timestamp >= endOfDisputePeriod\" */ iszero(lt(/** @src 12:12233:12248  \"block.timestamp\" */ timestamp(), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(shr(160, _33), 0xffffffffffff)))\n                        /// @src 12:12229:12295  \"if (block.timestamp >= endOfDisputePeriod) revert InvalidDispute()\"\n                        {\n                            /// @src 12:12279:12295  \"InvalidDispute()\"\n                            let _36 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:12279:12295  \"InvalidDispute()\"\n                            mstore(_36, shl(224, 0x1a8f0395))\n                            revert(_36, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        let cleaned_3 := and(sload(/** @src 12:12312:12324  \"disputeToken\" */ 0x69), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _34)\n                        let _37 := sload(/** @src 12:12370:12383  \"disputeAmount\" */ 0x6c)\n                        /// @src 9:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                        let expr_mpos := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        /// @src 9:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                        mstore(add(expr_mpos, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(224, 0x23b872dd))\n                        /// @src 9:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\"\n                        let _38 := sub(abi_encode_address_address_uint256(add(expr_mpos, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36), /** @src 12:12343:12353  \"msg.sender\" */ caller(), /** @src 12:12363:12367  \"this\" */ address(), /** @src 9:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ _37), expr_mpos)\n                        mstore(expr_mpos, add(_38, not(31)))\n                        finalize_allocation(expr_mpos, _38)\n                        fun_callOptionalReturn(cleaned_3, expr_mpos)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        sstore(/** @src 12:12169:12177  \"disputer\" */ 0x6b, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ or(and(sload(/** @src 12:12169:12177  \"disputer\" */ 0x6b), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ shl(160, 0xffffffffffffffffffffffff)), /** @src 12:12343:12353  \"msg.sender\" */ caller()))\n                        /// @src 12:12430:12446  \"Disputed(reason)\"\n                        let _39 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        /// @src 12:12430:12446  \"Disputed(reason)\"\n                        log1(_39, sub(abi_encode_string(_39, array), _39), 0x5eca00b8ed745eee61451333090bfa56aa1f2a9e696a2aebe5f1f5b6cef6f2ff)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0x3659cfe6 {\n                        if callvalue() { revert(0, 0) }\n                        let _40 := 32\n                        if slt(add(calldatasize(), not(3)), _40) { revert(0, 0) }\n                        let value0_4 := abi_decode_address_23263()\n                        let _41 := sub(shl(160, 1), 1)\n                        /// @src 4:1881:1904  \"address(this) != __self\"\n                        let _42 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 4:1898:1904  \"__self\" */ loadimmutable(\"588\"), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _41)\n                        /// @src 4:1873:1953  \"require(address(this) != __self, \\\"Function must be called through delegatecall\\\")\"\n                        require_helper_stringliteral_36e1(/** @src 4:1881:1904  \"address(this) != __self\" */ iszero(eq(/** @src 4:1889:1893  \"this\" */ address(), /** @src 4:1881:1904  \"address(this) != __self\" */ _42)))\n                        /// @src 1:1292:1358  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                        let _43 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                        /// @src 4:1963:2050  \"require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\")\"\n                        require_helper_stringliteral_52f1(/** @src 4:1971:2001  \"_getImplementation() == __self\" */ eq(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(sload(/** @src 1:1292:1358  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _43), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _41), /** @src 4:1971:2001  \"_getImplementation() == __self\" */ _42))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let cleaned_4 := and(sload(/** @src 12:8330:8334  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _41)\n                        /// @src 15:4397:4458  \"address(_core) != address(0) && !_core.isGovernor(msg.sender)\"\n                        let expr_5 := /** @src 15:4397:4425  \"address(_core) != address(0)\" */ iszero(iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ cleaned_4))\n                        /// @src 15:4397:4458  \"address(_core) != address(0) && !_core.isGovernor(msg.sender)\"\n                        if expr_5\n                        {\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            let _44 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            mstore(_44, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(227, 0x1c86b037))\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(/** @src 15:4430:4458  \"_core.isGovernor(msg.sender)\" */ add(_44, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 15:4447:4457  \"msg.sender\" */ caller())\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            let _45 := staticcall(gas(), cleaned_4, _44, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 15:4430:4458  \"_core.isGovernor(msg.sender)\" */ _44, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _40)\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            if iszero(_45)\n                            {\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                let pos_3 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                returndatacopy(pos_3, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                                revert(pos_3, returndatasize())\n                            }\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            let expr_6 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            if _45\n                            {\n                                let _46 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _40\n                                /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                                if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _40, /** @src 15:4430:4458  \"_core.isGovernor(msg.sender)\" */ returndatasize()) { _46 := returndatasize() }\n                                finalize_allocation(_44, _46)\n                                expr_6 := abi_decode_bool_fromMemory(_44, add(_44, _46))\n                            }\n                            /// @src 15:4397:4458  \"address(_core) != address(0) && !_core.isGovernor(msg.sender)\"\n                            expr_5 := /** @src 15:4429:4458  \"!_core.isGovernor(msg.sender)\" */ iszero(expr_6)\n                        }\n                        /// @src 15:4393:4480  \"if (address(_core) != address(0) && !_core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        if expr_5\n                        {\n                            /// @src 15:4467:4480  \"NotGovernor()\"\n                            let _47 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 15:4467:4480  \"NotGovernor()\"\n                            mstore(_47, /** @src 12:7598:7611  \"NotGovernor()\" */ shl(226, 0x3b8d9d75))\n                            /// @src 15:4467:4480  \"NotGovernor()\"\n                            revert(_47, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        let memPtr := mload(64)\n                        let newFreePtr := add(memPtr, _40)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        mstore(memPtr, 0)\n                        /// @src 1:3380:3906  \"if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        switch /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ and(sload(0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143), 0xff)\n                        case /** @src 1:3380:3906  \"if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {...\" */ 0 {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            let _48 := and(/** @src 1:3531:3578  \"IERC1822ProxiableUpgradeable(newImplementation)\" */ value0_4, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _41)\n                            /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                            let _49 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                            mstore(_49, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(224, 0x52d1902d))\n                            /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                            let trySuccessCondition := staticcall(gas(), _48, _49, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4, /** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ _49, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _40)\n                            /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                            let expr_7 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                            /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                            if trySuccessCondition\n                            {\n                                let _50 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _40\n                                /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                                if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _40, /** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ returndatasize()) { _50 := returndatasize() }\n                                finalize_allocation(_49, _50)\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if slt(sub(/** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ add(_49, _50), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ _49), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _40)\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                    revert(0, 0)\n                                }\n                                /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                                expr_7 := /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ mload(_49)\n                            }\n                            /// @src 1:3527:3829  \"try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            switch iszero(trySuccessCondition)\n                            case 0 {\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if iszero(/** @src 1:3644:3672  \"slot == _IMPLEMENTATION_SLOT\" */ eq(expr_7, /** @src 1:1292:1358  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _43))\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    let memPtr_1 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                    /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                    mstore(memPtr_1, shl(229, 4594637))\n                                    mstore(add(memPtr_1, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), _40)\n                                    mstore(/** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(memPtr_1, 36), 41)\n                                    mstore(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ add(/** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ memPtr_1, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 68), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: unsupported prox\")\n                                    mstore(add(memPtr_1, 100), \"iableUUID\")\n                                    revert(memPtr_1, 132)\n                                }\n                            }\n                            default /// @src 1:3527:3829  \"try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            {\n                                /// @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                let _51 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                /// @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                mstore(_51, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                                mstore(/** @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ add(_51, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), _40)\n                                mstore(/** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(/** @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _51, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 36), 46)\n                                mstore(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ add(/** @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _51, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 68), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: new implementati\")\n                                mstore(add(/** @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _51, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 100), \"on is not UUPS\")\n                                /// @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                revert(_51, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 132)\n                            }\n                            /// @src 1:2277:2294  \"newImplementation\"\n                            fun_setImplementation(value0_4)\n                            /// @src 1:2310:2337  \"Upgraded(newImplementation)\"\n                            let _52 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:2310:2337  \"Upgraded(newImplementation)\"\n                            log2(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, 0, /** @src 1:2310:2337  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _48)\n                            /// @src 1:2659:2674  \"data.length > 0\"\n                            let _53 := iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(/** @src 1:2659:2670  \"data.length\" */ memPtr))\n                            /// @src 1:2659:2687  \"data.length > 0 || forceCall\"\n                            let expr_8 := /** @src 1:2659:2674  \"data.length > 0\" */ iszero(_53)\n                            /// @src 1:2659:2687  \"data.length > 0 || forceCall\"\n                            if _53\n                            {\n                                expr_8 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                            }\n                            /// @src 1:2655:2760  \"if (data.length > 0 || forceCall) {...\"\n                            if expr_8\n                            {\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                if /** @src 5:1476:1499  \"account.code.length > 0\" */ iszero(/** @src 5:1476:1495  \"account.code.length\" */ extcodesize(value0_4))\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                {\n                                    mstore(_52, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                    mstore(add(_52, 4), _40)\n                                    mstore(add(_52, 36), 38)\n                                    mstore(add(_52, 68), \"Address: delegate call to non-co\")\n                                    mstore(add(_52, 100), \"ntract\")\n                                    revert(_52, 132)\n                                }\n                                /// @src 1:7395:7420  \"target.delegatecall(data)\"\n                                let expr_component := delegatecall(gas(), value0_4, newFreePtr, mload(memPtr), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, 0)\n                                /// @src 1:7395:7420  \"target.delegatecall(data)\"\n                                let expr_component_mpos := extract_returndata()\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                let memPtr_2 := mload(64)\n                                finalize_allocation_31460(memPtr_2)\n                                mstore(memPtr_2, 39)\n                                mstore(add(memPtr_2, _40), \"Address: low-level delegate call\")\n                                mstore(add(memPtr_2, 64), \" failed\")\n                                /// @src 1:7437:7536  \"AddressUpgradeable.verifyCallResult(success, returndata, \\\"Address: low-level delegate call failed\\\")\"\n                                pop(fun_verifyCallResult(expr_component, expr_component_mpos, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ memPtr_2))\n                            }\n                        }\n                        default /// @src 1:3380:3906  \"if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        {\n                            /// @src 1:3478:3495  \"newImplementation\"\n                            fun_setImplementation(value0_4)\n                        }\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0x4641fdef {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_2 := calldataload(4)\n                        let _54 := and(value_2, 0xffffffffffff)\n                        if iszero(eq(value_2, _54)) { revert(0, 0) }\n                        let cleaned_5 := and(sload(/** @src 12:7562:7566  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1))\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _55 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        mstore(_55, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(227, 0x1c86b037))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        mstore(/** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ add(_55, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 12:7578:7588  \"msg.sender\" */ caller())\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _56 := staticcall(gas(), cleaned_5, _55, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ _55, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if iszero(_56)\n                        {\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            let pos_4 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            returndatacopy(pos_4, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let expr_9 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if _56\n                        {\n                            let _57 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32\n                            /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                            if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _57, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ returndatasize()) { _57 := returndatasize() }\n                            finalize_allocation(_55, _57)\n                            expr_9 := abi_decode_bool_fromMemory(_55, add(_55, _57))\n                        }\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        if /** @src 12:7561:7589  \"!core.isGovernor(msg.sender)\" */ iszero(expr_9)\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        {\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            let _58 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            mstore(_58, shl(226, 0x3b8d9d75))\n                            revert(_58, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        let _59 := sload(/** @src 12:14549:14587  \"disputePeriod = uint48(_disputePeriod)\" */ 0x6b)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        sstore(/** @src 12:14549:14587  \"disputePeriod = uint48(_disputePeriod)\" */ 0x6b, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ or(and(_59, sub(shl(208, 1), 1)), and(shl(208, value_2), shl(208, 0xffffffffffff))))\n                        /// @src 12:14602:14638  \"DisputePeriodUpdated(_disputePeriod)\"\n                        let _60 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        mstore(_60, _54)\n                        /// @src 12:14602:14638  \"DisputePeriodUpdated(_disputePeriod)\"\n                        log1(_60, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32, /** @src 12:14602:14638  \"DisputePeriodUpdated(_disputePeriod)\" */ 0xfdf22e84af74bd4ab6b9646f6370a02bc886ed6ac25882db14e4ebf4b8e3bc7e)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0x49590657 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := fun_getMerkleRoot()\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, ret)\n                        return(memPos_3, 32)\n                    }\n                    case 0x4f1ef286 {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_5 := abi_decode_address_23263()\n                        let _61 := 36\n                        let offset_1 := calldataload(_61)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(0, 0) }\n                        let array_1 := abi_decode_available_length_string(add(offset_1, _61), calldataload(add(4, offset_1)), calldatasize())\n                        let _62 := sub(shl(160, 1), 1)\n                        /// @src 4:1881:1904  \"address(this) != __self\"\n                        let _63 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 4:1898:1904  \"__self\" */ loadimmutable(\"588\"), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _62)\n                        /// @src 4:1873:1953  \"require(address(this) != __self, \\\"Function must be called through delegatecall\\\")\"\n                        require_helper_stringliteral_36e1(/** @src 4:1881:1904  \"address(this) != __self\" */ iszero(eq(/** @src 4:1889:1893  \"this\" */ address(), /** @src 4:1881:1904  \"address(this) != __self\" */ _63)))\n                        /// @src 1:1292:1358  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                        let _64 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                        /// @src 4:1963:2050  \"require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\")\"\n                        require_helper_stringliteral_52f1(/** @src 4:1971:2001  \"_getImplementation() == __self\" */ eq(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(sload(/** @src 1:1292:1358  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _62), /** @src 4:1971:2001  \"_getImplementation() == __self\" */ _63))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let cleaned_6 := and(sload(/** @src 12:8330:8334  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _62)\n                        /// @src 15:4397:4458  \"address(_core) != address(0) && !_core.isGovernor(msg.sender)\"\n                        let expr_10 := /** @src 15:4397:4425  \"address(_core) != address(0)\" */ iszero(iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ cleaned_6))\n                        /// @src 15:4397:4458  \"address(_core) != address(0) && !_core.isGovernor(msg.sender)\"\n                        if expr_10\n                        {\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            let _65 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            mstore(_65, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(227, 0x1c86b037))\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(/** @src 15:4430:4458  \"_core.isGovernor(msg.sender)\" */ add(_65, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 15:4447:4457  \"msg.sender\" */ caller())\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            let _66 := staticcall(gas(), cleaned_6, _65, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _61, /** @src 15:4430:4458  \"_core.isGovernor(msg.sender)\" */ _65, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            if iszero(_66)\n                            {\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                let pos_5 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                returndatacopy(pos_5, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                                revert(pos_5, returndatasize())\n                            }\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            let expr_11 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                            /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                            if _66\n                            {\n                                let _67 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32\n                                /// @src 15:4430:4458  \"_core.isGovernor(msg.sender)\"\n                                if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _67, /** @src 15:4430:4458  \"_core.isGovernor(msg.sender)\" */ returndatasize()) { _67 := returndatasize() }\n                                finalize_allocation(_65, _67)\n                                expr_11 := abi_decode_bool_fromMemory(_65, add(_65, _67))\n                            }\n                            /// @src 15:4397:4458  \"address(_core) != address(0) && !_core.isGovernor(msg.sender)\"\n                            expr_10 := /** @src 15:4429:4458  \"!_core.isGovernor(msg.sender)\" */ iszero(expr_11)\n                        }\n                        /// @src 15:4393:4480  \"if (address(_core) != address(0) && !_core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        if expr_10\n                        {\n                            /// @src 15:4467:4480  \"NotGovernor()\"\n                            let _68 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 15:4467:4480  \"NotGovernor()\"\n                            mstore(_68, /** @src 12:7598:7611  \"NotGovernor()\" */ shl(226, 0x3b8d9d75))\n                            /// @src 15:4467:4480  \"NotGovernor()\"\n                            revert(_68, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        /// @src 1:3380:3906  \"if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        switch /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ and(sload(0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143), 0xff)\n                        case /** @src 1:3380:3906  \"if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {...\" */ 0 {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            let _69 := and(/** @src 1:3531:3578  \"IERC1822ProxiableUpgradeable(newImplementation)\" */ value0_5, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _62)\n                            /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                            let _70 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                            mstore(_70, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(224, 0x52d1902d))\n                            /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                            let _71 := 32\n                            let trySuccessCondition_1 := staticcall(gas(), _69, _70, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4, /** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ _70, _71)\n                            let expr_12 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                            /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                            if trySuccessCondition_1\n                            {\n                                let _72 := _71\n                                if gt(_71, returndatasize()) { _72 := returndatasize() }\n                                finalize_allocation(_70, _72)\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if slt(sub(/** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ add(_70, _72), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ _70), /** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ _71)\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                    revert(0, 0)\n                                }\n                                /// @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\"\n                                expr_12 := /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ mload(_70)\n                            }\n                            /// @src 1:3527:3829  \"try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            switch iszero(trySuccessCondition_1)\n                            case 0 {\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                if iszero(/** @src 1:3644:3672  \"slot == _IMPLEMENTATION_SLOT\" */ eq(expr_12, /** @src 1:1292:1358  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _64))\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                {\n                                    let memPtr_3 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                    /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                    mstore(memPtr_3, shl(229, 4594637))\n                                    mstore(add(memPtr_3, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ _71)\n                                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                    mstore(/** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(memPtr_3, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _61), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 41)\n                                    mstore(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ add(/** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ memPtr_3, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 68), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: unsupported prox\")\n                                    mstore(add(memPtr_3, 100), \"iableUUID\")\n                                    revert(memPtr_3, 132)\n                                }\n                            }\n                            default /// @src 1:3527:3829  \"try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                            {\n                                /// @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                let _73 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                /// @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                mstore(_73, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                                mstore(/** @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ add(_73, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ _71)\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                mstore(/** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ add(/** @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _73, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _61), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 46)\n                                mstore(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ add(/** @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _73, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 68), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ \"ERC1967Upgrade: new implementati\")\n                                mstore(add(/** @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\" */ _73, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 100), \"on is not UUPS\")\n                                /// @src 1:3758:3814  \"revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\")\"\n                                revert(_73, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 132)\n                            }\n                            /// @src 1:2277:2294  \"newImplementation\"\n                            fun_setImplementation(value0_5)\n                            /// @src 1:2310:2337  \"Upgraded(newImplementation)\"\n                            let _74 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:2310:2337  \"Upgraded(newImplementation)\"\n                            log2(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, 0, /** @src 1:2310:2337  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _69)\n                            /// @src 1:2659:2674  \"data.length > 0\"\n                            let _75 := iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(/** @src 1:2659:2670  \"data.length\" */ array_1))\n                            /// @src 1:2659:2687  \"data.length > 0 || forceCall\"\n                            let expr_13 := /** @src 1:2659:2674  \"data.length > 0\" */ iszero(_75)\n                            /// @src 1:2659:2687  \"data.length > 0 || forceCall\"\n                            if _75\n                            {\n                                expr_13 := /** @src 4:3973:3977  \"true\" */ 0x01\n                            }\n                            /// @src 1:2655:2760  \"if (data.length > 0 || forceCall) {...\"\n                            if expr_13\n                            {\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                if /** @src 5:1476:1499  \"account.code.length > 0\" */ iszero(/** @src 5:1476:1495  \"account.code.length\" */ extcodesize(value0_5))\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                {\n                                    mstore(_74, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                    mstore(add(_74, 4), /** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ _71)\n                                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                    mstore(add(_74, _61), 38)\n                                    mstore(add(_74, 68), \"Address: delegate call to non-co\")\n                                    mstore(add(_74, 100), \"ntract\")\n                                    revert(_74, 132)\n                                }\n                                /// @src 1:7395:7420  \"target.delegatecall(data)\"\n                                let expr_component_1 := delegatecall(gas(), value0_5, add(array_1, /** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ _71), /** @src 1:7395:7420  \"target.delegatecall(data)\" */ mload(array_1), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, 0)\n                                /// @src 1:7395:7420  \"target.delegatecall(data)\"\n                                let expr_component_mpos_1 := extract_returndata()\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                let memPtr_4 := mload(64)\n                                finalize_allocation_31460(memPtr_4)\n                                mstore(memPtr_4, 39)\n                                mstore(add(memPtr_4, /** @src 1:3531:3594  \"IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID()\" */ _71), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ \"Address: low-level delegate call\")\n                                mstore(add(memPtr_4, 64), \" failed\")\n                                /// @src 1:7437:7536  \"AddressUpgradeable.verifyCallResult(success, returndata, \\\"Address: low-level delegate call failed\\\")\"\n                                pop(fun_verifyCallResult(expr_component_1, expr_component_mpos_1, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ memPtr_4))\n                            }\n                        }\n                        default /// @src 1:3380:3906  \"if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {...\"\n                        {\n                            /// @src 1:3478:3495  \"newImplementation\"\n                            fun_setImplementation(value0_5)\n                        }\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0x52d1902d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        if iszero(/** @src 4:2316:2339  \"address(this) == __self\" */ eq(/** @src 4:2324:2328  \"this\" */ address(), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 4:2333:2339  \"__self\" */ loadimmutable(\"588\"), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1))))\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), 56)\n                            mstore(add(memPtr_5, 68), \"UUPSUpgradeable: must not be cal\")\n                            mstore(add(memPtr_5, 100), \"led through delegatecall\")\n                            revert(memPtr_5, 132)\n                        }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 1:1292:1358  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x5bf31d4d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _76 := shr(208, sload(/** @src 12:5524:5551  \"uint48 public disputePeriod\" */ 107))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _76)\n                        return(memPos_5, 32)\n                    }\n                    case 0x5cec892a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_3 := and(shr(160, sload(/** @src 12:5396:5428  \"uint48 public endOfDisputePeriod\" */ 107)), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0xffffffffffff)\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, value_3)\n                        return(memPos_6, 32)\n                    }\n                    case 0x623b9e9d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_4 := calldataload(4)\n                        let _77 := sub(shl(160, 1), 1)\n                        let _78 := and(value_4, _77)\n                        if iszero(eq(value_4, _78)) { revert(0, 0) }\n                        let cleaned_7 := and(sload(/** @src 12:7562:7566  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _77)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _79 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        mstore(_79, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(227, 0x1c86b037))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        mstore(/** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ add(_79, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 12:7578:7588  \"msg.sender\" */ caller())\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _80 := staticcall(gas(), cleaned_7, _79, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ _79, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if iszero(_80)\n                        {\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            let pos_6 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            returndatacopy(pos_6, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let expr_14 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if _80\n                        {\n                            let _81 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32\n                            /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                            if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _81, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ returndatasize()) { _81 := returndatasize() }\n                            finalize_allocation(_79, _81)\n                            expr_14 := abi_decode_bool_fromMemory(_79, add(_79, _81))\n                        }\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        if /** @src 12:7561:7589  \"!core.isGovernor(msg.sender)\" */ iszero(expr_14)\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        {\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            let _82 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            mstore(_82, shl(226, 0x3b8d9d75))\n                            revert(_82, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        /// @src 12:14795:14849  \"if (disputer != address(0)) revert UnresolvedDispute()\"\n                        if /** @src 12:14799:14821  \"disputer != address(0)\" */ iszero(iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(sload(/** @src 12:14799:14807  \"disputer\" */ 0x6b), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _77)))\n                        /// @src 12:14795:14849  \"if (disputer != address(0)) revert UnresolvedDispute()\"\n                        {\n                            /// @src 12:14830:14849  \"UnresolvedDispute()\"\n                            let _83 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:14830:14849  \"UnresolvedDispute()\"\n                            mstore(_83, /** @src 12:15159:15178  \"UnresolvedDispute()\" */ shl(226, 0x0160c95d))\n                            /// @src 12:14830:14849  \"UnresolvedDispute()\"\n                            revert(_83, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        sstore(/** @src 12:14859:14887  \"disputeToken = _disputeToken\" */ 0x69, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ or(and(sload(/** @src 12:14859:14887  \"disputeToken = _disputeToken\" */ 0x69), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ shl(160, 0xffffffffffffffffffffffff)), _78))\n                        /// @src 12:14902:14945  \"DisputeTokenUpdated(address(_disputeToken))\"\n                        log2(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, 0, /** @src 12:14902:14945  \"DisputeTokenUpdated(address(_disputeToken))\" */ 0x1db8d6629941dcb63d5e0c927b89c174c714e139a4b9107a49de839d755f5d74, _78)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0x6ac56103 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_5 := and(sload(/** @src 12:5310:5333  \"address public disputer\" */ 107), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, value_5)\n                        return(memPos_7, 32)\n                    }\n                    case 0x71ee95c0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let offset_2 := calldataload(4)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        let value0_6, value1_3 := abi_decode_array_address_dyn_calldata(add(4, offset_2), calldatasize())\n                        let _84 := 36\n                        let offset_3 := calldataload(_84)\n                        if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n                        let value2, value3 := abi_decode_array_address_dyn_calldata(add(4, offset_3), calldatasize())\n                        let offset_4 := calldataload(68)\n                        if gt(offset_4, 0xffffffffffffffff) { revert(0, 0) }\n                        let value4, value5 := abi_decode_array_address_dyn_calldata(add(4, offset_4), calldatasize())\n                        let offset_5 := calldataload(100)\n                        if gt(offset_5, 0xffffffffffffffff) { revert(0, 0) }\n                        let value6, value7 := abi_decode_array_address_dyn_calldata(add(4, offset_5), calldatasize())\n                        /// @src 12:9244:9304  \"usersLength == 0 ||...\"\n                        let expr_15 := /** @src 12:9244:9260  \"usersLength == 0\" */ iszero(value1_3)\n                        /// @src 12:9244:9304  \"usersLength == 0 ||...\"\n                        if iszero(expr_15)\n                        {\n                            expr_15 := /** @src 12:9276:9304  \"usersLength != tokens.length\" */ iszero(eq(value1_3, /** @src 12:9291:9304  \"tokens.length\" */ value3))\n                        }\n                        /// @src 12:9244:9349  \"usersLength == 0 ||...\"\n                        let expr_16 := expr_15\n                        if iszero(expr_15)\n                        {\n                            expr_16 := /** @src 12:9320:9349  \"usersLength != amounts.length\" */ iszero(eq(value1_3, /** @src 12:9335:9349  \"amounts.length\" */ value5))\n                        }\n                        /// @src 12:9244:9393  \"usersLength == 0 ||...\"\n                        let expr_17 := expr_16\n                        if iszero(expr_16)\n                        {\n                            expr_17 := /** @src 12:9365:9393  \"usersLength != proofs.length\" */ iszero(eq(value1_3, /** @src 12:9380:9393  \"proofs.length\" */ value7))\n                        }\n                        /// @src 12:9227:9427  \"if (...\"\n                        if expr_17\n                        {\n                            /// @src 12:9411:9427  \"InvalidLengths()\"\n                            let _85 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:9411:9427  \"InvalidLengths()\"\n                            mstore(_85, shl(224, 0x1df89e8b))\n                            revert(_85, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        /// @src 12:9443:9452  \"uint256 i\"\n                        let var_i := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                        /// @src 12:9438:10317  \"for (uint256 i; i < usersLength; ) {...\"\n                        for { }\n                        /** @src 12:9454:9469  \"i < usersLength\" */ lt(var_i, value1_3)\n                        /// @src 12:9443:9452  \"uint256 i\"\n                        { }\n                        {\n                            /// @src 12:9502:9510  \"users[i]\"\n                            let expr_18 := read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(value0_6, value1_3, var_i))\n                            /// @src 12:9540:9549  \"tokens[i]\"\n                            let expr_19 := read_from_calldatat_address(calldata_array_index_access_address_dyn_calldata(value2, value3, var_i))\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            let value_6 := calldataload(/** @src 12:9580:9590  \"amounts[i]\" */ calldata_array_index_access_address_dyn_calldata(value4, value5, var_i))\n                            /// @src 12:9668:9722  \"msg.sender != user && operators[user][msg.sender] == 0\"\n                            let expr_20 := /** @src 12:9668:9686  \"msg.sender != user\" */ iszero(eq(/** @src 12:9668:9678  \"msg.sender\" */ caller(), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 12:9668:9686  \"msg.sender != user\" */ expr_18, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1))))\n                            /// @src 12:9668:9722  \"msg.sender != user && operators[user][msg.sender] == 0\"\n                            if expr_20\n                            {\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                mstore(0, and(/** @src 12:9668:9686  \"msg.sender != user\" */ expr_18, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1)))\n                                let _86 := 32\n                                mstore(_86, /** @src 12:9690:9699  \"operators\" */ 0x70)\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                let _87 := keccak256(0, 64)\n                                mstore(0, /** @src 12:9668:9678  \"msg.sender\" */ caller())\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                mstore(_86, _87)\n                                /// @src 12:9668:9722  \"msg.sender != user && operators[user][msg.sender] == 0\"\n                                expr_20 := /** @src 12:9690:9722  \"operators[user][msg.sender] == 0\" */ iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sload(keccak256(0, 64)))\n                            }\n                            /// @src 12:9664:9747  \"if (msg.sender != user && operators[user][msg.sender] == 0) revert NotWhitelisted()\"\n                            if expr_20\n                            {\n                                /// @src 12:9731:9747  \"NotWhitelisted()\"\n                                let _88 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                /// @src 12:9731:9747  \"NotWhitelisted()\"\n                                mstore(_88, shl(227, 0x0b094f27))\n                                revert(_88, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                            }\n                            /// @src 12:9818:9849  \"abi.encode(user, token, amount)\"\n                            let expr_mpos_1 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:9818:9849  \"abi.encode(user, token, amount)\"\n                            let _89 := add(expr_mpos_1, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                            /// @src 12:9818:9849  \"abi.encode(user, token, amount)\"\n                            let _90 := sub(abi_encode_address_address_uint256(_89, expr_18, expr_19, value_6), expr_mpos_1)\n                            mstore(expr_mpos_1, add(_90, /** @src 9:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ not(31)))\n                            /// @src 12:9818:9849  \"abi.encode(user, token, amount)\"\n                            finalize_allocation(expr_mpos_1, _90)\n                            /// @src 12:9808:9850  \"keccak256(abi.encode(user, token, amount))\"\n                            let expr_21 := keccak256(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _89, mload(/** @src 12:9808:9850  \"keccak256(abi.encode(user, token, amount))\" */ expr_mpos_1))\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            if iszero(lt(var_i, value7))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x32)\n                                revert(0, _84)\n                            }\n                            if iszero(slt(calldataload(add(value6, shl(5, var_i))), add(sub(calldatasize(), value6), not(30)))) { revert(0, 0) }\n                            if gt(calldataload(add(value6, calldataload(add(value6, shl(5, var_i))))), 0xffffffffffffffff) { revert(0, 0) }\n                            if sgt(add(add(value6, calldataload(add(value6, shl(5, var_i)))), 32), sub(calldatasize(), shl(5, calldataload(add(value6, calldataload(add(value6, shl(5, var_i)))))))) { revert(0, 0) }\n                            let memPtr_6 := mload(64)\n                            finalize_allocation(memPtr_6, add(shl(5, calldataload(add(value6, calldataload(add(value6, shl(5, var_i)))))), 32))\n                            let dst := memPtr_6\n                            mstore(memPtr_6, calldataload(add(value6, calldataload(add(value6, shl(5, var_i))))))\n                            dst := add(memPtr_6, 32)\n                            if gt(add(add(add(value6, calldataload(add(value6, shl(5, var_i)))), shl(5, calldataload(add(value6, calldataload(add(value6, shl(5, var_i))))))), 32), calldatasize()) { revert(0, 0) }\n                            let src := add(add(value6, calldataload(add(value6, shl(5, var_i)))), 32)\n                            for { }\n                            lt(src, add(add(add(value6, calldataload(add(value6, shl(5, var_i)))), shl(5, calldataload(add(value6, calldataload(add(value6, shl(5, var_i))))))), 32))\n                            { src := add(src, 32) }\n                            {\n                                mstore(dst, calldataload(src))\n                                dst := add(dst, 32)\n                            }\n                            /// @src 12:16452:16478  \"bytes32 currentHash = leaf\"\n                            let var_currentHash := expr_21\n                            /// @src 12:16510:16522  \"proof.length\"\n                            let expr_22 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(/** @src 12:16510:16522  \"proof.length\" */ memPtr_6)\n                            /// @src 12:16537:16546  \"uint256 i\"\n                            let var_i_1 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                            /// @src 12:16532:16866  \"for (uint256 i; i < proofLength; ) {...\"\n                            for { }\n                            /** @src 12:16548:16563  \"i < proofLength\" */ lt(var_i_1, expr_22)\n                            /// @src 12:16537:16546  \"uint256 i\"\n                            { }\n                            {\n                                /// @src 12:16581:16797  \"if (currentHash < proof[i]) {...\"\n                                switch /** @src 12:16585:16607  \"currentHash < proof[i]\" */ lt(var_currentHash, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(/** @src 12:16599:16607  \"proof[i]\" */ memory_array_index_access_bytes32_dyn(memPtr_6, var_i_1)))\n                                case /** @src 12:16581:16797  \"if (currentHash < proof[i]) {...\" */ 0 {\n                                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                    let _91 := mload(/** @src 12:16759:16767  \"proof[i]\" */ memory_array_index_access_bytes32_dyn(memPtr_6, var_i_1))\n                                    /// @src 12:16748:16781  \"abi.encode(proof[i], currentHash)\"\n                                    let expr_mpos_2 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                    /// @src 12:16748:16781  \"abi.encode(proof[i], currentHash)\"\n                                    let _92 := add(expr_mpos_2, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                                    mstore(_92, _91)\n                                    mstore(add(/** @src 12:16748:16781  \"abi.encode(proof[i], currentHash)\" */ expr_mpos_2, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 64), var_currentHash)\n                                    /// @src 12:16748:16781  \"abi.encode(proof[i], currentHash)\"\n                                    mstore(expr_mpos_2, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 64)\n                                    /// @src 12:16748:16781  \"abi.encode(proof[i], currentHash)\"\n                                    finalize_allocation_31460(expr_mpos_2)\n                                    /// @src 12:16724:16782  \"currentHash = keccak256(abi.encode(proof[i], currentHash))\"\n                                    var_currentHash := /** @src 12:16738:16782  \"keccak256(abi.encode(proof[i], currentHash))\" */ keccak256(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _92, mload(/** @src 12:16738:16782  \"keccak256(abi.encode(proof[i], currentHash))\" */ expr_mpos_2))\n                                }\n                                default /// @src 12:16581:16797  \"if (currentHash < proof[i]) {...\"\n                                {\n                                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                    let _93 := mload(/** @src 12:16675:16683  \"proof[i]\" */ memory_array_index_access_bytes32_dyn(memPtr_6, var_i_1))\n                                    /// @src 12:16651:16684  \"abi.encode(currentHash, proof[i])\"\n                                    let expr_mpos_3 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                    /// @src 12:16651:16684  \"abi.encode(currentHash, proof[i])\"\n                                    let _94 := add(expr_mpos_3, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                                    mstore(_94, var_currentHash)\n                                    mstore(add(/** @src 12:16651:16684  \"abi.encode(currentHash, proof[i])\" */ expr_mpos_3, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 64), _93)\n                                    /// @src 12:16651:16684  \"abi.encode(currentHash, proof[i])\"\n                                    mstore(expr_mpos_3, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 64)\n                                    /// @src 12:16651:16684  \"abi.encode(currentHash, proof[i])\"\n                                    finalize_allocation_31460(expr_mpos_3)\n                                    /// @src 12:16627:16685  \"currentHash = keccak256(abi.encode(currentHash, proof[i]))\"\n                                    var_currentHash := /** @src 12:16641:16685  \"keccak256(abi.encode(currentHash, proof[i]))\" */ keccak256(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _94, mload(/** @src 12:16641:16685  \"keccak256(abi.encode(currentHash, proof[i]))\" */ expr_mpos_3))\n                                }\n                                /// @src 12:16838:16841  \"++i\"\n                                var_i_1 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ add(/** @src 12:16838:16841  \"++i\" */ var_i_1, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 1)\n                            }\n                            /// @src 12:16890:16905  \"getMerkleRoot()\"\n                            let expr_23 := fun_getMerkleRoot()\n                            /// @src 12:16915:16972  \"if (root == bytes32(0)) revert InvalidUninitializedRoot()\"\n                            if /** @src 12:16919:16937  \"root == bytes32(0)\" */ iszero(expr_23)\n                            /// @src 12:16915:16972  \"if (root == bytes32(0)) revert InvalidUninitializedRoot()\"\n                            {\n                                /// @src 12:16946:16972  \"InvalidUninitializedRoot()\"\n                                let _95 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                /// @src 12:16946:16972  \"InvalidUninitializedRoot()\"\n                                mstore(_95, shl(227, 0x01295acb))\n                                revert(_95, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                            }\n                            /// @src 12:9864:9921  \"if (!_verifyProof(leaf, proofs[i])) revert InvalidProof()\"\n                            if /** @src 12:9868:9898  \"!_verifyProof(leaf, proofs[i])\" */ iszero(/** @src 12:16989:17008  \"currentHash == root\" */ eq(var_currentHash, expr_23))\n                            /// @src 12:9864:9921  \"if (!_verifyProof(leaf, proofs[i])) revert InvalidProof()\"\n                            {\n                                /// @src 12:9907:9921  \"InvalidProof()\"\n                                let _96 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                /// @src 12:9907:9921  \"InvalidProof()\"\n                                mstore(_96, shl(224, 0x09bde339))\n                                revert(_96, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                            }\n                            mstore(0, and(/** @src 12:9668:9686  \"msg.sender != user\" */ expr_18, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1)))\n                            mstore(32, /** @src 12:10006:10013  \"claimed\" */ 0x6d)\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            let _97 := keccak256(0, 64)\n                            mstore(0, and(expr_19, sub(shl(160, 1), 1)))\n                            mstore(32, _97)\n                            let diff_1 := sub(value_6, and(sload(keccak256(0, 64)), sub(shl(208, 1), 1)))\n                            if gt(diff_1, value_6)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, _84)\n                            }\n                            if /** @src 11:3962:3988  \"value <= type(uint208).max\" */ gt(value_6, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(208, 1), 1))\n                            {\n                                let memPtr_7 := mload(64)\n                                mstore(memPtr_7, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                mstore(add(memPtr_7, 4), 32)\n                                mstore(add(memPtr_7, _84), 39)\n                                mstore(add(memPtr_7, 68), \"SafeCast: value doesn't fit in 2\")\n                                mstore(add(memPtr_7, 100), \"08 bits\")\n                                revert(memPtr_7, 132)\n                            }\n                            /// @src 12:10129:10144  \"getMerkleRoot()\"\n                            let expr_24 := fun_getMerkleRoot()\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            let memPtr_8 := mload(64)\n                            if or(gt(add(memPtr_8, 96), 0xffffffffffffffff), lt(add(memPtr_8, 96), memPtr_8))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, _84)\n                            }\n                            mstore(64, add(memPtr_8, 96))\n                            mstore(memPtr_8, and(/** @src 11:4049:4063  \"uint208(value)\" */ value_6, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(208, 1), 1)))\n                            /// @src 12:10070:10145  \"Claim(SafeCast.toUint208(amount), uint48(block.timestamp), getMerkleRoot())\"\n                            let _98 := add(memPtr_8, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                            mstore(_98, and(/** @src 12:10111:10126  \"block.timestamp\" */ timestamp(), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0xffffffffffff))\n                            /// @src 12:10070:10145  \"Claim(SafeCast.toUint208(amount), uint48(block.timestamp), getMerkleRoot())\"\n                            let _99 := add(memPtr_8, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 64)\n                            mstore(_99, expr_24)\n                            mstore(0, and(/** @src 12:9668:9686  \"msg.sender != user\" */ expr_18, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1)))\n                            mstore(32, /** @src 12:10006:10013  \"claimed\" */ 0x6d)\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            let _100 := keccak256(0, 64)\n                            mstore(0, and(expr_19, sub(shl(160, 1), 1)))\n                            mstore(32, _100)\n                            let dataSlot_1 := keccak256(0, 64)\n                            let _101 := and(mload(memPtr_8), sub(shl(208, 1), 1))\n                            sstore(dataSlot_1, or(_101, and(shl(208, mload(_98)), shl(208, 0xffffffffffff))))\n                            let _102 := 1\n                            sstore(add(dataSlot_1, _102), mload(_99))\n                            /// @src 12:10193:10199  \"toSend\"\n                            fun_safeTransfer(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(expr_19, sub(shl(160, 1), 1)), /** @src 12:10193:10199  \"toSend\" */ expr_18, diff_1)\n                            /// @src 12:10219:10247  \"Claimed(user, token, toSend)\"\n                            let _103 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            mstore(_103, diff_1)\n                            /// @src 12:10219:10247  \"Claimed(user, token, toSend)\"\n                            log3(_103, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32, /** @src 12:10219:10247  \"Claimed(user, token, toSend)\" */ 0xf7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 12:9668:9686  \"msg.sender != user\" */ expr_18, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1)), and(expr_19, sub(shl(160, 1), 1)))\n                            /// @src 12:10289:10292  \"++i\"\n                            var_i := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ add(/** @src 12:10289:10292  \"++i\" */ var_i, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _102)\n                        }\n                        return(0, 0)\n                    }\n                    case 0x7ee84349 {\n                        if callvalue() { revert(0, 0) }\n                        let _104 := 32\n                        if slt(add(calldatasize(), not(3)), _104) { revert(0, 0) }\n                        let value0_7 := abi_decode_address_23263()\n                        let _105 := sub(shl(160, 1), 1)\n                        let cleaned_8 := and(sload(/** @src 12:7562:7566  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _105)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _106 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        mstore(_106, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(227, 0x1c86b037))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        mstore(/** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ add(_106, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 12:7578:7588  \"msg.sender\" */ caller())\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _107 := staticcall(gas(), cleaned_8, _106, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ _106, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _104)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if iszero(_107)\n                        {\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            let pos_7 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            returndatacopy(pos_7, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                            revert(pos_7, returndatasize())\n                        }\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let expr_25 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if _107\n                        {\n                            let _108 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _104\n                            /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                            if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _104, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ returndatasize()) { _108 := returndatasize() }\n                            finalize_allocation(_106, _108)\n                            expr_25 := abi_decode_bool_fromMemory(_106, add(_106, _108))\n                        }\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        if /** @src 12:7561:7589  \"!core.isGovernor(msg.sender)\" */ iszero(expr_25)\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        {\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            let _109 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            mstore(_109, shl(226, 0x3b8d9d75))\n                            revert(_109, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        let _110 := and(value0_7, _105)\n                        mstore(0, _110)\n                        mstore(_104, /** @src 12:10881:10900  \"canUpdateMerkleRoot\" */ 0x6e)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let diff_2 := sub(/** @src 12:10877:10878  \"1\" */ 0x01, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sload(keccak256(0, 64)))\n                        if gt(diff_2, /** @src 12:10877:10878  \"1\" */ 0x01)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        mstore(0, _110)\n                        mstore(_104, /** @src 12:10881:10900  \"canUpdateMerkleRoot\" */ 0x6e)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        sstore(keccak256(0, 64), diff_2)\n                        /// @src 12:10970:11009  \"TrustedToggled(eoa, trustedStatus == 1)\"\n                        let _111 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        mstore(_111, /** @src 12:10990:11008  \"trustedStatus == 1\" */ eq(diff_2, /** @src 12:10877:10878  \"1\" */ 0x01))\n                        /// @src 12:10970:11009  \"TrustedToggled(eoa, trustedStatus == 1)\"\n                        log2(_111, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _104, /** @src 12:10970:11009  \"TrustedToggled(eoa, trustedStatus == 1)\" */ 0x7628ea5f6112a16b36a8239aa208395a8e8f221688cfb3a5461faffb9700abcd, _110)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0x89e1e82a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_7 := calldataload(4)\n                        let _112 := iszero(iszero(value_7))\n                        if iszero(eq(value_7, _112)) { revert(0, 0) }\n                        let _113 := sub(shl(160, 1), 1)\n                        let cleaned_9 := and(sload(/** @src 12:7562:7566  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _113)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _114 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        mstore(_114, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(227, 0x1c86b037))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        mstore(/** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ add(_114, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 12:7578:7588  \"msg.sender\" */ caller())\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _115 := staticcall(gas(), cleaned_9, _114, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ _114, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if iszero(_115)\n                        {\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            let pos_8 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            returndatacopy(pos_8, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                            revert(pos_8, returndatasize())\n                        }\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let expr_26 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if _115\n                        {\n                            let _116 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32\n                            /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                            if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _116, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ returndatasize()) { _116 := returndatasize() }\n                            finalize_allocation(_114, _116)\n                            expr_26 := abi_decode_bool_fromMemory(_114, add(_114, _116))\n                        }\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        if /** @src 12:7561:7589  \"!core.isGovernor(msg.sender)\" */ iszero(expr_26)\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        {\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            let _117 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            mstore(_117, shl(226, 0x3b8d9d75))\n                            revert(_117, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        /// @src 12:12634:12642  \"disputer\"\n                        let _118 := 0x6b\n                        /// @src 12:12630:12676  \"if (disputer == address(0)) revert NoDispute()\"\n                        if /** @src 12:12634:12656  \"disputer == address(0)\" */ iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(sload(/** @src 12:12634:12642  \"disputer\" */ _118), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _113))\n                        /// @src 12:12630:12676  \"if (disputer == address(0)) revert NoDispute()\"\n                        {\n                            /// @src 12:12665:12676  \"NoDispute()\"\n                            let _119 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:12665:12676  \"NoDispute()\"\n                            mstore(_119, shl(227, 0x126ea8e9))\n                            revert(_119, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        /// @src 12:12686:13073  \"if (valid) {...\"\n                        switch value_7\n                        case 0 {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            let cleaned_10 := and(sload(/** @src 12:12930:12942  \"disputeToken\" */ 0x69), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _113)\n                            /// @src 12:12969:12982  \"disputeAmount\"\n                            fun_safeTransfer(cleaned_10, /** @src 12:7578:7588  \"msg.sender\" */ caller(), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sload(/** @src 12:12969:12982  \"disputeAmount\" */ 0x6c))\n                            /// @src 12:13018:13062  \"_endOfDisputePeriod(uint48(block.timestamp))\"\n                            let _120 := fun_endOfDisputePeriod(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 12:13045:13060  \"block.timestamp\" */ timestamp(), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0xffffffffffff))\n                            let _121 := sload(/** @src 12:12634:12642  \"disputer\" */ _118)\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            sstore(/** @src 12:12634:12642  \"disputer\" */ _118, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ or(and(_121, not(shl(160, 0xffffffffffff))), and(shl(160, _120), shl(160, 0xffffffffffff))))\n                        }\n                        default /// @src 12:12686:13073  \"if (valid) {...\"\n                        {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            let cleaned_11 := and(sload(/** @src 12:12718:12730  \"disputeToken\" */ 0x69), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _113)\n                            let cleaned_12 := and(sload(/** @src 12:12634:12642  \"disputer\" */ _118), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _113)\n                            /// @src 12:12755:12768  \"disputeAmount\"\n                            fun_safeTransfer(cleaned_11, cleaned_12, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sload(/** @src 12:12755:12768  \"disputeAmount\" */ 0x6c))\n                            fun_revokeTree()\n                        }\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        sstore(/** @src 12:12634:12642  \"disputer\" */ _118, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(sload(/** @src 12:12634:12642  \"disputer\" */ _118), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 12:13118:13140  \"DisputeResolved(valid)\"\n                        let _122 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        mstore(_122, _112)\n                        /// @src 12:13118:13140  \"DisputeResolved(valid)\"\n                        log1(_122, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32, /** @src 12:13118:13140  \"DisputeResolved(valid)\" */ 0x8015c5005d9ad5d85ca80d3f894f08e0159277704c54166e5cff108800fa80cd)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0x95788835 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _123 := sub(shl(160, 1), 1)\n                        let cleaned_13 := and(sload(/** @src 12:7562:7566  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _123)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _124 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        mstore(_124, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(227, 0x1c86b037))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        mstore(/** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ add(_124, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 12:7578:7588  \"msg.sender\" */ caller())\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let _125 := staticcall(gas(), cleaned_13, _124, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 12:7562:7589  \"core.isGovernor(msg.sender)\" */ _124, 32)\n                        if iszero(_125)\n                        {\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            let pos_9 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                            returndatacopy(pos_9, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                            revert(pos_9, returndatasize())\n                        }\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        let expr_27 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                        /// @src 12:7562:7589  \"core.isGovernor(msg.sender)\"\n                        if _125\n                        {\n                            let _126 := 32\n                            if gt(_126, returndatasize()) { _126 := returndatasize() }\n                            finalize_allocation(_124, _126)\n                            expr_27 := abi_decode_bool_fromMemory(_124, add(_124, _126))\n                        }\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        if /** @src 12:7561:7589  \"!core.isGovernor(msg.sender)\" */ iszero(expr_27)\n                        /// @src 12:7557:7611  \"if (!core.isGovernor(msg.sender)) revert NotGovernor()\"\n                        {\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            let _127 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7598:7611  \"NotGovernor()\"\n                            mstore(_127, shl(226, 0x3b8d9d75))\n                            revert(_127, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        /// @src 12:13324:13378  \"if (disputer != address(0)) revert UnresolvedDispute()\"\n                        if /** @src 12:13328:13350  \"disputer != address(0)\" */ iszero(iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(sload(/** @src 12:13328:13336  \"disputer\" */ 0x6b), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _123)))\n                        /// @src 12:13324:13378  \"if (disputer != address(0)) revert UnresolvedDispute()\"\n                        {\n                            /// @src 12:13359:13378  \"UnresolvedDispute()\"\n                            let _128 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:13359:13378  \"UnresolvedDispute()\"\n                            mstore(_128, /** @src 12:15159:15178  \"UnresolvedDispute()\" */ shl(226, 0x0160c95d))\n                            /// @src 12:13359:13378  \"UnresolvedDispute()\"\n                            revert(_128, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        /// @src 12:13324:13378  \"if (disputer != address(0)) revert UnresolvedDispute()\"\n                        fun_revokeTree()\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0xbdac7ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_8 := abi_decode_address_23263()\n                        let value1_4 := abi_decode_address()\n                        let _129 := sub(shl(160, 1), 1)\n                        let _130 := and(/** @src 12:7784:7802  \"user != msg.sender\" */ value0_8, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _129)\n                        /// @src 12:7784:7842  \"user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1\"\n                        let expr_28 := /** @src 12:7784:7802  \"user != msg.sender\" */ iszero(eq(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _130, /** @src 12:7792:7802  \"msg.sender\" */ caller()))\n                        /// @src 12:7784:7842  \"user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1\"\n                        if expr_28\n                        {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(0, /** @src 12:7792:7802  \"msg.sender\" */ caller())\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(32, /** @src 12:7806:7825  \"canUpdateMerkleRoot\" */ 0x6e)\n                            /// @src 12:7784:7842  \"user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1\"\n                            expr_28 := /** @src 12:7806:7842  \"canUpdateMerkleRoot[msg.sender] != 1\" */ iszero(eq(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sload(keccak256(0, 64)), /** @src 12:7841:7842  \"1\" */ 0x01))\n                        }\n                        /// @src 12:7784:7884  \"user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1 && !core.isGovernorOrGuardian(msg.sender)\"\n                        let expr_29 := expr_28\n                        if expr_28\n                        {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            let cleaned_14 := and(sload(/** @src 12:7847:7851  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _129)\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            let _131 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            mstore(_131, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(224, 0x521d4de9))\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(/** @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\" */ add(_131, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 12:7792:7802  \"msg.sender\" */ caller())\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            let _132 := staticcall(gas(), cleaned_14, _131, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\" */ _131, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32)\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            if iszero(_132)\n                            {\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                let pos_10 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                returndatacopy(pos_10, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                                revert(pos_10, returndatasize())\n                            }\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            let expr_30 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                            /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                            if _132\n                            {\n                                let _133 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32\n                                /// @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\"\n                                if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _133, /** @src 12:7847:7884  \"core.isGovernorOrGuardian(msg.sender)\" */ returndatasize()) { _133 := returndatasize() }\n                                finalize_allocation(_131, _133)\n                                expr_30 := abi_decode_bool_fromMemory(_131, add(_131, _133))\n                            }\n                            /// @src 12:7784:7884  \"user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1 && !core.isGovernorOrGuardian(msg.sender)\"\n                            expr_29 := /** @src 12:7846:7884  \"!core.isGovernorOrGuardian(msg.sender)\" */ iszero(expr_30)\n                        }\n                        /// @src 12:7780:7917  \"if (user != msg.sender && canUpdateMerkleRoot[msg.sender] != 1 && !core.isGovernorOrGuardian(msg.sender))...\"\n                        if expr_29\n                        {\n                            /// @src 12:7905:7917  \"NotTrusted()\"\n                            let _134 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:7905:7917  \"NotTrusted()\"\n                            mstore(_134, shl(225, 0x61153247))\n                            revert(_134, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        mstore(0, _130)\n                        mstore(32, /** @src 12:13955:13964  \"operators\" */ 0x70)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _135 := keccak256(0, 64)\n                        let _136 := and(value1_4, _129)\n                        mstore(0, _136)\n                        mstore(32, _135)\n                        let _137 := sload(keccak256(0, 64))\n                        let diff_3 := sub(/** @src 12:14018:14019  \"1\" */ 0x01, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _137)\n                        if gt(diff_3, /** @src 12:14018:14019  \"1\" */ 0x01)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        mstore(0, _130)\n                        mstore(32, /** @src 12:13955:13964  \"operators\" */ 0x70)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _138 := keccak256(0, 64)\n                        mstore(0, _136)\n                        mstore(32, _138)\n                        sstore(keccak256(0, 64), diff_3)\n                        /// @src 12:14045:14091  \"OperatorToggled(user, operator, oldValue == 0)\"\n                        let _139 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        mstore(_139, /** @src 12:14077:14090  \"oldValue == 0\" */ iszero(_137))\n                        /// @src 12:14045:14091  \"OperatorToggled(user, operator, oldValue == 0)\"\n                        log3(_139, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32, /** @src 12:14045:14091  \"OperatorToggled(user, operator, oldValue == 0)\" */ 0x42343f44c66ea1eaffa334760d3da2cb731d2a0b3b3e30423df997faa36cc95c, _130, _136)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0xc4d66de8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_8 := calldataload(4)\n                        let _140 := and(value_8, sub(shl(160, 1), 1))\n                        if iszero(eq(value_8, _140)) { revert(0, 0) }\n                        let _141 := sload(0)\n                        /// @src 3:3336:3370  \"isTopLevelCall && _initialized < 1\"\n                        let expr_31 := /** @src 3:3290:3304  \"!_initializing\" */ iszero(/** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ and(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ shr(8, _141), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ 0xff))\n                        /// @src 3:3336:3370  \"isTopLevelCall && _initialized < 1\"\n                        let expr_32 := expr_31\n                        if expr_31\n                        {\n                            expr_31 := /** @src 3:3354:3370  \"_initialized < 1\" */ lt(/** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ and(_141, 0xff), /** @src 3:3369:3370  \"1\" */ 0x01)\n                        }\n                        /// @src 3:3335:3443  \"(isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1)\"\n                        let expr_33 := expr_31\n                        if iszero(expr_31)\n                        {\n                            /// @src 3:3376:3442  \"!AddressUpgradeable.isContract(address(this)) && _initialized == 1\"\n                            let expr_34 := /** @src 5:1476:1499  \"account.code.length > 0\" */ iszero(/** @src 5:1476:1495  \"account.code.length\" */ extcodesize(/** @src 3:3415:3419  \"this\" */ address()))\n                            /// @src 3:3376:3442  \"!AddressUpgradeable.isContract(address(this)) && _initialized == 1\"\n                            if expr_34\n                            {\n                                expr_34 := /** @src 3:3425:3442  \"_initialized == 1\" */ eq(/** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ and(_141, 0xff), /** @src 3:3441:3442  \"1\" */ 0x01)\n                            }\n                            /// @src 3:3335:3443  \"(isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1)\"\n                            expr_33 := expr_34\n                        }\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        if iszero(expr_33)\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 46)\n                            mstore(add(memPtr_9, 68), \"Initializable: contract is alrea\")\n                            mstore(add(memPtr_9, 100), \"dy initialized\")\n                            revert(memPtr_9, 132)\n                        }\n                        sstore(0, or(and(_141, not(255)), /** @src 3:3540:3541  \"1\" */ 0x01))\n                        /// @src 3:3551:3616  \"if (isTopLevelCall) {...\"\n                        if expr_32\n                        {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            sstore(0, or(and(_141, not(65535)), 257))\n                        }\n                        /// @src 12:8125:8179  \"if (address(_core) == address(0)) revert ZeroAddress()\"\n                        if /** @src 12:8129:8157  \"address(_core) == address(0)\" */ iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _140)\n                        /// @src 12:8125:8179  \"if (address(_core) == address(0)) revert ZeroAddress()\"\n                        {\n                            /// @src 12:8166:8179  \"ZeroAddress()\"\n                            let _142 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:8166:8179  \"ZeroAddress()\"\n                            mstore(_142, shl(224, 0xd92e233d))\n                            revert(_142, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        sstore(/** @src 12:8189:8201  \"core = _core\" */ 0x6a, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ or(and(sload(/** @src 12:8189:8201  \"core = _core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ shl(160, 0xffffffffffffffffffffffff)), _140))\n                        /// @src 3:3636:3735  \"if (isTopLevelCall) {...\"\n                        if expr_32\n                        {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            sstore(0, and(sload(0), not(65280)))\n                            /// @src 3:3710:3724  \"Initialized(1)\"\n                            let _143 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            mstore(_143, /** @src 3:3540:3541  \"1\" */ 0x01)\n                            /// @src 3:3710:3724  \"Initialized(1)\"\n                            log1(_143, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 32, /** @src 3:3710:3724  \"Initialized(1)\" */ 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498)\n                        }\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0xc748d261 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_9 := and(sload(/** @src 12:5089:5115  \"IERC20 public disputeToken\" */ 105), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1))\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, value_9)\n                        return(memPos_8, 32)\n                    }\n                    case 0xcce80e7a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _144 := sload(/** @src 12:4996:5022  \"MerkleTree public lastTree\" */ 103)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _145 := sload(/** @src 12:4996:5022  \"MerkleTree public lastTree\" */ 104)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, _144)\n                        mstore(add(memPos_9, 32), _145)\n                        return(memPos_9, 64)\n                    }\n                    case 0xd9c98087 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let _146 := sload(/** @src 12:11141:11149  \"disputer\" */ 0x6b)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _147 := sub(shl(160, 1), 1)\n                        /// @src 12:11141:11163  \"disputer != address(0)\"\n                        let _148 := iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(_146, _147))\n                        /// @src 12:11141:11494  \"disputer != address(0) ||...\"\n                        let expr_35 := /** @src 12:11141:11163  \"disputer != address(0)\" */ iszero(_148)\n                        /// @src 12:11141:11494  \"disputer != address(0) ||...\"\n                        if _148\n                        {\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(0, /** @src 12:11388:11398  \"msg.sender\" */ caller())\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(0x20, /** @src 12:11368:11387  \"canUpdateMerkleRoot\" */ 0x6e)\n                            /// @src 12:11368:11404  \"canUpdateMerkleRoot[msg.sender] != 1\"\n                            let _149 := eq(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sload(keccak256(0, 64)), /** @src 12:11403:11404  \"1\" */ 0x01)\n                            /// @src 12:11368:11444  \"canUpdateMerkleRoot[msg.sender] != 1 || block.timestamp < endOfDisputePeriod\"\n                            let expr_36 := /** @src 12:11368:11404  \"canUpdateMerkleRoot[msg.sender] != 1\" */ iszero(_149)\n                            /// @src 12:11368:11444  \"canUpdateMerkleRoot[msg.sender] != 1 || block.timestamp < endOfDisputePeriod\"\n                            if _149\n                            {\n                                expr_36 := /** @src 12:11408:11444  \"block.timestamp < endOfDisputePeriod\" */ lt(/** @src 12:11408:11423  \"block.timestamp\" */ timestamp(), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(shr(160, _146), 0xffffffffffff))\n                            }\n                            /// @src 12:11367:11493  \"(canUpdateMerkleRoot[msg.sender] != 1 || block.timestamp < endOfDisputePeriod) &&...\"\n                            let expr_37 := expr_36\n                            if expr_36\n                            {\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                let cleaned_15 := and(sload(/** @src 12:11466:11470  \"core\" */ 0x6a), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _147)\n                                /// @src 12:11466:11493  \"core.isGovernor(msg.sender)\"\n                                let _150 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                /// @src 12:11466:11493  \"core.isGovernor(msg.sender)\"\n                                mstore(_150, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(227, 0x1c86b037))\n                                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                                mstore(/** @src 12:11466:11493  \"core.isGovernor(msg.sender)\" */ add(_150, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4), /** @src 12:11388:11398  \"msg.sender\" */ caller())\n                                /// @src 12:11466:11493  \"core.isGovernor(msg.sender)\"\n                                let _151 := staticcall(gas(), cleaned_15, _150, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 36, /** @src 12:11466:11493  \"core.isGovernor(msg.sender)\" */ _150, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0x20)\n                                /// @src 12:11466:11493  \"core.isGovernor(msg.sender)\"\n                                if iszero(_151)\n                                {\n                                    /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                    let pos_11 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                                    /// @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\"\n                                    returndatacopy(pos_11, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ returndatasize())\n                                    revert(pos_11, returndatasize())\n                                }\n                                /// @src 12:11466:11493  \"core.isGovernor(msg.sender)\"\n                                let expr_38 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0\n                                /// @src 12:11466:11493  \"core.isGovernor(msg.sender)\"\n                                if _151\n                                {\n                                    let _152 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0x20\n                                    /// @src 12:11466:11493  \"core.isGovernor(msg.sender)\"\n                                    if gt(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _152, /** @src 12:11466:11493  \"core.isGovernor(msg.sender)\" */ returndatasize()) { _152 := returndatasize() }\n                                    finalize_allocation(_150, _152)\n                                    expr_38 := abi_decode_bool_fromMemory(_150, add(_150, _152))\n                                }\n                                /// @src 12:11367:11493  \"(canUpdateMerkleRoot[msg.sender] != 1 || block.timestamp < endOfDisputePeriod) &&...\"\n                                expr_37 := /** @src 12:11465:11493  \"!core.isGovernor(msg.sender)\" */ iszero(expr_38)\n                            }\n                            /// @src 12:11141:11494  \"disputer != address(0) ||...\"\n                            expr_35 := expr_37\n                        }\n                        /// @src 12:11124:11524  \"if (...\"\n                        if expr_35\n                        {\n                            /// @src 12:11512:11524  \"NotTrusted()\"\n                            let _153 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                            /// @src 12:11512:11524  \"NotTrusted()\"\n                            mstore(_153, /** @src 12:7905:7917  \"NotTrusted()\" */ shl(225, 0x61153247))\n                            /// @src 12:11512:11524  \"NotTrusted()\"\n                            revert(_153, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 4)\n                        }\n                        let memPtr_10 := mload(64)\n                        finalize_allocation_23281(memPtr_10)\n                        let _154 := sload(/** @src 12:11564:11568  \"tree\" */ 0x65)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        mstore(memPtr_10, _154)\n                        let _155 := sload(102)\n                        mstore(add(memPtr_10, 32), _155)\n                        let value_10 := calldataload(4)\n                        sstore(/** @src 12:11564:11568  \"tree\" */ 0x65, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ value_10)\n                        let value_11 := calldataload(36)\n                        sstore(102, value_11)\n                        sstore(/** @src 12:11600:11620  \"lastTree = _lastTree\" */ 0x67, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _154)\n                        sstore(104, _155)\n                        /// @src 12:11653:11697  \"_endOfDisputePeriod(uint48(block.timestamp))\"\n                        let expr_39 := fun_endOfDisputePeriod(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 12:11680:11695  \"block.timestamp\" */ timestamp(), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0xffffffffffff))\n                        sstore(/** @src 12:11141:11149  \"disputer\" */ 0x6b, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ or(and(_146, not(shl(160, 0xffffffffffff))), and(shl(160, expr_39), shl(160, 0xffffffffffff))))\n                        /// @src 12:11755:11814  \"TreeUpdated(_tree.merkleRoot, _tree.ipfsHash, _endOfPeriod)\"\n                        let _156 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                        /// @src 12:11755:11814  \"TreeUpdated(_tree.merkleRoot, _tree.ipfsHash, _endOfPeriod)\"\n                        log1(_156, sub(abi_encode_bytes32_bytes32_uint48(_156, value_10, value_11, expr_39), _156), 0x23aa2e4f757a7bd974085d3e11439a843b137b30905e3ffd51b2097c34aef62e)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        return(0, 0)\n                    }\n                    case 0xe57480e5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_23263(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 12:5849:5903  \"mapping(address => uint256) public canUpdateMerkleRoot\" */ 110)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _157 := sload(keccak256(0, 64))\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, _157)\n                        return(memPos_10, 32)\n                    }\n                    case 0xf2f4eb26 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_12 := and(sload(/** @src 12:5178:5195  \"ICore public core\" */ 106), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1))\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, value_12)\n                        return(memPos_11, 32)\n                    }\n                    case 0xfd54b228 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _158 := sload(/** @src 12:4882:4904  \"MerkleTree public tree\" */ 101)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let _159 := sload(/** @src 12:4882:4904  \"MerkleTree public tree\" */ 102)\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, _158)\n                        mstore(add(memPos_12, 32), _159)\n                        return(memPos_12, 64)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_23263() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_23281(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_31460(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 9:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ not(31)))\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), /** @src 9:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ not(31)), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0x20)\n            }\n            function abi_decode_available_length_string(src, length, end) -> array\n            {\n                let _1 := array_allocation_size_string(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n            function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n            }\n            function require_helper_stringliteral_36e1(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"Function must be called through \")\n                    mstore(add(memPtr, 100), \"delegatecall\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_52f1(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 44)\n                    mstore(add(memPtr, 68), \"Function must be called through \")\n                    mstore(add(memPtr, 100), \"active proxy\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 80 @src 1:1805:2086  \"function _setImplementation(address newImplementation) private {...\"\n            function fun_setImplementation(var_newImplementation)\n            {\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                if /** @src 5:1476:1499  \"account.code.length > 0\" */ iszero(/** @src 5:1476:1495  \"account.code.length\" */ extcodesize(var_newImplementation))\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC1967: new implementation is n\")\n                    mstore(add(memPtr, 100), \"ot a contract\")\n                    revert(memPtr, 132)\n                }\n                /// @src 1:1292:1358  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                let _1 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                sstore(/** @src 1:1292:1358  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _1, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ or(and(sload(/** @src 1:1292:1358  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _1), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(var_newImplementation, sub(shl(160, 1), 1))))\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_string(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 956 @src 5:7438:7733  \"function verifyCallResult(...\"\n            function fun_verifyCallResult(var_success, var_returndata_mpos, var_errorMessage_939_mpos) -> var_942_mpos\n            {\n                /// @src 5:7584:7596  \"bytes memory\"\n                var_942_mpos := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 96\n                /// @src 5:7608:7727  \"if (success) {...\"\n                switch var_success\n                case 0 {\n                    /// @src 5:7703:7715  \"errorMessage\"\n                    fun_revert(var_returndata_mpos, var_errorMessage_939_mpos)\n                }\n                default /// @src 5:7608:7727  \"if (success) {...\"\n                {\n                    /// @src 5:7635:7652  \"return returndata\"\n                    var_942_mpos := var_returndata_mpos\n                    leave\n                }\n            }\n            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), /** @src 9:1482:1550  \"abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\" */ not(31))), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 64)\n            }\n            /// @ast-id 976 @src 5:7739:8279  \"function _revert(bytes memory returndata, string memory errorMessage) private pure {...\"\n            function fun_revert(var_returndata_958_mpos, var_errorMessage_960_mpos)\n            {\n                /// @src 5:7894:8273  \"if (returndata.length > 0) {...\"\n                switch /** @src 5:7898:7919  \"returndata.length > 0\" */ iszero(iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(/** @src 5:7898:7915  \"returndata.length\" */ var_returndata_958_mpos)))\n                case /** @src 5:7894:8273  \"if (returndata.length > 0) {...\" */ 0 {\n                    /// @src 5:8242:8262  \"revert(errorMessage)\"\n                    let _1 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                    /// @src 5:8242:8262  \"revert(errorMessage)\"\n                    mstore(_1, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 5:8242:8262  \"revert(errorMessage)\"\n                    revert(_1, sub(abi_encode_string(add(_1, 4), var_errorMessage_960_mpos), _1))\n                }\n                default /// @src 5:7894:8273  \"if (returndata.length > 0) {...\"\n                {\n                    /// @src 5:8070:8212  \"assembly {...\"\n                    revert(add(32, var_returndata_958_mpos), mload(var_returndata_958_mpos))\n                }\n            }\n            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                value0 := value\n            }\n            function calldata_array_index_access_address_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(base_ref, shl(5, index))\n            }\n            function read_from_calldatat_address(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                returnValue := value\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 1184 @src 9:941:1116  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n            function fun_safeTransfer(var_token_1164_address, var_to, var_value)\n            {\n                /// @src 9:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                let expr_1180_mpos := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                /// @src 9:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                mstore(add(expr_1180_mpos, 0x20), /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(224, 0xa9059cbb))\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                mstore(/** @src 9:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\" */ add(expr_1180_mpos, 36), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(var_to, sub(shl(160, 1), 1)))\n                mstore(add(/** @src 9:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\" */ expr_1180_mpos, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 68), var_value)\n                /// @src 9:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                mstore(expr_1180_mpos, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 68)\n                let newFreePtr := add(expr_1180_mpos, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_1180_mpos))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, /** @src 9:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\" */ 36)\n                }\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                mstore(64, newFreePtr)\n                /// @src 9:1050:1108  \"abi.encodeWithSelector(token.transfer.selector, to, value)\"\n                fun_callOptionalReturn(var_token_1164_address, expr_1180_mpos)\n            }\n            /// @ast-id 1478 @src 9:5196:5838  \"function _callOptionalReturn(IERC20 token, bytes memory data) private {...\"\n            function fun_callOptionalReturn(var_token_address, var_data_mpos)\n            {\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                let _1 := and(/** @src 9:5641:5655  \"address(token)\" */ var_token_address, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sub(shl(160, 1), 1))\n                let memPtr := mload(64)\n                finalize_allocation_23281(memPtr)\n                let _2 := 32\n                mstore(memPtr, _2)\n                mstore(add(memPtr, _2), \"SafeERC20: low-level call failed\")\n                /// @src 10:5487:5518  \"target.call{value: value}(data)\"\n                let expr_component := call(gas(), _1, /** @src -1:-1:-1 */ 0, /** @src 10:5487:5518  \"target.call{value: value}(data)\" */ add(var_data_mpos, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _2), /** @src 10:5487:5518  \"target.call{value: value}(data)\" */ mload(var_data_mpos), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 10:5528:5604  \"return verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                let var_mpos := /** @src 10:5535:5604  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ fun_verifyCallResultFromTarget(_1, expr_component, /** @src 10:5487:5518  \"target.call{value: value}(data)\" */ extract_returndata(), /** @src 10:5535:5604  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr)\n                /// @src 9:5728:5745  \"returndata.length\"\n                let expr := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(/** @src 9:5728:5745  \"returndata.length\" */ var_mpos)\n                /// @src 9:5728:5784  \"returndata.length == 0 || abi.decode(returndata, (bool))\"\n                let expr_1 := /** @src 9:5728:5750  \"returndata.length == 0\" */ iszero(expr)\n                /// @src 9:5728:5784  \"returndata.length == 0 || abi.decode(returndata, (bool))\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 9:5754:5784  \"abi.decode(returndata, (bool))\" */ abi_decode_bool_fromMemory(add(var_mpos, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _2), /** @src 9:5754:5784  \"abi.decode(returndata, (bool))\" */ add(add(var_mpos, expr), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _2))\n                }\n                if iszero(expr_1)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                    mstore(add(memPtr_1, 4), _2)\n                    mstore(add(memPtr_1, 36), 42)\n                    mstore(add(memPtr_1, 68), \"SafeERC20: ERC20 operation did n\")\n                    mstore(add(memPtr_1, 100), \"ot succeed\")\n                    revert(memPtr_1, 132)\n                }\n            }\n            /// @ast-id 1812 @src 10:7671:8299  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_1780_mpos, var_errorMessage_mpos) -> var_mpos\n            {\n                /// @src 10:7851:7863  \"bytes memory\"\n                var_mpos := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 96\n                /// @src 10:7875:8293  \"if (success) {...\"\n                switch var_success\n                case 0 {\n                    /// @src 10:8269:8281  \"errorMessage\"\n                    fun_revert(var_returndata_1780_mpos, var_errorMessage_mpos)\n                }\n                default /// @src 10:7875:8293  \"if (success) {...\"\n                {\n                    /// @src 10:7902:8188  \"if (returndata.length == 0) {...\"\n                    if /** @src 10:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(/** @src 10:7906:7923  \"returndata.length\" */ var_returndata_1780_mpos))\n                    /// @src 10:7902:8188  \"if (returndata.length == 0) {...\"\n                    {\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        if /** @src 5:1476:1499  \"account.code.length > 0\" */ iszero(/** @src 5:1476:1495  \"account.code.length\" */ extcodesize(var_target))\n                        /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, /** @src 1:951:1017  \"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\" */ shl(229, 4594637))\n                            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 29)\n                            mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @src 10:8201:8218  \"return returndata\"\n                    var_mpos := var_returndata_1780_mpos\n                    leave\n                }\n            }\n            /// @ast-id 3839 @src 12:10408:10612  \"function getMerkleRoot() public view returns (bytes32) {...\"\n            function fun_getMerkleRoot() -> var\n            {\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                let _1 := sload(/** @src 12:10496:10514  \"endOfDisputePeriod\" */ 0x6b)\n                /// @src 12:10477:10540  \"block.timestamp >= endOfDisputePeriod && disputer == address(0)\"\n                let expr := /** @src 12:10477:10514  \"block.timestamp >= endOfDisputePeriod\" */ iszero(lt(/** @src 12:10477:10492  \"block.timestamp\" */ timestamp(), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(shr(160, _1), 0xffffffffffff)))\n                /// @src 12:10477:10540  \"block.timestamp >= endOfDisputePeriod && disputer == address(0)\"\n                if expr\n                {\n                    expr := /** @src 12:10518:10540  \"disputer == address(0)\" */ iszero(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(_1, sub(shl(160, 1), 1)))\n                }\n                /// @src 12:10473:10605  \"if (block.timestamp >= endOfDisputePeriod && disputer == address(0)) return tree.merkleRoot;...\"\n                switch expr\n                case 0 {\n                    /// @src 12:10579:10605  \"return lastTree.merkleRoot\"\n                    var := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sload(/** @src 12:10586:10594  \"lastTree\" */ 0x67)\n                    /// @src 12:10579:10605  \"return lastTree.merkleRoot\"\n                    leave\n                }\n                default /// @src 12:10473:10605  \"if (block.timestamp >= endOfDisputePeriod && disputer == address(0)) return tree.merkleRoot;...\"\n                {\n                    /// @src 12:10542:10564  \"return tree.merkleRoot\"\n                    var := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ sload(/** @src 12:10549:10553  \"tree\" */ 0x65)\n                    /// @src 12:10542:10564  \"return tree.merkleRoot\"\n                    leave\n                }\n            }\n            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n            function abi_encode_bytes32_bytes32_uint48(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), and(value2, 0xffffffffffff))\n            }\n            /// @src 12:4722:4726  \"3600\"\n            function checked_mul_uint48(x) -> product\n            {\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                let _1 := 0xffffffffffff\n                /// @src 12:4722:4726  \"3600\"\n                let product_raw := mul(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 12:4722:4726  \"3600\" */ x, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _1), 3600)\n                /// @src 12:4722:4726  \"3600\"\n                product := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 12:4722:4726  \"3600\" */ product_raw, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _1)\n                /// @src 12:4722:4726  \"3600\"\n                if iszero(eq(product, product_raw))\n                {\n                    /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 4287 @src 12:15425:15770  \"function _revokeTree() internal {...\"\n            function fun_revokeTree()\n            {\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                let memPtr := mload(64)\n                finalize_allocation_23281(memPtr)\n                let _1 := sload(/** @src 12:15493:15501  \"lastTree\" */ 0x67)\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                mstore(memPtr, _1)\n                let _2 := sload(104)\n                mstore(add(memPtr, 32), _2)\n                sstore(/** @src 12:15511:15533  \"endOfDisputePeriod = 0\" */ 0x6b, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(sload(/** @src 12:15511:15533  \"endOfDisputePeriod = 0\" */ 0x6b), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ not(shl(160, 0xffffffffffff))))\n                sstore(/** @src 12:15543:15555  \"tree = _tree\" */ 0x65, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _1)\n                sstore(102, _2)\n                /// @src 12:15570:15579  \"Revoked()\"\n                log1(/** @src -1:-1:-1 */ 0, 0, /** @src 12:15570:15579  \"Revoked()\" */ 0x44825a4b2df8acb19ce4e1afba9aa850c8b65cdb7942e2078f27d0b0960efee6)\n                /// @src 12:15677:15740  \"(uint48(block.timestamp) / _EPOCH_DURATION) * (_EPOCH_DURATION)\"\n                let expr := checked_mul_uint48(/** @src 12:4722:4726  \"3600\" */ div(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 12:15685:15700  \"block.timestamp\" */ timestamp(), /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0xffffffffffff), 3600))\n                /// @src 12:15594:15763  \"TreeUpdated(...\"\n                let _3 := /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ mload(64)\n                /// @src 12:15594:15763  \"TreeUpdated(...\"\n                log1(_3, sub(abi_encode_bytes32_bytes32_uint48(_3, _1, _2, expr), _3), 0x23aa2e4f757a7bd974085d3e11439a843b137b30905e3ffd51b2097c34aef62e)\n            }\n            /// @ast-id 4311 @src 12:15922:16101  \"function _endOfDisputePeriod(uint48 treeUpdate) internal view returns (uint48) {...\"\n            function fun_endOfDisputePeriod(var_treeUpdate) -> var\n            {\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                let _1 := 0xffffffffffff\n                let diff := add(and(var_treeUpdate, _1), not(0))\n                if gt(diff, _1)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0x24)\n                }\n                let sum := add(and(/** @src 12:4722:4726  \"3600\" */ div(/** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ and(/** @src 12:16019:16053  \"(treeUpdate - 1) / _EPOCH_DURATION\" */ diff, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ _1), 3600), _1), 1)\n                if gt(sum, _1)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0x24)\n                }\n                let sum_1 := add(and(sum, _1), shr(208, sload(/** @src 12:16060:16073  \"disputePeriod\" */ 0x6b)))\n                /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n                if gt(sum_1, _1)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\" */ 0x24)\n                }\n                /// @src 12:16011:16094  \"return ((treeUpdate - 1) / _EPOCH_DURATION + 1 + disputePeriod) * (_EPOCH_DURATION)\"\n                var := /** @src 12:16018:16094  \"((treeUpdate - 1) / _EPOCH_DURATION + 1 + disputePeriod) * (_EPOCH_DURATION)\" */ checked_mul_uint48(/** @src 12:16019:16073  \"(treeUpdate - 1) / _EPOCH_DURATION + 1 + disputePeriod\" */ sum_1)\n            }\n            /// @src 12:4574:17017  \"contract Distributor is UUPSHelper {...\"\n            function memory_array_index_access_bytes32_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220d5cf4b01ca43eeecf22af77f106599922db96559c049c37752563016fc6622f764736f6c63430008110033\"\n    }\n}\n","hash":"010004d795e2d7c60eb44a6d8dc47d5d10d4f916913b5a7f3202fc09df65e7f1","factoryDependencies":{}}},"contracts/interfaces/ICore.sol":{"ICore":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"isGovernor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"isGovernorOrGuardian","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isGovernor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isGovernorOrGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Angle Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"isGovernor(address)\":{\"params\":{\"admin\":\"Address to check\"},\"returns\":{\"_0\":\"Whether the address has the `GOVERNOR_ROLE` or not\"}},\"isGovernorOrGuardian(address)\":{\"details\":\"Governance should make sure when adding a governor to also give this governor the guardian role by calling the `addGovernor` function\",\"params\":{\"admin\":\"Address to check\"},\"returns\":{\"_0\":\"Whether the address has the `GUARDIAN_ROLE` or not\"}}},\"title\":\"ICore\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isGovernor(address)\":{\"notice\":\"Checks whether an address is governor\"},\"isGovernorOrGuardian(address)\":{\"notice\":\"Checks whether an address is a governor or a guardian of a module\"}},\"notice\":\"Interface for the `Core` contracts of smart contract modules used in Angle Labs contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICore.sol\":\"ICore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICore.sol\":{\"keccak256\":\"0x11e92b745193d16934aaeb873c0388041dce2ef3e359a9c3315b668b05903100\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2958b2c0b9b0365a3ddf0d39c3623c4b41cf9d1797d4aeee3bfd02ad255692d9\",\"dweb:/ipfs/QmUkyhLEfW3YfVKcnZ3CxBQj33EdBKsx5rijkezNmGVALL\"]}},\"version\":1}","devdoc":{"author":"Angle Labs, Inc.","kind":"dev","methods":{"isGovernor(address)":{"params":{"admin":"Address to check"},"returns":{"_0":"Whether the address has the `GOVERNOR_ROLE` or not"}},"isGovernorOrGuardian(address)":{"details":"Governance should make sure when adding a governor to also give this governor the guardian role by calling the `addGovernor` function","params":{"admin":"Address to check"},"returns":{"_0":"Whether the address has the `GUARDIAN_ROLE` or not"}}},"title":"ICore","version":1},"userdoc":{"kind":"user","methods":{"isGovernor(address)":{"notice":"Checks whether an address is governor"},"isGovernorOrGuardian(address)":{"notice":"Checks whether an address is a governor or a guardian of a module"}},"notice":"Interface for the `Core` contracts of smart contract modules used in Angle Labs contracts","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"isGovernor(address)":"e43581b8","isGovernorOrGuardian(address)":"521d4de9"}},"irOptimized":""}},"contracts/utils/UUPSHelper.sol":{"UUPSHelper":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Angle Labs., Inc\",\"details\":\"The 0 address check in the modifier allows the use of these modifiers during initialization\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"UUPSHelper\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract for UUPSUpgradeable contracts where the upgradeability is controlled by a specific address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/UUPSHelper.sol\":\"UUPSHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"contracts/interfaces/ICore.sol\":{\"keccak256\":\"0x11e92b745193d16934aaeb873c0388041dce2ef3e359a9c3315b668b05903100\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2958b2c0b9b0365a3ddf0d39c3623c4b41cf9d1797d4aeee3bfd02ad255692d9\",\"dweb:/ipfs/QmUkyhLEfW3YfVKcnZ3CxBQj33EdBKsx5rijkezNmGVALL\"]},\"contracts/utils/Errors.sol\":{\"keccak256\":\"0xfc5e2a6d240998521df671386b373a6943527333c0bd480aa8350d7547d6ee07\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5f328e836c82c0f6bec3684df4558ea4137d843cf8786d2f4a1133ab264c4f21\",\"dweb:/ipfs/QmeV1UsYPBXutW4ptWmcWb6G5ZjUK5XK1boXQPQDvwDvhC\"]},\"contracts/utils/UUPSHelper.sol\":{\"keccak256\":\"0xb8011db6d148c8a111678c8074343c82114b923806aee0f60c48ed05f8bd6c40\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://50c3ecca8c5e46c57a3abc32bb4e74c5983f83722842018715ced14b68528efd\",\"dweb:/ipfs/QmYBTwe1sCieZ3nBLUc3zq1x78rBB9rRDVo9LSDnMTySdv\"]}},\"version\":1}","devdoc":{"author":"Angle Labs., Inc","details":"The 0 address check in the modifier allows the use of these modifiers during initialization","kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"title":"UUPSHelper","version":1},"userdoc":{"kind":"user","methods":{},"notice":"Helper contract for UUPSUpgradeable contracts where the upgradeability is controlled by a specific address","version":1},"storageLayout":{"storage":[{"astId":395,"contract":"contracts/utils/UUPSHelper.sol:UUPSHelper","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":398,"contract":"contracts/utils/UUPSHelper.sol:UUPSHelper","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":377,"contract":"contracts/utils/UUPSHelper.sol:UUPSHelper","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":692,"contract":"contracts/utils/UUPSHelper.sol:UUPSHelper","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"irOptimized":""}}}}}